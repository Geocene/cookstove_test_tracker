# generated by 'xml2py'
# flags '-v -c -kdefst -l nicaiu -o NIDAQmx.py NIDAQmx.xml'
from ctypes import *

def errCheck (result, func, args):
	print 'errCheck', result, func, args
	if result != 0:
		raise RuntimeError(result)
	return (args[0], args[1])


#STRING = c_char_p
#STRING = (c_char_p, 'string', 1)
class STRING(str):
	def __init__(self,s):
		print s

	def __str__(self):
		return 'STRING(%s)' % str.__str__(self)

	@classmethod
	def from_param(cls,param):
		print 'STRING', param
#		return (c_char_p, 'string', 1)

_stdcall_libraries = {}
_stdcall_libraries['nicaiu'] = WinDLL('nicaiu')
_libraries = {}
_libraries['nicaiu'] = CDLL('nicaiu')


int8 = c_byte
uInt8 = c_ubyte
int16 = c_short
uInt16 = c_ushort
int32 = c_long
uInt32 = c_ulong
float32 = c_float
float64 = c_double
int64 = c_longlong
uInt64 = c_ulonglong
bool32 = uInt32
TaskHandle = uInt32
# NIDAQmx.h 1519
DAQmxLoadTask = _stdcall_libraries['nicaiu'].DAQmxLoadTask
DAQmxLoadTask.restype = int32
# DAQmxLoadTask(taskName, taskHandle)
DAQmxLoadTask.argtypes = [STRING, POINTER(TaskHandle)]
# NIDAQmx.h 1520
DAQmxCreateTask = _stdcall_libraries['nicaiu'].DAQmxCreateTask
#DAQmxCreateTask.restype = int32
DAQmxCreateTask.errcheck = errCheck
# DAQmxCreateTask(taskName, taskHandle)
DAQmxCreateTask.argtypes = [STRING, POINTER(TaskHandle)]
# NIDAQmx.h 1522
DAQmxAddGlobalChansToTask = _stdcall_libraries['nicaiu'].DAQmxAddGlobalChansToTask
DAQmxAddGlobalChansToTask.restype = int32
# DAQmxAddGlobalChansToTask(taskHandle, channelNames)
DAQmxAddGlobalChansToTask.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 1524
DAQmxStartTask = _stdcall_libraries['nicaiu'].DAQmxStartTask
DAQmxStartTask.restype = int32
# DAQmxStartTask(taskHandle)
DAQmxStartTask.argtypes = [TaskHandle]
# NIDAQmx.h 1525
DAQmxStopTask = _stdcall_libraries['nicaiu'].DAQmxStopTask
DAQmxStopTask.restype = int32
# DAQmxStopTask(taskHandle)
DAQmxStopTask.argtypes = [TaskHandle]
# NIDAQmx.h 1527
DAQmxClearTask = _stdcall_libraries['nicaiu'].DAQmxClearTask
DAQmxClearTask.restype = int32
# DAQmxClearTask(taskHandle)
DAQmxClearTask.argtypes = [TaskHandle]
# NIDAQmx.h 1529
DAQmxWaitUntilTaskDone = _stdcall_libraries['nicaiu'].DAQmxWaitUntilTaskDone
DAQmxWaitUntilTaskDone.restype = int32
# DAQmxWaitUntilTaskDone(taskHandle, timeToWait)
DAQmxWaitUntilTaskDone.argtypes = [TaskHandle, float64]
# NIDAQmx.h 1530
DAQmxIsTaskDone = _stdcall_libraries['nicaiu'].DAQmxIsTaskDone
DAQmxIsTaskDone.restype = int32
# DAQmxIsTaskDone(taskHandle, isTaskDone)
DAQmxIsTaskDone.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 1532
DAQmxTaskControl = _stdcall_libraries['nicaiu'].DAQmxTaskControl
DAQmxTaskControl.restype = int32
# DAQmxTaskControl(taskHandle, action)
DAQmxTaskControl.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1534
DAQmxGetNthTaskChannel = _stdcall_libraries['nicaiu'].DAQmxGetNthTaskChannel
DAQmxGetNthTaskChannel.restype = int32
# DAQmxGetNthTaskChannel(taskHandle, index, buffer, bufferSize)
DAQmxGetNthTaskChannel.argtypes = [TaskHandle, uInt32, STRING, int32]
# NIDAQmx.h 1536
DAQmxGetTaskAttribute = _libraries['nicaiu'].DAQmxGetTaskAttribute
DAQmxGetTaskAttribute.restype = int32
# DAQmxGetTaskAttribute(taskHandle, attribute, value)
DAQmxGetTaskAttribute.argtypes = [TaskHandle, int32, c_void_p]
DAQmxEveryNSamplesEventCallbackPtr = CFUNCTYPE(int32, c_ulong, c_long, c_ulong, c_void_p)
DAQmxDoneEventCallbackPtr = CFUNCTYPE(int32, c_ulong, c_long, c_void_p)
DAQmxSignalEventCallbackPtr = CFUNCTYPE(int32, c_ulong, c_long, c_void_p)
# NIDAQmx.h 1542
DAQmxRegisterEveryNSamplesEvent = _stdcall_libraries['nicaiu'].DAQmxRegisterEveryNSamplesEvent
DAQmxRegisterEveryNSamplesEvent.restype = int32
# DAQmxRegisterEveryNSamplesEvent(task, everyNsamplesEventType, nSamples, options, callbackFunction, callbackData)
DAQmxRegisterEveryNSamplesEvent.argtypes = [TaskHandle, int32, uInt32, uInt32, DAQmxEveryNSamplesEventCallbackPtr, c_void_p]
# NIDAQmx.h 1543
DAQmxRegisterDoneEvent = _stdcall_libraries['nicaiu'].DAQmxRegisterDoneEvent
DAQmxRegisterDoneEvent.restype = int32
# DAQmxRegisterDoneEvent(task, options, callbackFunction, callbackData)
DAQmxRegisterDoneEvent.argtypes = [TaskHandle, uInt32, DAQmxDoneEventCallbackPtr, c_void_p]
# NIDAQmx.h 1544
DAQmxRegisterSignalEvent = _stdcall_libraries['nicaiu'].DAQmxRegisterSignalEvent
DAQmxRegisterSignalEvent.restype = int32
# DAQmxRegisterSignalEvent(task, signalID, options, callbackFunction, callbackData)
DAQmxRegisterSignalEvent.argtypes = [TaskHandle, int32, uInt32, DAQmxSignalEventCallbackPtr, c_void_p]
# NIDAQmx.h 1551
DAQmxCreateAIVoltageChan = _stdcall_libraries['nicaiu'].DAQmxCreateAIVoltageChan
DAQmxCreateAIVoltageChan.restype = int32
# DAQmxCreateAIVoltageChan(taskHandle, physicalChannel, nameToAssignToChannel, terminalConfig, minVal, maxVal, units, customScaleName)
DAQmxCreateAIVoltageChan.argtypes = [TaskHandle, STRING, STRING, int32, float64, float64, int32, STRING]
# NIDAQmx.h 1552
DAQmxCreateAICurrentChan = _stdcall_libraries['nicaiu'].DAQmxCreateAICurrentChan
DAQmxCreateAICurrentChan.restype = int32
# DAQmxCreateAICurrentChan(taskHandle, physicalChannel, nameToAssignToChannel, terminalConfig, minVal, maxVal, units, shuntResistorLoc, extShuntResistorVal, customScaleName)
DAQmxCreateAICurrentChan.argtypes = [TaskHandle, STRING, STRING, int32, float64, float64, int32, int32, float64, STRING]
# NIDAQmx.h 1553
DAQmxCreateAIThrmcplChan = _stdcall_libraries['nicaiu'].DAQmxCreateAIThrmcplChan
DAQmxCreateAIThrmcplChan.restype = int32
# DAQmxCreateAIThrmcplChan(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, thermocoupleType, cjcSource, cjcVal, cjcChannel)
DAQmxCreateAIThrmcplChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, int32, float64, STRING]
# NIDAQmx.h 1554
DAQmxCreateAIRTDChan = _stdcall_libraries['nicaiu'].DAQmxCreateAIRTDChan
DAQmxCreateAIRTDChan.restype = int32
# DAQmxCreateAIRTDChan(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, rtdType, resistanceConfig, currentExcitSource, currentExcitVal, r0)
DAQmxCreateAIRTDChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, int32, int32, float64, float64]
# NIDAQmx.h 1555
DAQmxCreateAIThrmstrChanIex = _stdcall_libraries['nicaiu'].DAQmxCreateAIThrmstrChanIex
DAQmxCreateAIThrmstrChanIex.restype = int32
# DAQmxCreateAIThrmstrChanIex(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, resistanceConfig, currentExcitSource, currentExcitVal, a, b, c)
DAQmxCreateAIThrmstrChanIex.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, int32, float64, float64, float64, float64]
# NIDAQmx.h 1556
DAQmxCreateAIThrmstrChanVex = _stdcall_libraries['nicaiu'].DAQmxCreateAIThrmstrChanVex
DAQmxCreateAIThrmstrChanVex.restype = int32
# DAQmxCreateAIThrmstrChanVex(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, resistanceConfig, voltageExcitSource, voltageExcitVal, a, b, c, r1)
DAQmxCreateAIThrmstrChanVex.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, int32, float64, float64, float64, float64, float64]
# NIDAQmx.h 1557
DAQmxCreateAIFreqVoltageChan = _stdcall_libraries['nicaiu'].DAQmxCreateAIFreqVoltageChan
DAQmxCreateAIFreqVoltageChan.restype = int32
# DAQmxCreateAIFreqVoltageChan(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, thresholdLevel, hysteresis, customScaleName)
DAQmxCreateAIFreqVoltageChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, float64, float64, STRING]
# NIDAQmx.h 1558
DAQmxCreateAIResistanceChan = _stdcall_libraries['nicaiu'].DAQmxCreateAIResistanceChan
DAQmxCreateAIResistanceChan.restype = int32
# DAQmxCreateAIResistanceChan(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, resistanceConfig, currentExcitSource, currentExcitVal, customScaleName)
DAQmxCreateAIResistanceChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, int32, float64, STRING]
# NIDAQmx.h 1559
DAQmxCreateAIStrainGageChan = _stdcall_libraries['nicaiu'].DAQmxCreateAIStrainGageChan
DAQmxCreateAIStrainGageChan.restype = int32
# DAQmxCreateAIStrainGageChan(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, strainConfig, voltageExcitSource, voltageExcitVal, gageFactor, initialBridgeVoltage, nominalGageResistance, poissonRatio, leadWireResistance, customScaleName)
DAQmxCreateAIStrainGageChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, int32, float64, float64, float64, float64, float64, float64, STRING]
# NIDAQmx.h 1560
DAQmxCreateAIVoltageChanWithExcit = _stdcall_libraries['nicaiu'].DAQmxCreateAIVoltageChanWithExcit
DAQmxCreateAIVoltageChanWithExcit.restype = int32
# DAQmxCreateAIVoltageChanWithExcit(taskHandle, physicalChannel, nameToAssignToChannel, terminalConfig, minVal, maxVal, units, bridgeConfig, voltageExcitSource, voltageExcitVal, useExcitForScaling, customScaleName)
DAQmxCreateAIVoltageChanWithExcit.argtypes = [TaskHandle, STRING, STRING, int32, float64, float64, int32, int32, int32, float64, bool32, STRING]
# NIDAQmx.h 1561
DAQmxCreateAITempBuiltInSensorChan = _stdcall_libraries['nicaiu'].DAQmxCreateAITempBuiltInSensorChan
DAQmxCreateAITempBuiltInSensorChan.restype = int32
# DAQmxCreateAITempBuiltInSensorChan(taskHandle, physicalChannel, nameToAssignToChannel, units)
DAQmxCreateAITempBuiltInSensorChan.argtypes = [TaskHandle, STRING, STRING, int32]
# NIDAQmx.h 1562
DAQmxCreateAIAccelChan = _stdcall_libraries['nicaiu'].DAQmxCreateAIAccelChan
DAQmxCreateAIAccelChan.restype = int32
# DAQmxCreateAIAccelChan(taskHandle, physicalChannel, nameToAssignToChannel, terminalConfig, minVal, maxVal, units, sensitivity, sensitivityUnits, currentExcitSource, currentExcitVal, customScaleName)
DAQmxCreateAIAccelChan.argtypes = [TaskHandle, STRING, STRING, int32, float64, float64, int32, float64, int32, int32, float64, STRING]
# NIDAQmx.h 1564
DAQmxCreateAIMicrophoneChan = _stdcall_libraries['nicaiu'].DAQmxCreateAIMicrophoneChan
DAQmxCreateAIMicrophoneChan.restype = int32
# DAQmxCreateAIMicrophoneChan(taskHandle, physicalChannel, nameToAssignToChannel, terminalConfig, units, micSensitivity, maxSndPressLevel, currentExcitSource, currentExcitVal, customScaleName)
DAQmxCreateAIMicrophoneChan.argtypes = [TaskHandle, STRING, STRING, int32, int32, float64, float64, int32, float64, STRING]
# NIDAQmx.h 1565
DAQmxCreateAIPosLVDTChan = _stdcall_libraries['nicaiu'].DAQmxCreateAIPosLVDTChan
DAQmxCreateAIPosLVDTChan.restype = int32
# DAQmxCreateAIPosLVDTChan(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, sensitivity, sensitivityUnits, voltageExcitSource, voltageExcitVal, voltageExcitFreq, ACExcitWireMode, customScaleName)
DAQmxCreateAIPosLVDTChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, float64, int32, int32, float64, float64, int32, STRING]
# NIDAQmx.h 1566
DAQmxCreateAIPosRVDTChan = _stdcall_libraries['nicaiu'].DAQmxCreateAIPosRVDTChan
DAQmxCreateAIPosRVDTChan.restype = int32
# DAQmxCreateAIPosRVDTChan(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, sensitivity, sensitivityUnits, voltageExcitSource, voltageExcitVal, voltageExcitFreq, ACExcitWireMode, customScaleName)
DAQmxCreateAIPosRVDTChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, float64, int32, int32, float64, float64, int32, STRING]
# NIDAQmx.h 1568
DAQmxCreateAIDeviceTempChan = _stdcall_libraries['nicaiu'].DAQmxCreateAIDeviceTempChan
DAQmxCreateAIDeviceTempChan.restype = int32
# DAQmxCreateAIDeviceTempChan(taskHandle, physicalChannel, nameToAssignToChannel, units)
DAQmxCreateAIDeviceTempChan.argtypes = [TaskHandle, STRING, STRING, int32]
# NIDAQmx.h 1570
DAQmxCreateTEDSAIVoltageChan = _stdcall_libraries['nicaiu'].DAQmxCreateTEDSAIVoltageChan
DAQmxCreateTEDSAIVoltageChan.restype = int32
# DAQmxCreateTEDSAIVoltageChan(taskHandle, physicalChannel, nameToAssignToChannel, terminalConfig, minVal, maxVal, units, customScaleName)
DAQmxCreateTEDSAIVoltageChan.argtypes = [TaskHandle, STRING, STRING, int32, float64, float64, int32, STRING]
# NIDAQmx.h 1571
DAQmxCreateTEDSAICurrentChan = _stdcall_libraries['nicaiu'].DAQmxCreateTEDSAICurrentChan
DAQmxCreateTEDSAICurrentChan.restype = int32
# DAQmxCreateTEDSAICurrentChan(taskHandle, physicalChannel, nameToAssignToChannel, terminalConfig, minVal, maxVal, units, shuntResistorLoc, extShuntResistorVal, customScaleName)
DAQmxCreateTEDSAICurrentChan.argtypes = [TaskHandle, STRING, STRING, int32, float64, float64, int32, int32, float64, STRING]
# NIDAQmx.h 1572
DAQmxCreateTEDSAIThrmcplChan = _stdcall_libraries['nicaiu'].DAQmxCreateTEDSAIThrmcplChan
DAQmxCreateTEDSAIThrmcplChan.restype = int32
# DAQmxCreateTEDSAIThrmcplChan(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, cjcSource, cjcVal, cjcChannel)
DAQmxCreateTEDSAIThrmcplChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, float64, STRING]
# NIDAQmx.h 1573
DAQmxCreateTEDSAIRTDChan = _stdcall_libraries['nicaiu'].DAQmxCreateTEDSAIRTDChan
DAQmxCreateTEDSAIRTDChan.restype = int32
# DAQmxCreateTEDSAIRTDChan(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, resistanceConfig, currentExcitSource, currentExcitVal)
DAQmxCreateTEDSAIRTDChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, int32, float64]
# NIDAQmx.h 1574
DAQmxCreateTEDSAIThrmstrChanIex = _stdcall_libraries['nicaiu'].DAQmxCreateTEDSAIThrmstrChanIex
DAQmxCreateTEDSAIThrmstrChanIex.restype = int32
# DAQmxCreateTEDSAIThrmstrChanIex(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, resistanceConfig, currentExcitSource, currentExcitVal)
DAQmxCreateTEDSAIThrmstrChanIex.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, int32, float64]
# NIDAQmx.h 1575
DAQmxCreateTEDSAIThrmstrChanVex = _stdcall_libraries['nicaiu'].DAQmxCreateTEDSAIThrmstrChanVex
DAQmxCreateTEDSAIThrmstrChanVex.restype = int32
# DAQmxCreateTEDSAIThrmstrChanVex(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, resistanceConfig, voltageExcitSource, voltageExcitVal, r1)
DAQmxCreateTEDSAIThrmstrChanVex.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, int32, float64, float64]
# NIDAQmx.h 1576
DAQmxCreateTEDSAIResistanceChan = _stdcall_libraries['nicaiu'].DAQmxCreateTEDSAIResistanceChan
DAQmxCreateTEDSAIResistanceChan.restype = int32
# DAQmxCreateTEDSAIResistanceChan(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, resistanceConfig, currentExcitSource, currentExcitVal, customScaleName)
DAQmxCreateTEDSAIResistanceChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, int32, float64, STRING]
# NIDAQmx.h 1577
DAQmxCreateTEDSAIStrainGageChan = _stdcall_libraries['nicaiu'].DAQmxCreateTEDSAIStrainGageChan
DAQmxCreateTEDSAIStrainGageChan.restype = int32
# DAQmxCreateTEDSAIStrainGageChan(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, voltageExcitSource, voltageExcitVal, initialBridgeVoltage, leadWireResistance, customScaleName)
DAQmxCreateTEDSAIStrainGageChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, float64, float64, float64, STRING]
# NIDAQmx.h 1578
DAQmxCreateTEDSAIVoltageChanWithExcit = _stdcall_libraries['nicaiu'].DAQmxCreateTEDSAIVoltageChanWithExcit
DAQmxCreateTEDSAIVoltageChanWithExcit.restype = int32
# DAQmxCreateTEDSAIVoltageChanWithExcit(taskHandle, physicalChannel, nameToAssignToChannel, terminalConfig, minVal, maxVal, units, voltageExcitSource, voltageExcitVal, customScaleName)
DAQmxCreateTEDSAIVoltageChanWithExcit.argtypes = [TaskHandle, STRING, STRING, int32, float64, float64, int32, int32, float64, STRING]
# NIDAQmx.h 1579
DAQmxCreateTEDSAIAccelChan = _stdcall_libraries['nicaiu'].DAQmxCreateTEDSAIAccelChan
DAQmxCreateTEDSAIAccelChan.restype = int32
# DAQmxCreateTEDSAIAccelChan(taskHandle, physicalChannel, nameToAssignToChannel, terminalConfig, minVal, maxVal, units, currentExcitSource, currentExcitVal, customScaleName)
DAQmxCreateTEDSAIAccelChan.argtypes = [TaskHandle, STRING, STRING, int32, float64, float64, int32, int32, float64, STRING]
# NIDAQmx.h 1581
DAQmxCreateTEDSAIMicrophoneChan = _stdcall_libraries['nicaiu'].DAQmxCreateTEDSAIMicrophoneChan
DAQmxCreateTEDSAIMicrophoneChan.restype = int32
# DAQmxCreateTEDSAIMicrophoneChan(taskHandle, physicalChannel, nameToAssignToChannel, terminalConfig, units, maxSndPressLevel, currentExcitSource, currentExcitVal, customScaleName)
DAQmxCreateTEDSAIMicrophoneChan.argtypes = [TaskHandle, STRING, STRING, int32, int32, float64, int32, float64, STRING]
# NIDAQmx.h 1582
DAQmxCreateTEDSAIPosLVDTChan = _stdcall_libraries['nicaiu'].DAQmxCreateTEDSAIPosLVDTChan
DAQmxCreateTEDSAIPosLVDTChan.restype = int32
# DAQmxCreateTEDSAIPosLVDTChan(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, voltageExcitSource, voltageExcitVal, voltageExcitFreq, ACExcitWireMode, customScaleName)
DAQmxCreateTEDSAIPosLVDTChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, float64, float64, int32, STRING]
# NIDAQmx.h 1583
DAQmxCreateTEDSAIPosRVDTChan = _stdcall_libraries['nicaiu'].DAQmxCreateTEDSAIPosRVDTChan
DAQmxCreateTEDSAIPosRVDTChan.restype = int32
# DAQmxCreateTEDSAIPosRVDTChan(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, voltageExcitSource, voltageExcitVal, voltageExcitFreq, ACExcitWireMode, customScaleName)
DAQmxCreateTEDSAIPosRVDTChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, float64, float64, int32, STRING]
# NIDAQmx.h 1585
DAQmxCreateAOVoltageChan = _stdcall_libraries['nicaiu'].DAQmxCreateAOVoltageChan
DAQmxCreateAOVoltageChan.restype = int32
# DAQmxCreateAOVoltageChan(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, customScaleName)
DAQmxCreateAOVoltageChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, STRING]
# NIDAQmx.h 1586
DAQmxCreateAOCurrentChan = _stdcall_libraries['nicaiu'].DAQmxCreateAOCurrentChan
DAQmxCreateAOCurrentChan.restype = int32
# DAQmxCreateAOCurrentChan(taskHandle, physicalChannel, nameToAssignToChannel, minVal, maxVal, units, customScaleName)
DAQmxCreateAOCurrentChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, STRING]
# NIDAQmx.h 1588
DAQmxCreateDIChan = _stdcall_libraries['nicaiu'].DAQmxCreateDIChan
DAQmxCreateDIChan.restype = int32
# DAQmxCreateDIChan(taskHandle, lines, nameToAssignToLines, lineGrouping)
DAQmxCreateDIChan.argtypes = [TaskHandle, STRING, STRING, int32]
# NIDAQmx.h 1590
DAQmxCreateDOChan = _stdcall_libraries['nicaiu'].DAQmxCreateDOChan
DAQmxCreateDOChan.restype = int32
# DAQmxCreateDOChan(taskHandle, lines, nameToAssignToLines, lineGrouping)
DAQmxCreateDOChan.argtypes = [TaskHandle, STRING, STRING, int32]
# NIDAQmx.h 1592
DAQmxCreateCIFreqChan = _stdcall_libraries['nicaiu'].DAQmxCreateCIFreqChan
DAQmxCreateCIFreqChan.restype = int32
# DAQmxCreateCIFreqChan(taskHandle, counter, nameToAssignToChannel, minVal, maxVal, units, edge, measMethod, measTime, divisor, customScaleName)
DAQmxCreateCIFreqChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, int32, float64, uInt32, STRING]
# NIDAQmx.h 1593
DAQmxCreateCIPeriodChan = _stdcall_libraries['nicaiu'].DAQmxCreateCIPeriodChan
DAQmxCreateCIPeriodChan.restype = int32
# DAQmxCreateCIPeriodChan(taskHandle, counter, nameToAssignToChannel, minVal, maxVal, units, edge, measMethod, measTime, divisor, customScaleName)
DAQmxCreateCIPeriodChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, int32, float64, uInt32, STRING]
# NIDAQmx.h 1594
DAQmxCreateCICountEdgesChan = _stdcall_libraries['nicaiu'].DAQmxCreateCICountEdgesChan
DAQmxCreateCICountEdgesChan.restype = int32
# DAQmxCreateCICountEdgesChan(taskHandle, counter, nameToAssignToChannel, edge, initialCount, countDirection)
DAQmxCreateCICountEdgesChan.argtypes = [TaskHandle, STRING, STRING, int32, uInt32, int32]
# NIDAQmx.h 1595
DAQmxCreateCIPulseWidthChan = _stdcall_libraries['nicaiu'].DAQmxCreateCIPulseWidthChan
DAQmxCreateCIPulseWidthChan.restype = int32
# DAQmxCreateCIPulseWidthChan(taskHandle, counter, nameToAssignToChannel, minVal, maxVal, units, startingEdge, customScaleName)
DAQmxCreateCIPulseWidthChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, STRING]
# NIDAQmx.h 1596
DAQmxCreateCISemiPeriodChan = _stdcall_libraries['nicaiu'].DAQmxCreateCISemiPeriodChan
DAQmxCreateCISemiPeriodChan.restype = int32
# DAQmxCreateCISemiPeriodChan(taskHandle, counter, nameToAssignToChannel, minVal, maxVal, units, customScaleName)
DAQmxCreateCISemiPeriodChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, STRING]
# NIDAQmx.h 1597
DAQmxCreateCITwoEdgeSepChan = _stdcall_libraries['nicaiu'].DAQmxCreateCITwoEdgeSepChan
DAQmxCreateCITwoEdgeSepChan.restype = int32
# DAQmxCreateCITwoEdgeSepChan(taskHandle, counter, nameToAssignToChannel, minVal, maxVal, units, firstEdge, secondEdge, customScaleName)
DAQmxCreateCITwoEdgeSepChan.argtypes = [TaskHandle, STRING, STRING, float64, float64, int32, int32, int32, STRING]
# NIDAQmx.h 1598
DAQmxCreateCILinEncoderChan = _stdcall_libraries['nicaiu'].DAQmxCreateCILinEncoderChan
DAQmxCreateCILinEncoderChan.restype = int32
# DAQmxCreateCILinEncoderChan(taskHandle, counter, nameToAssignToChannel, decodingType, ZidxEnable, ZidxVal, ZidxPhase, units, distPerPulse, initialPos, customScaleName)
DAQmxCreateCILinEncoderChan.argtypes = [TaskHandle, STRING, STRING, int32, bool32, float64, int32, int32, float64, float64, STRING]
# NIDAQmx.h 1599
DAQmxCreateCIAngEncoderChan = _stdcall_libraries['nicaiu'].DAQmxCreateCIAngEncoderChan
DAQmxCreateCIAngEncoderChan.restype = int32
# DAQmxCreateCIAngEncoderChan(taskHandle, counter, nameToAssignToChannel, decodingType, ZidxEnable, ZidxVal, ZidxPhase, units, pulsesPerRev, initialAngle, customScaleName)
DAQmxCreateCIAngEncoderChan.argtypes = [TaskHandle, STRING, STRING, int32, bool32, float64, int32, int32, uInt32, float64, STRING]
# NIDAQmx.h 1600
DAQmxCreateCIGPSTimestampChan = _stdcall_libraries['nicaiu'].DAQmxCreateCIGPSTimestampChan
DAQmxCreateCIGPSTimestampChan.restype = int32
# DAQmxCreateCIGPSTimestampChan(taskHandle, counter, nameToAssignToChannel, units, syncMethod, customScaleName)
DAQmxCreateCIGPSTimestampChan.argtypes = [TaskHandle, STRING, STRING, int32, int32, STRING]
# NIDAQmx.h 1602
DAQmxCreateCOPulseChanFreq = _stdcall_libraries['nicaiu'].DAQmxCreateCOPulseChanFreq
DAQmxCreateCOPulseChanFreq.restype = int32
# DAQmxCreateCOPulseChanFreq(taskHandle, counter, nameToAssignToChannel, units, idleState, initialDelay, freq, dutyCycle)
DAQmxCreateCOPulseChanFreq.argtypes = [TaskHandle, STRING, STRING, int32, int32, float64, float64, float64]
# NIDAQmx.h 1603
DAQmxCreateCOPulseChanTime = _stdcall_libraries['nicaiu'].DAQmxCreateCOPulseChanTime
DAQmxCreateCOPulseChanTime.restype = int32
# DAQmxCreateCOPulseChanTime(taskHandle, counter, nameToAssignToChannel, units, idleState, initialDelay, lowTime, highTime)
DAQmxCreateCOPulseChanTime.argtypes = [TaskHandle, STRING, STRING, int32, int32, float64, float64, float64]
# NIDAQmx.h 1604
DAQmxCreateCOPulseChanTicks = _stdcall_libraries['nicaiu'].DAQmxCreateCOPulseChanTicks
DAQmxCreateCOPulseChanTicks.restype = int32
# DAQmxCreateCOPulseChanTicks(taskHandle, counter, nameToAssignToChannel, sourceTerminal, idleState, initialDelay, lowTicks, highTicks)
DAQmxCreateCOPulseChanTicks.argtypes = [TaskHandle, STRING, STRING, STRING, int32, int32, int32, int32]
# NIDAQmx.h 1606
DAQmxGetAIChanCalCalDate = _stdcall_libraries['nicaiu'].DAQmxGetAIChanCalCalDate
DAQmxGetAIChanCalCalDate.restype = int32
# DAQmxGetAIChanCalCalDate(taskHandle, channelName, year, month, day, hour, minute)
DAQmxGetAIChanCalCalDate.argtypes = [TaskHandle, STRING, POINTER(uInt32), POINTER(uInt32), POINTER(uInt32), POINTER(uInt32), POINTER(uInt32)]
# NIDAQmx.h 1607
DAQmxSetAIChanCalCalDate = _stdcall_libraries['nicaiu'].DAQmxSetAIChanCalCalDate
DAQmxSetAIChanCalCalDate.restype = int32
# DAQmxSetAIChanCalCalDate(taskHandle, channelName, year, month, day, hour, minute)
DAQmxSetAIChanCalCalDate.argtypes = [TaskHandle, STRING, uInt32, uInt32, uInt32, uInt32, uInt32]
# NIDAQmx.h 1608
DAQmxGetAIChanCalExpDate = _stdcall_libraries['nicaiu'].DAQmxGetAIChanCalExpDate
DAQmxGetAIChanCalExpDate.restype = int32
# DAQmxGetAIChanCalExpDate(taskHandle, channelName, year, month, day, hour, minute)
DAQmxGetAIChanCalExpDate.argtypes = [TaskHandle, STRING, POINTER(uInt32), POINTER(uInt32), POINTER(uInt32), POINTER(uInt32), POINTER(uInt32)]
# NIDAQmx.h 1609
DAQmxSetAIChanCalExpDate = _stdcall_libraries['nicaiu'].DAQmxSetAIChanCalExpDate
DAQmxSetAIChanCalExpDate.restype = int32
# DAQmxSetAIChanCalExpDate(taskHandle, channelName, year, month, day, hour, minute)
DAQmxSetAIChanCalExpDate.argtypes = [TaskHandle, STRING, uInt32, uInt32, uInt32, uInt32, uInt32]
# NIDAQmx.h 1611
DAQmxGetChanAttribute = _libraries['nicaiu'].DAQmxGetChanAttribute
DAQmxGetChanAttribute.restype = int32
# DAQmxGetChanAttribute(taskHandle, channel, attribute, value)
DAQmxGetChanAttribute.argtypes = [TaskHandle, STRING, int32, c_void_p]
# NIDAQmx.h 1612
DAQmxSetChanAttribute = _libraries['nicaiu'].DAQmxSetChanAttribute
DAQmxSetChanAttribute.restype = int32
# DAQmxSetChanAttribute(taskHandle, channel, attribute)
DAQmxSetChanAttribute.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 1613
DAQmxResetChanAttribute = _stdcall_libraries['nicaiu'].DAQmxResetChanAttribute
DAQmxResetChanAttribute.restype = int32
# DAQmxResetChanAttribute(taskHandle, channel, attribute)
DAQmxResetChanAttribute.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 1622
DAQmxCfgSampClkTiming = _stdcall_libraries['nicaiu'].DAQmxCfgSampClkTiming
DAQmxCfgSampClkTiming.restype = int32
# DAQmxCfgSampClkTiming(taskHandle, source, rate, activeEdge, sampleMode, sampsPerChan)
DAQmxCfgSampClkTiming.argtypes = [TaskHandle, STRING, float64, int32, int32, uInt64]
# NIDAQmx.h 1624
DAQmxCfgHandshakingTiming = _stdcall_libraries['nicaiu'].DAQmxCfgHandshakingTiming
DAQmxCfgHandshakingTiming.restype = int32
# DAQmxCfgHandshakingTiming(taskHandle, sampleMode, sampsPerChan)
DAQmxCfgHandshakingTiming.argtypes = [TaskHandle, int32, uInt64]
# NIDAQmx.h 1626
DAQmxCfgBurstHandshakingTimingImportClock = _stdcall_libraries['nicaiu'].DAQmxCfgBurstHandshakingTimingImportClock
DAQmxCfgBurstHandshakingTimingImportClock.restype = int32
# DAQmxCfgBurstHandshakingTimingImportClock(taskHandle, sampleMode, sampsPerChan, sampleClkRate, sampleClkSrc, sampleClkActiveEdge, pauseWhen, readyEventActiveLevel)
DAQmxCfgBurstHandshakingTimingImportClock.argtypes = [TaskHandle, int32, uInt64, float64, STRING, int32, int32, int32]
# NIDAQmx.h 1628
DAQmxCfgBurstHandshakingTimingExportClock = _stdcall_libraries['nicaiu'].DAQmxCfgBurstHandshakingTimingExportClock
DAQmxCfgBurstHandshakingTimingExportClock.restype = int32
# DAQmxCfgBurstHandshakingTimingExportClock(taskHandle, sampleMode, sampsPerChan, sampleClkRate, sampleClkOutpTerm, sampleClkPulsePolarity, pauseWhen, readyEventActiveLevel)
DAQmxCfgBurstHandshakingTimingExportClock.argtypes = [TaskHandle, int32, uInt64, float64, STRING, int32, int32, int32]
# NIDAQmx.h 1629
DAQmxCfgChangeDetectionTiming = _stdcall_libraries['nicaiu'].DAQmxCfgChangeDetectionTiming
DAQmxCfgChangeDetectionTiming.restype = int32
# DAQmxCfgChangeDetectionTiming(taskHandle, risingEdgeChan, fallingEdgeChan, sampleMode, sampsPerChan)
DAQmxCfgChangeDetectionTiming.argtypes = [TaskHandle, STRING, STRING, int32, uInt64]
# NIDAQmx.h 1631
DAQmxCfgImplicitTiming = _stdcall_libraries['nicaiu'].DAQmxCfgImplicitTiming
DAQmxCfgImplicitTiming.restype = int32
# DAQmxCfgImplicitTiming(taskHandle, sampleMode, sampsPerChan)
DAQmxCfgImplicitTiming.argtypes = [TaskHandle, int32, uInt64]
# NIDAQmx.h 1633
DAQmxGetTimingAttribute = _libraries['nicaiu'].DAQmxGetTimingAttribute
DAQmxGetTimingAttribute.restype = int32
# DAQmxGetTimingAttribute(taskHandle, attribute, value)
DAQmxGetTimingAttribute.argtypes = [TaskHandle, int32, c_void_p]
# NIDAQmx.h 1634
DAQmxSetTimingAttribute = _libraries['nicaiu'].DAQmxSetTimingAttribute
DAQmxSetTimingAttribute.restype = int32
# DAQmxSetTimingAttribute(taskHandle, attribute)
DAQmxSetTimingAttribute.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1635
DAQmxResetTimingAttribute = _stdcall_libraries['nicaiu'].DAQmxResetTimingAttribute
DAQmxResetTimingAttribute.restype = int32
# DAQmxResetTimingAttribute(taskHandle, attribute)
DAQmxResetTimingAttribute.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1643
DAQmxDisableStartTrig = _stdcall_libraries['nicaiu'].DAQmxDisableStartTrig
DAQmxDisableStartTrig.restype = int32
# DAQmxDisableStartTrig(taskHandle)
DAQmxDisableStartTrig.argtypes = [TaskHandle]
# NIDAQmx.h 1644
DAQmxCfgDigEdgeStartTrig = _stdcall_libraries['nicaiu'].DAQmxCfgDigEdgeStartTrig
DAQmxCfgDigEdgeStartTrig.restype = int32
# DAQmxCfgDigEdgeStartTrig(taskHandle, triggerSource, triggerEdge)
DAQmxCfgDigEdgeStartTrig.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 1645
DAQmxCfgAnlgEdgeStartTrig = _stdcall_libraries['nicaiu'].DAQmxCfgAnlgEdgeStartTrig
DAQmxCfgAnlgEdgeStartTrig.restype = int32
# DAQmxCfgAnlgEdgeStartTrig(taskHandle, triggerSource, triggerSlope, triggerLevel)
DAQmxCfgAnlgEdgeStartTrig.argtypes = [TaskHandle, STRING, int32, float64]
# NIDAQmx.h 1646
DAQmxCfgAnlgWindowStartTrig = _stdcall_libraries['nicaiu'].DAQmxCfgAnlgWindowStartTrig
DAQmxCfgAnlgWindowStartTrig.restype = int32
# DAQmxCfgAnlgWindowStartTrig(taskHandle, triggerSource, triggerWhen, windowTop, windowBottom)
DAQmxCfgAnlgWindowStartTrig.argtypes = [TaskHandle, STRING, int32, float64, float64]
# NIDAQmx.h 1647
DAQmxCfgDigPatternStartTrig = _stdcall_libraries['nicaiu'].DAQmxCfgDigPatternStartTrig
DAQmxCfgDigPatternStartTrig.restype = int32
# DAQmxCfgDigPatternStartTrig(taskHandle, triggerSource, triggerPattern, triggerWhen)
DAQmxCfgDigPatternStartTrig.argtypes = [TaskHandle, STRING, STRING, int32]
# NIDAQmx.h 1649
DAQmxDisableRefTrig = _stdcall_libraries['nicaiu'].DAQmxDisableRefTrig
DAQmxDisableRefTrig.restype = int32
# DAQmxDisableRefTrig(taskHandle)
DAQmxDisableRefTrig.argtypes = [TaskHandle]
# NIDAQmx.h 1650
DAQmxCfgDigEdgeRefTrig = _stdcall_libraries['nicaiu'].DAQmxCfgDigEdgeRefTrig
DAQmxCfgDigEdgeRefTrig.restype = int32
# DAQmxCfgDigEdgeRefTrig(taskHandle, triggerSource, triggerEdge, pretriggerSamples)
DAQmxCfgDigEdgeRefTrig.argtypes = [TaskHandle, STRING, int32, uInt32]
# NIDAQmx.h 1651
DAQmxCfgAnlgEdgeRefTrig = _stdcall_libraries['nicaiu'].DAQmxCfgAnlgEdgeRefTrig
DAQmxCfgAnlgEdgeRefTrig.restype = int32
# DAQmxCfgAnlgEdgeRefTrig(taskHandle, triggerSource, triggerSlope, triggerLevel, pretriggerSamples)
DAQmxCfgAnlgEdgeRefTrig.argtypes = [TaskHandle, STRING, int32, float64, uInt32]
# NIDAQmx.h 1652
DAQmxCfgAnlgWindowRefTrig = _stdcall_libraries['nicaiu'].DAQmxCfgAnlgWindowRefTrig
DAQmxCfgAnlgWindowRefTrig.restype = int32
# DAQmxCfgAnlgWindowRefTrig(taskHandle, triggerSource, triggerWhen, windowTop, windowBottom, pretriggerSamples)
DAQmxCfgAnlgWindowRefTrig.argtypes = [TaskHandle, STRING, int32, float64, float64, uInt32]
# NIDAQmx.h 1653
DAQmxCfgDigPatternRefTrig = _stdcall_libraries['nicaiu'].DAQmxCfgDigPatternRefTrig
DAQmxCfgDigPatternRefTrig.restype = int32
# DAQmxCfgDigPatternRefTrig(taskHandle, triggerSource, triggerPattern, triggerWhen, pretriggerSamples)
DAQmxCfgDigPatternRefTrig.argtypes = [TaskHandle, STRING, STRING, int32, uInt32]
# NIDAQmx.h 1655
DAQmxDisableAdvTrig = _stdcall_libraries['nicaiu'].DAQmxDisableAdvTrig
DAQmxDisableAdvTrig.restype = int32
# DAQmxDisableAdvTrig(taskHandle)
DAQmxDisableAdvTrig.argtypes = [TaskHandle]
# NIDAQmx.h 1656
DAQmxCfgDigEdgeAdvTrig = _stdcall_libraries['nicaiu'].DAQmxCfgDigEdgeAdvTrig
DAQmxCfgDigEdgeAdvTrig.restype = int32
# DAQmxCfgDigEdgeAdvTrig(taskHandle, triggerSource, triggerEdge)
DAQmxCfgDigEdgeAdvTrig.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 1658
DAQmxGetTrigAttribute = _libraries['nicaiu'].DAQmxGetTrigAttribute
DAQmxGetTrigAttribute.restype = int32
# DAQmxGetTrigAttribute(taskHandle, attribute, value)
DAQmxGetTrigAttribute.argtypes = [TaskHandle, int32, c_void_p]
# NIDAQmx.h 1659
DAQmxSetTrigAttribute = _libraries['nicaiu'].DAQmxSetTrigAttribute
DAQmxSetTrigAttribute.restype = int32
# DAQmxSetTrigAttribute(taskHandle, attribute)
DAQmxSetTrigAttribute.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1660
DAQmxResetTrigAttribute = _stdcall_libraries['nicaiu'].DAQmxResetTrigAttribute
DAQmxResetTrigAttribute.restype = int32
# DAQmxResetTrigAttribute(taskHandle, attribute)
DAQmxResetTrigAttribute.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1662
DAQmxSendSoftwareTrigger = _stdcall_libraries['nicaiu'].DAQmxSendSoftwareTrigger
DAQmxSendSoftwareTrigger.restype = int32
# DAQmxSendSoftwareTrigger(taskHandle, triggerID)
DAQmxSendSoftwareTrigger.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1670
DAQmxReadAnalogF64 = _stdcall_libraries['nicaiu'].DAQmxReadAnalogF64
DAQmxReadAnalogF64.restype = int32
# DAQmxReadAnalogF64(taskHandle, numSampsPerChan, timeout, fillMode, readArray, arraySizeInSamps, sampsPerChanRead, reserved)
DAQmxReadAnalogF64.argtypes = [TaskHandle, int32, float64, bool32, POINTER(float64), uInt32, POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1671
DAQmxReadAnalogScalarF64 = _stdcall_libraries['nicaiu'].DAQmxReadAnalogScalarF64
DAQmxReadAnalogScalarF64.restype = int32
# DAQmxReadAnalogScalarF64(taskHandle, timeout, value, reserved)
DAQmxReadAnalogScalarF64.argtypes = [TaskHandle, float64, POINTER(float64), POINTER(bool32)]
# NIDAQmx.h 1673
DAQmxReadBinaryI16 = _stdcall_libraries['nicaiu'].DAQmxReadBinaryI16
DAQmxReadBinaryI16.restype = int32
# DAQmxReadBinaryI16(taskHandle, numSampsPerChan, timeout, fillMode, readArray, arraySizeInSamps, sampsPerChanRead, reserved)
DAQmxReadBinaryI16.argtypes = [TaskHandle, int32, float64, bool32, POINTER(int16), uInt32, POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1675
DAQmxReadBinaryU16 = _stdcall_libraries['nicaiu'].DAQmxReadBinaryU16
DAQmxReadBinaryU16.restype = int32
# DAQmxReadBinaryU16(taskHandle, numSampsPerChan, timeout, fillMode, readArray, arraySizeInSamps, sampsPerChanRead, reserved)
DAQmxReadBinaryU16.argtypes = [TaskHandle, int32, float64, bool32, POINTER(uInt16), uInt32, POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1677
DAQmxReadBinaryI32 = _stdcall_libraries['nicaiu'].DAQmxReadBinaryI32
DAQmxReadBinaryI32.restype = int32
# DAQmxReadBinaryI32(taskHandle, numSampsPerChan, timeout, fillMode, readArray, arraySizeInSamps, sampsPerChanRead, reserved)
DAQmxReadBinaryI32.argtypes = [TaskHandle, int32, float64, bool32, POINTER(int32), uInt32, POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1679
DAQmxReadBinaryU32 = _stdcall_libraries['nicaiu'].DAQmxReadBinaryU32
DAQmxReadBinaryU32.restype = int32
# DAQmxReadBinaryU32(taskHandle, numSampsPerChan, timeout, fillMode, readArray, arraySizeInSamps, sampsPerChanRead, reserved)
DAQmxReadBinaryU32.argtypes = [TaskHandle, int32, float64, bool32, POINTER(uInt32), uInt32, POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1681
DAQmxReadDigitalU8 = _stdcall_libraries['nicaiu'].DAQmxReadDigitalU8
DAQmxReadDigitalU8.restype = int32
# DAQmxReadDigitalU8(taskHandle, numSampsPerChan, timeout, fillMode, readArray, arraySizeInSamps, sampsPerChanRead, reserved)
DAQmxReadDigitalU8.argtypes = [TaskHandle, int32, float64, bool32, POINTER(uInt8), uInt32, POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1682
DAQmxReadDigitalU16 = _stdcall_libraries['nicaiu'].DAQmxReadDigitalU16
DAQmxReadDigitalU16.restype = int32
# DAQmxReadDigitalU16(taskHandle, numSampsPerChan, timeout, fillMode, readArray, arraySizeInSamps, sampsPerChanRead, reserved)
DAQmxReadDigitalU16.argtypes = [TaskHandle, int32, float64, bool32, POINTER(uInt16), uInt32, POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1683
DAQmxReadDigitalU32 = _stdcall_libraries['nicaiu'].DAQmxReadDigitalU32
DAQmxReadDigitalU32.restype = int32
# DAQmxReadDigitalU32(taskHandle, numSampsPerChan, timeout, fillMode, readArray, arraySizeInSamps, sampsPerChanRead, reserved)
DAQmxReadDigitalU32.argtypes = [TaskHandle, int32, float64, bool32, POINTER(uInt32), uInt32, POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1684
DAQmxReadDigitalScalarU32 = _stdcall_libraries['nicaiu'].DAQmxReadDigitalScalarU32
DAQmxReadDigitalScalarU32.restype = int32
# DAQmxReadDigitalScalarU32(taskHandle, timeout, value, reserved)
DAQmxReadDigitalScalarU32.argtypes = [TaskHandle, float64, POINTER(uInt32), POINTER(bool32)]
# NIDAQmx.h 1685
DAQmxReadDigitalLines = _stdcall_libraries['nicaiu'].DAQmxReadDigitalLines
DAQmxReadDigitalLines.restype = int32
# DAQmxReadDigitalLines(taskHandle, numSampsPerChan, timeout, fillMode, readArray, arraySizeInBytes, sampsPerChanRead, numBytesPerSamp, reserved)
DAQmxReadDigitalLines.argtypes = [TaskHandle, int32, float64, bool32, POINTER(uInt8), uInt32, POINTER(int32), POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1687
DAQmxReadCounterF64 = _stdcall_libraries['nicaiu'].DAQmxReadCounterF64
DAQmxReadCounterF64.restype = int32
# DAQmxReadCounterF64(taskHandle, numSampsPerChan, timeout, readArray, arraySizeInSamps, sampsPerChanRead, reserved)
DAQmxReadCounterF64.argtypes = [TaskHandle, int32, float64, POINTER(float64), uInt32, POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1688
DAQmxReadCounterU32 = _stdcall_libraries['nicaiu'].DAQmxReadCounterU32
DAQmxReadCounterU32.restype = int32
# DAQmxReadCounterU32(taskHandle, numSampsPerChan, timeout, readArray, arraySizeInSamps, sampsPerChanRead, reserved)
DAQmxReadCounterU32.argtypes = [TaskHandle, int32, float64, POINTER(uInt32), uInt32, POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1689
DAQmxReadCounterScalarF64 = _stdcall_libraries['nicaiu'].DAQmxReadCounterScalarF64
DAQmxReadCounterScalarF64.restype = int32
# DAQmxReadCounterScalarF64(taskHandle, timeout, value, reserved)
DAQmxReadCounterScalarF64.argtypes = [TaskHandle, float64, POINTER(float64), POINTER(bool32)]
# NIDAQmx.h 1690
DAQmxReadCounterScalarU32 = _stdcall_libraries['nicaiu'].DAQmxReadCounterScalarU32
DAQmxReadCounterScalarU32.restype = int32
# DAQmxReadCounterScalarU32(taskHandle, timeout, value, reserved)
DAQmxReadCounterScalarU32.argtypes = [TaskHandle, float64, POINTER(uInt32), POINTER(bool32)]
# NIDAQmx.h 1692
DAQmxReadRaw = _stdcall_libraries['nicaiu'].DAQmxReadRaw
DAQmxReadRaw.restype = int32
# DAQmxReadRaw(taskHandle, numSampsPerChan, timeout, readArray, arraySizeInBytes, sampsRead, numBytesPerSamp, reserved)
DAQmxReadRaw.argtypes = [TaskHandle, int32, float64, c_void_p, uInt32, POINTER(int32), POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1694
DAQmxGetNthTaskReadChannel = _stdcall_libraries['nicaiu'].DAQmxGetNthTaskReadChannel
DAQmxGetNthTaskReadChannel.restype = int32
# DAQmxGetNthTaskReadChannel(taskHandle, index, buffer, bufferSize)
DAQmxGetNthTaskReadChannel.argtypes = [TaskHandle, uInt32, STRING, int32]
# NIDAQmx.h 1696
DAQmxGetReadAttribute = _libraries['nicaiu'].DAQmxGetReadAttribute
DAQmxGetReadAttribute.restype = int32
# DAQmxGetReadAttribute(taskHandle, attribute, value)
DAQmxGetReadAttribute.argtypes = [TaskHandle, int32, c_void_p]
# NIDAQmx.h 1697
DAQmxSetReadAttribute = _libraries['nicaiu'].DAQmxSetReadAttribute
DAQmxSetReadAttribute.restype = int32
# DAQmxSetReadAttribute(taskHandle, attribute)
DAQmxSetReadAttribute.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1698
DAQmxResetReadAttribute = _stdcall_libraries['nicaiu'].DAQmxResetReadAttribute
DAQmxResetReadAttribute.restype = int32
# DAQmxResetReadAttribute(taskHandle, attribute)
DAQmxResetReadAttribute.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1706
DAQmxWriteAnalogF64 = _stdcall_libraries['nicaiu'].DAQmxWriteAnalogF64
DAQmxWriteAnalogF64.restype = int32
# DAQmxWriteAnalogF64(taskHandle, numSampsPerChan, autoStart, timeout, dataLayout, writeArray, sampsPerChanWritten, reserved)
DAQmxWriteAnalogF64.argtypes = [TaskHandle, int32, bool32, float64, bool32, POINTER(float64), POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1707
DAQmxWriteAnalogScalarF64 = _stdcall_libraries['nicaiu'].DAQmxWriteAnalogScalarF64
DAQmxWriteAnalogScalarF64.restype = int32
# DAQmxWriteAnalogScalarF64(taskHandle, autoStart, timeout, value, reserved)
DAQmxWriteAnalogScalarF64.argtypes = [TaskHandle, bool32, float64, float64, POINTER(bool32)]
# NIDAQmx.h 1709
DAQmxWriteBinaryI16 = _stdcall_libraries['nicaiu'].DAQmxWriteBinaryI16
DAQmxWriteBinaryI16.restype = int32
# DAQmxWriteBinaryI16(taskHandle, numSampsPerChan, autoStart, timeout, dataLayout, writeArray, sampsPerChanWritten, reserved)
DAQmxWriteBinaryI16.argtypes = [TaskHandle, int32, bool32, float64, bool32, POINTER(int16), POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1710
DAQmxWriteBinaryU16 = _stdcall_libraries['nicaiu'].DAQmxWriteBinaryU16
DAQmxWriteBinaryU16.restype = int32
# DAQmxWriteBinaryU16(taskHandle, numSampsPerChan, autoStart, timeout, dataLayout, writeArray, sampsPerChanWritten, reserved)
DAQmxWriteBinaryU16.argtypes = [TaskHandle, int32, bool32, float64, bool32, POINTER(uInt16), POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1711
DAQmxWriteBinaryI32 = _stdcall_libraries['nicaiu'].DAQmxWriteBinaryI32
DAQmxWriteBinaryI32.restype = int32
# DAQmxWriteBinaryI32(taskHandle, numSampsPerChan, autoStart, timeout, dataLayout, writeArray, sampsPerChanWritten, reserved)
DAQmxWriteBinaryI32.argtypes = [TaskHandle, int32, bool32, float64, bool32, POINTER(int32), POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1712
DAQmxWriteBinaryU32 = _stdcall_libraries['nicaiu'].DAQmxWriteBinaryU32
DAQmxWriteBinaryU32.restype = int32
# DAQmxWriteBinaryU32(taskHandle, numSampsPerChan, autoStart, timeout, dataLayout, writeArray, sampsPerChanWritten, reserved)
DAQmxWriteBinaryU32.argtypes = [TaskHandle, int32, bool32, float64, bool32, POINTER(uInt32), POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1714
DAQmxWriteDigitalU8 = _stdcall_libraries['nicaiu'].DAQmxWriteDigitalU8
DAQmxWriteDigitalU8.restype = int32
# DAQmxWriteDigitalU8(taskHandle, numSampsPerChan, autoStart, timeout, dataLayout, writeArray, sampsPerChanWritten, reserved)
DAQmxWriteDigitalU8.argtypes = [TaskHandle, int32, bool32, float64, bool32, POINTER(uInt8), POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1715
DAQmxWriteDigitalU16 = _stdcall_libraries['nicaiu'].DAQmxWriteDigitalU16
DAQmxWriteDigitalU16.restype = int32
# DAQmxWriteDigitalU16(taskHandle, numSampsPerChan, autoStart, timeout, dataLayout, writeArray, sampsPerChanWritten, reserved)
DAQmxWriteDigitalU16.argtypes = [TaskHandle, int32, bool32, float64, bool32, POINTER(uInt16), POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1716
DAQmxWriteDigitalU32 = _stdcall_libraries['nicaiu'].DAQmxWriteDigitalU32
DAQmxWriteDigitalU32.restype = int32
# DAQmxWriteDigitalU32(taskHandle, numSampsPerChan, autoStart, timeout, dataLayout, writeArray, sampsPerChanWritten, reserved)
DAQmxWriteDigitalU32.argtypes = [TaskHandle, int32, bool32, float64, bool32, POINTER(uInt32), POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1717
DAQmxWriteDigitalScalarU32 = _stdcall_libraries['nicaiu'].DAQmxWriteDigitalScalarU32
DAQmxWriteDigitalScalarU32.restype = int32
# DAQmxWriteDigitalScalarU32(taskHandle, autoStart, timeout, value, reserved)
DAQmxWriteDigitalScalarU32.argtypes = [TaskHandle, bool32, float64, uInt32, POINTER(bool32)]
# NIDAQmx.h 1718
DAQmxWriteDigitalLines = _stdcall_libraries['nicaiu'].DAQmxWriteDigitalLines
DAQmxWriteDigitalLines.restype = int32
# DAQmxWriteDigitalLines(taskHandle, numSampsPerChan, autoStart, timeout, dataLayout, writeArray, sampsPerChanWritten, reserved)
DAQmxWriteDigitalLines.argtypes = [TaskHandle, int32, bool32, float64, bool32, POINTER(uInt8), POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1720
DAQmxWriteCtrFreq = _stdcall_libraries['nicaiu'].DAQmxWriteCtrFreq
DAQmxWriteCtrFreq.restype = int32
# DAQmxWriteCtrFreq(taskHandle, numSampsPerChan, autoStart, timeout, dataLayout, frequency, dutyCycle, numSampsPerChanWritten, reserved)
DAQmxWriteCtrFreq.argtypes = [TaskHandle, int32, bool32, float64, bool32, POINTER(float64), POINTER(float64), POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1721
DAQmxWriteCtrFreqScalar = _stdcall_libraries['nicaiu'].DAQmxWriteCtrFreqScalar
DAQmxWriteCtrFreqScalar.restype = int32
# DAQmxWriteCtrFreqScalar(taskHandle, autoStart, timeout, frequency, dutyCycle, reserved)
DAQmxWriteCtrFreqScalar.argtypes = [TaskHandle, bool32, float64, float64, float64, POINTER(bool32)]
# NIDAQmx.h 1722
DAQmxWriteCtrTime = _stdcall_libraries['nicaiu'].DAQmxWriteCtrTime
DAQmxWriteCtrTime.restype = int32
# DAQmxWriteCtrTime(taskHandle, numSampsPerChan, autoStart, timeout, dataLayout, highTime, lowTime, numSampsPerChanWritten, reserved)
DAQmxWriteCtrTime.argtypes = [TaskHandle, int32, bool32, float64, bool32, POINTER(float64), POINTER(float64), POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1723
DAQmxWriteCtrTimeScalar = _stdcall_libraries['nicaiu'].DAQmxWriteCtrTimeScalar
DAQmxWriteCtrTimeScalar.restype = int32
# DAQmxWriteCtrTimeScalar(taskHandle, autoStart, timeout, highTime, lowTime, reserved)
DAQmxWriteCtrTimeScalar.argtypes = [TaskHandle, bool32, float64, float64, float64, POINTER(bool32)]
# NIDAQmx.h 1724
DAQmxWriteCtrTicks = _stdcall_libraries['nicaiu'].DAQmxWriteCtrTicks
DAQmxWriteCtrTicks.restype = int32
# DAQmxWriteCtrTicks(taskHandle, numSampsPerChan, autoStart, timeout, dataLayout, highTicks, lowTicks, numSampsPerChanWritten, reserved)
DAQmxWriteCtrTicks.argtypes = [TaskHandle, int32, bool32, float64, bool32, POINTER(uInt32), POINTER(uInt32), POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1725
DAQmxWriteCtrTicksScalar = _stdcall_libraries['nicaiu'].DAQmxWriteCtrTicksScalar
DAQmxWriteCtrTicksScalar.restype = int32
# DAQmxWriteCtrTicksScalar(taskHandle, autoStart, timeout, highTicks, lowTicks, reserved)
DAQmxWriteCtrTicksScalar.argtypes = [TaskHandle, bool32, float64, uInt32, uInt32, POINTER(bool32)]
# NIDAQmx.h 1727
DAQmxWriteRaw = _stdcall_libraries['nicaiu'].DAQmxWriteRaw
DAQmxWriteRaw.restype = int32
# DAQmxWriteRaw(taskHandle, numSamps, autoStart, timeout, writeArray, sampsPerChanWritten, reserved)
DAQmxWriteRaw.argtypes = [TaskHandle, int32, bool32, float64, c_void_p, POINTER(int32), POINTER(bool32)]
# NIDAQmx.h 1729
DAQmxGetWriteAttribute = _libraries['nicaiu'].DAQmxGetWriteAttribute
DAQmxGetWriteAttribute.restype = int32
# DAQmxGetWriteAttribute(taskHandle, attribute, value)
DAQmxGetWriteAttribute.argtypes = [TaskHandle, int32, c_void_p]
# NIDAQmx.h 1730
DAQmxSetWriteAttribute = _libraries['nicaiu'].DAQmxSetWriteAttribute
DAQmxSetWriteAttribute.restype = int32
# DAQmxSetWriteAttribute(taskHandle, attribute)
DAQmxSetWriteAttribute.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1731
DAQmxResetWriteAttribute = _stdcall_libraries['nicaiu'].DAQmxResetWriteAttribute
DAQmxResetWriteAttribute.restype = int32
# DAQmxResetWriteAttribute(taskHandle, attribute)
DAQmxResetWriteAttribute.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1742
DAQmxExportSignal = _stdcall_libraries['nicaiu'].DAQmxExportSignal
DAQmxExportSignal.restype = int32
# DAQmxExportSignal(taskHandle, signalID, outputTerminal)
DAQmxExportSignal.argtypes = [TaskHandle, int32, STRING]
# NIDAQmx.h 1744
DAQmxGetExportedSignalAttribute = _libraries['nicaiu'].DAQmxGetExportedSignalAttribute
DAQmxGetExportedSignalAttribute.restype = int32
# DAQmxGetExportedSignalAttribute(taskHandle, attribute, value)
DAQmxGetExportedSignalAttribute.argtypes = [TaskHandle, int32, c_void_p]
# NIDAQmx.h 1745
DAQmxSetExportedSignalAttribute = _libraries['nicaiu'].DAQmxSetExportedSignalAttribute
DAQmxSetExportedSignalAttribute.restype = int32
# DAQmxSetExportedSignalAttribute(taskHandle, attribute)
DAQmxSetExportedSignalAttribute.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1746
DAQmxResetExportedSignalAttribute = _stdcall_libraries['nicaiu'].DAQmxResetExportedSignalAttribute
DAQmxResetExportedSignalAttribute.restype = int32
# DAQmxResetExportedSignalAttribute(taskHandle, attribute)
DAQmxResetExportedSignalAttribute.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1754
DAQmxCreateLinScale = _stdcall_libraries['nicaiu'].DAQmxCreateLinScale
DAQmxCreateLinScale.restype = int32
# DAQmxCreateLinScale(name, slope, yIntercept, preScaledUnits, scaledUnits)
DAQmxCreateLinScale.argtypes = [STRING, float64, float64, int32, STRING]
# NIDAQmx.h 1755
DAQmxCreateMapScale = _stdcall_libraries['nicaiu'].DAQmxCreateMapScale
DAQmxCreateMapScale.restype = int32
# DAQmxCreateMapScale(name, prescaledMin, prescaledMax, scaledMin, scaledMax, preScaledUnits, scaledUnits)
DAQmxCreateMapScale.argtypes = [STRING, float64, float64, float64, float64, int32, STRING]
# NIDAQmx.h 1756
DAQmxCreatePolynomialScale = _stdcall_libraries['nicaiu'].DAQmxCreatePolynomialScale
DAQmxCreatePolynomialScale.restype = int32
# DAQmxCreatePolynomialScale(name, forwardCoeffs, numForwardCoeffsIn, reverseCoeffs, numReverseCoeffsIn, preScaledUnits, scaledUnits)
DAQmxCreatePolynomialScale.argtypes = [STRING, POINTER(float64), uInt32, POINTER(float64), uInt32, int32, STRING]
# NIDAQmx.h 1757
DAQmxCreateTableScale = _stdcall_libraries['nicaiu'].DAQmxCreateTableScale
DAQmxCreateTableScale.restype = int32
# DAQmxCreateTableScale(name, prescaledVals, numPrescaledValsIn, scaledVals, numScaledValsIn, preScaledUnits, scaledUnits)
DAQmxCreateTableScale.argtypes = [STRING, POINTER(float64), uInt32, POINTER(float64), uInt32, int32, STRING]
# NIDAQmx.h 1758
DAQmxCalculateReversePolyCoeff = _stdcall_libraries['nicaiu'].DAQmxCalculateReversePolyCoeff
DAQmxCalculateReversePolyCoeff.restype = int32
# DAQmxCalculateReversePolyCoeff(forwardCoeffs, numForwardCoeffsIn, minValX, maxValX, numPointsToCompute, reversePolyOrder, reverseCoeffs)
DAQmxCalculateReversePolyCoeff.argtypes = [POINTER(float64), uInt32, float64, float64, int32, int32, POINTER(float64)]
# NIDAQmx.h 1760
DAQmxGetScaleAttribute = _libraries['nicaiu'].DAQmxGetScaleAttribute
DAQmxGetScaleAttribute.restype = int32
# DAQmxGetScaleAttribute(scaleName, attribute, value)
DAQmxGetScaleAttribute.argtypes = [STRING, int32, c_void_p]
# NIDAQmx.h 1761
DAQmxSetScaleAttribute = _libraries['nicaiu'].DAQmxSetScaleAttribute
DAQmxSetScaleAttribute.restype = int32
# DAQmxSetScaleAttribute(scaleName, attribute)
DAQmxSetScaleAttribute.argtypes = [STRING, int32]
# NIDAQmx.h 1769
DAQmxCfgInputBuffer = _stdcall_libraries['nicaiu'].DAQmxCfgInputBuffer
DAQmxCfgInputBuffer.restype = int32
# DAQmxCfgInputBuffer(taskHandle, numSampsPerChan)
DAQmxCfgInputBuffer.argtypes = [TaskHandle, uInt32]
# NIDAQmx.h 1770
DAQmxCfgOutputBuffer = _stdcall_libraries['nicaiu'].DAQmxCfgOutputBuffer
DAQmxCfgOutputBuffer.restype = int32
# DAQmxCfgOutputBuffer(taskHandle, numSampsPerChan)
DAQmxCfgOutputBuffer.argtypes = [TaskHandle, uInt32]
# NIDAQmx.h 1772
DAQmxGetBufferAttribute = _libraries['nicaiu'].DAQmxGetBufferAttribute
DAQmxGetBufferAttribute.restype = int32
# DAQmxGetBufferAttribute(taskHandle, attribute, value)
DAQmxGetBufferAttribute.argtypes = [TaskHandle, int32, c_void_p]
# NIDAQmx.h 1773
DAQmxSetBufferAttribute = _libraries['nicaiu'].DAQmxSetBufferAttribute
DAQmxSetBufferAttribute.restype = int32
# DAQmxSetBufferAttribute(taskHandle, attribute)
DAQmxSetBufferAttribute.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1774
DAQmxResetBufferAttribute = _stdcall_libraries['nicaiu'].DAQmxResetBufferAttribute
DAQmxResetBufferAttribute.restype = int32
# DAQmxResetBufferAttribute(taskHandle, attribute)
DAQmxResetBufferAttribute.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1781
DAQmxSwitchCreateScanList = _stdcall_libraries['nicaiu'].DAQmxSwitchCreateScanList
DAQmxSwitchCreateScanList.restype = int32
# DAQmxSwitchCreateScanList(scanList, taskHandle)
DAQmxSwitchCreateScanList.argtypes = [STRING, POINTER(TaskHandle)]
# NIDAQmx.h 1783
DAQmxSwitchConnect = _stdcall_libraries['nicaiu'].DAQmxSwitchConnect
DAQmxSwitchConnect.restype = int32
# DAQmxSwitchConnect(switchChannel1, switchChannel2, waitForSettling)
DAQmxSwitchConnect.argtypes = [STRING, STRING, bool32]
# NIDAQmx.h 1784
DAQmxSwitchConnectMulti = _stdcall_libraries['nicaiu'].DAQmxSwitchConnectMulti
DAQmxSwitchConnectMulti.restype = int32
# DAQmxSwitchConnectMulti(connectionList, waitForSettling)
DAQmxSwitchConnectMulti.argtypes = [STRING, bool32]
# NIDAQmx.h 1785
DAQmxSwitchDisconnect = _stdcall_libraries['nicaiu'].DAQmxSwitchDisconnect
DAQmxSwitchDisconnect.restype = int32
# DAQmxSwitchDisconnect(switchChannel1, switchChannel2, waitForSettling)
DAQmxSwitchDisconnect.argtypes = [STRING, STRING, bool32]
# NIDAQmx.h 1786
DAQmxSwitchDisconnectMulti = _stdcall_libraries['nicaiu'].DAQmxSwitchDisconnectMulti
DAQmxSwitchDisconnectMulti.restype = int32
# DAQmxSwitchDisconnectMulti(connectionList, waitForSettling)
DAQmxSwitchDisconnectMulti.argtypes = [STRING, bool32]
# NIDAQmx.h 1787
DAQmxSwitchDisconnectAll = _stdcall_libraries['nicaiu'].DAQmxSwitchDisconnectAll
DAQmxSwitchDisconnectAll.restype = int32
# DAQmxSwitchDisconnectAll(deviceName, waitForSettling)
DAQmxSwitchDisconnectAll.argtypes = [STRING, bool32]
# NIDAQmx.h 1916
DAQmxSwitchSetTopologyAndReset = _stdcall_libraries['nicaiu'].DAQmxSwitchSetTopologyAndReset
DAQmxSwitchSetTopologyAndReset.restype = int32
# DAQmxSwitchSetTopologyAndReset(deviceName, newTopology)
DAQmxSwitchSetTopologyAndReset.argtypes = [STRING, STRING]
# NIDAQmx.h 1919
DAQmxSwitchFindPath = _stdcall_libraries['nicaiu'].DAQmxSwitchFindPath
DAQmxSwitchFindPath.restype = int32
# DAQmxSwitchFindPath(switchChannel1, switchChannel2, path, pathBufferSize, pathStatus)
DAQmxSwitchFindPath.argtypes = [STRING, STRING, STRING, uInt32, POINTER(int32)]
# NIDAQmx.h 1921
DAQmxSwitchOpenRelays = _stdcall_libraries['nicaiu'].DAQmxSwitchOpenRelays
DAQmxSwitchOpenRelays.restype = int32
# DAQmxSwitchOpenRelays(relayList, waitForSettling)
DAQmxSwitchOpenRelays.argtypes = [STRING, bool32]
# NIDAQmx.h 1922
DAQmxSwitchCloseRelays = _stdcall_libraries['nicaiu'].DAQmxSwitchCloseRelays
DAQmxSwitchCloseRelays.restype = int32
# DAQmxSwitchCloseRelays(relayList, waitForSettling)
DAQmxSwitchCloseRelays.argtypes = [STRING, bool32]
# NIDAQmx.h 1924
DAQmxSwitchGetSingleRelayCount = _stdcall_libraries['nicaiu'].DAQmxSwitchGetSingleRelayCount
DAQmxSwitchGetSingleRelayCount.restype = int32
# DAQmxSwitchGetSingleRelayCount(relayName, count)
DAQmxSwitchGetSingleRelayCount.argtypes = [STRING, POINTER(uInt32)]
# NIDAQmx.h 1925
DAQmxSwitchGetMultiRelayCount = _stdcall_libraries['nicaiu'].DAQmxSwitchGetMultiRelayCount
DAQmxSwitchGetMultiRelayCount.restype = int32
# DAQmxSwitchGetMultiRelayCount(relayList, count, countArraySize, numRelayCountsRead)
DAQmxSwitchGetMultiRelayCount.argtypes = [STRING, POINTER(uInt32), uInt32, POINTER(uInt32)]
# NIDAQmx.h 1927
DAQmxSwitchGetSingleRelayPos = _stdcall_libraries['nicaiu'].DAQmxSwitchGetSingleRelayPos
DAQmxSwitchGetSingleRelayPos.restype = int32
# DAQmxSwitchGetSingleRelayPos(relayName, relayPos)
DAQmxSwitchGetSingleRelayPos.argtypes = [STRING, POINTER(uInt32)]
# NIDAQmx.h 1929
DAQmxSwitchGetMultiRelayPos = _stdcall_libraries['nicaiu'].DAQmxSwitchGetMultiRelayPos
DAQmxSwitchGetMultiRelayPos.restype = int32
# DAQmxSwitchGetMultiRelayPos(relayList, relayPos, relayPosArraySize, numRelayPossRead)
DAQmxSwitchGetMultiRelayPos.argtypes = [STRING, POINTER(uInt32), uInt32, POINTER(uInt32)]
# NIDAQmx.h 1931
DAQmxSwitchWaitForSettling = _stdcall_libraries['nicaiu'].DAQmxSwitchWaitForSettling
DAQmxSwitchWaitForSettling.restype = int32
# DAQmxSwitchWaitForSettling(deviceName)
DAQmxSwitchWaitForSettling.argtypes = [STRING]
# NIDAQmx.h 1933
DAQmxGetSwitchChanAttribute = _libraries['nicaiu'].DAQmxGetSwitchChanAttribute
DAQmxGetSwitchChanAttribute.restype = int32
# DAQmxGetSwitchChanAttribute(switchChannelName, attribute, value)
DAQmxGetSwitchChanAttribute.argtypes = [STRING, int32, c_void_p]
# NIDAQmx.h 1934
DAQmxSetSwitchChanAttribute = _libraries['nicaiu'].DAQmxSetSwitchChanAttribute
DAQmxSetSwitchChanAttribute.restype = int32
# DAQmxSetSwitchChanAttribute(switchChannelName, attribute)
DAQmxSetSwitchChanAttribute.argtypes = [STRING, int32]
# NIDAQmx.h 1936
DAQmxGetSwitchDeviceAttribute = _libraries['nicaiu'].DAQmxGetSwitchDeviceAttribute
DAQmxGetSwitchDeviceAttribute.restype = int32
# DAQmxGetSwitchDeviceAttribute(deviceName, attribute, value)
DAQmxGetSwitchDeviceAttribute.argtypes = [STRING, int32, c_void_p]
# NIDAQmx.h 1937
DAQmxSetSwitchDeviceAttribute = _libraries['nicaiu'].DAQmxSetSwitchDeviceAttribute
DAQmxSetSwitchDeviceAttribute.restype = int32
# DAQmxSetSwitchDeviceAttribute(deviceName, attribute)
DAQmxSetSwitchDeviceAttribute.argtypes = [STRING, int32]
# NIDAQmx.h 1939
DAQmxGetSwitchScanAttribute = _libraries['nicaiu'].DAQmxGetSwitchScanAttribute
DAQmxGetSwitchScanAttribute.restype = int32
# DAQmxGetSwitchScanAttribute(taskHandle, attribute, value)
DAQmxGetSwitchScanAttribute.argtypes = [TaskHandle, int32, c_void_p]
# NIDAQmx.h 1940
DAQmxSetSwitchScanAttribute = _libraries['nicaiu'].DAQmxSetSwitchScanAttribute
DAQmxSetSwitchScanAttribute.restype = int32
# DAQmxSetSwitchScanAttribute(taskHandle, attribute)
DAQmxSetSwitchScanAttribute.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1941
DAQmxResetSwitchScanAttribute = _stdcall_libraries['nicaiu'].DAQmxResetSwitchScanAttribute
DAQmxResetSwitchScanAttribute.restype = int32
# DAQmxResetSwitchScanAttribute(taskHandle, attribute)
DAQmxResetSwitchScanAttribute.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1949
DAQmxConnectTerms = _stdcall_libraries['nicaiu'].DAQmxConnectTerms
DAQmxConnectTerms.restype = int32
# DAQmxConnectTerms(sourceTerminal, destinationTerminal, signalModifiers)
DAQmxConnectTerms.argtypes = [STRING, STRING, int32]
# NIDAQmx.h 1950
DAQmxDisconnectTerms = _stdcall_libraries['nicaiu'].DAQmxDisconnectTerms
DAQmxDisconnectTerms.restype = int32
# DAQmxDisconnectTerms(sourceTerminal, destinationTerminal)
DAQmxDisconnectTerms.argtypes = [STRING, STRING]
# NIDAQmx.h 1951
DAQmxTristateOutputTerm = _stdcall_libraries['nicaiu'].DAQmxTristateOutputTerm
DAQmxTristateOutputTerm.restype = int32
# DAQmxTristateOutputTerm(outputTerminal)
DAQmxTristateOutputTerm.argtypes = [STRING]
# NIDAQmx.h 1959
DAQmxResetDevice = _stdcall_libraries['nicaiu'].DAQmxResetDevice
DAQmxResetDevice.restype = int32
# DAQmxResetDevice(deviceName)
DAQmxResetDevice.argtypes = [STRING]
# NIDAQmx.h 1961
DAQmxGetDeviceAttribute = _libraries['nicaiu'].DAQmxGetDeviceAttribute
DAQmxGetDeviceAttribute.restype = int32
# DAQmxGetDeviceAttribute(deviceName, attribute, value)
DAQmxGetDeviceAttribute.argtypes = [STRING, int32, c_void_p]
# NIDAQmx.h 1968
DAQmxCreateWatchdogTimerTask = _libraries['nicaiu'].DAQmxCreateWatchdogTimerTask
DAQmxCreateWatchdogTimerTask.restype = int32
# DAQmxCreateWatchdogTimerTask(deviceName, taskName, taskHandle, timeout, lines, expState)
DAQmxCreateWatchdogTimerTask.argtypes = [STRING, STRING, POINTER(TaskHandle), float64, STRING, int32]
# NIDAQmx.h 1969
DAQmxControlWatchdogTask = _stdcall_libraries['nicaiu'].DAQmxControlWatchdogTask
DAQmxControlWatchdogTask.restype = int32
# DAQmxControlWatchdogTask(taskHandle, action)
DAQmxControlWatchdogTask.argtypes = [TaskHandle, int32]
# NIDAQmx.h 1971
DAQmxGetWatchdogAttribute = _libraries['nicaiu'].DAQmxGetWatchdogAttribute
DAQmxGetWatchdogAttribute.restype = int32
# DAQmxGetWatchdogAttribute(taskHandle, lines, attribute, value)
DAQmxGetWatchdogAttribute.argtypes = [TaskHandle, STRING, int32, c_void_p]
# NIDAQmx.h 1972
DAQmxSetWatchdogAttribute = _libraries['nicaiu'].DAQmxSetWatchdogAttribute
DAQmxSetWatchdogAttribute.restype = int32
# DAQmxSetWatchdogAttribute(taskHandle, lines, attribute)
DAQmxSetWatchdogAttribute.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 1973
DAQmxResetWatchdogAttribute = _stdcall_libraries['nicaiu'].DAQmxResetWatchdogAttribute
DAQmxResetWatchdogAttribute.restype = int32
# DAQmxResetWatchdogAttribute(taskHandle, lines, attribute)
DAQmxResetWatchdogAttribute.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 1981
DAQmxSelfCal = _stdcall_libraries['nicaiu'].DAQmxSelfCal
DAQmxSelfCal.restype = int32
# DAQmxSelfCal(deviceName)
DAQmxSelfCal.argtypes = [STRING]
# NIDAQmx.h 1982
DAQmxPerformBridgeOffsetNullingCal = _stdcall_libraries['nicaiu'].DAQmxPerformBridgeOffsetNullingCal
DAQmxPerformBridgeOffsetNullingCal.restype = int32
# DAQmxPerformBridgeOffsetNullingCal(taskHandle, channel)
DAQmxPerformBridgeOffsetNullingCal.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 1983
DAQmxGetSelfCalLastDateAndTime = _stdcall_libraries['nicaiu'].DAQmxGetSelfCalLastDateAndTime
DAQmxGetSelfCalLastDateAndTime.restype = int32
# DAQmxGetSelfCalLastDateAndTime(deviceName, year, month, day, hour, minute)
DAQmxGetSelfCalLastDateAndTime.argtypes = [STRING, POINTER(uInt32), POINTER(uInt32), POINTER(uInt32), POINTER(uInt32), POINTER(uInt32)]
# NIDAQmx.h 1984
DAQmxGetExtCalLastDateAndTime = _stdcall_libraries['nicaiu'].DAQmxGetExtCalLastDateAndTime
DAQmxGetExtCalLastDateAndTime.restype = int32
# DAQmxGetExtCalLastDateAndTime(deviceName, year, month, day, hour, minute)
DAQmxGetExtCalLastDateAndTime.argtypes = [STRING, POINTER(uInt32), POINTER(uInt32), POINTER(uInt32), POINTER(uInt32), POINTER(uInt32)]
# NIDAQmx.h 1985
DAQmxRestoreLastExtCalConst = _stdcall_libraries['nicaiu'].DAQmxRestoreLastExtCalConst
DAQmxRestoreLastExtCalConst.restype = int32
# DAQmxRestoreLastExtCalConst(deviceName)
DAQmxRestoreLastExtCalConst.argtypes = [STRING]
# NIDAQmx.h 1987
DAQmxESeriesCalAdjust = _stdcall_libraries['nicaiu'].DAQmxESeriesCalAdjust
DAQmxESeriesCalAdjust.restype = int32
# DAQmxESeriesCalAdjust(calHandle, referenceVoltage)
DAQmxESeriesCalAdjust.argtypes = [uInt32, float64]
# NIDAQmx.h 1988
DAQmxMSeriesCalAdjust = _stdcall_libraries['nicaiu'].DAQmxMSeriesCalAdjust
DAQmxMSeriesCalAdjust.restype = int32
# DAQmxMSeriesCalAdjust(calHandle, referenceVoltage)
DAQmxMSeriesCalAdjust.argtypes = [uInt32, float64]
# NIDAQmx.h 1989
DAQmxSSeriesCalAdjust = _stdcall_libraries['nicaiu'].DAQmxSSeriesCalAdjust
DAQmxSSeriesCalAdjust.restype = int32
# DAQmxSSeriesCalAdjust(calHandle, referenceVoltage)
DAQmxSSeriesCalAdjust.argtypes = [uInt32, float64]
# NIDAQmx.h 1990
DAQmxSCBaseboardCalAdjust = _stdcall_libraries['nicaiu'].DAQmxSCBaseboardCalAdjust
DAQmxSCBaseboardCalAdjust.restype = int32
# DAQmxSCBaseboardCalAdjust(calHandle, referenceVoltage)
DAQmxSCBaseboardCalAdjust.argtypes = [uInt32, float64]
# NIDAQmx.h 1991
DAQmxAOSeriesCalAdjust = _stdcall_libraries['nicaiu'].DAQmxAOSeriesCalAdjust
DAQmxAOSeriesCalAdjust.restype = int32
# DAQmxAOSeriesCalAdjust(calHandle, referenceVoltage)
DAQmxAOSeriesCalAdjust.argtypes = [uInt32, float64]
# NIDAQmx.h 1993
DAQmxDeviceSupportsCal = _stdcall_libraries['nicaiu'].DAQmxDeviceSupportsCal
DAQmxDeviceSupportsCal.restype = int32
# DAQmxDeviceSupportsCal(deviceName, calSupported)
DAQmxDeviceSupportsCal.argtypes = [STRING, POINTER(bool32)]
# NIDAQmx.h 1995
DAQmxGetCalInfoAttribute = _libraries['nicaiu'].DAQmxGetCalInfoAttribute
DAQmxGetCalInfoAttribute.restype = int32
# DAQmxGetCalInfoAttribute(deviceName, attribute, value)
DAQmxGetCalInfoAttribute.argtypes = [STRING, int32, c_void_p]
# NIDAQmx.h 1996
DAQmxSetCalInfoAttribute = _libraries['nicaiu'].DAQmxSetCalInfoAttribute
DAQmxSetCalInfoAttribute.restype = int32
# DAQmxSetCalInfoAttribute(deviceName, attribute)
DAQmxSetCalInfoAttribute.argtypes = [STRING, int32]
# NIDAQmx.h 1998
DAQmxInitExtCal = _stdcall_libraries['nicaiu'].DAQmxInitExtCal
DAQmxInitExtCal.restype = int32
# DAQmxInitExtCal(deviceName, password, calHandle)
DAQmxInitExtCal.argtypes = [STRING, STRING, POINTER(uInt32)]
# NIDAQmx.h 1999
DAQmxCloseExtCal = _stdcall_libraries['nicaiu'].DAQmxCloseExtCal
DAQmxCloseExtCal.restype = int32
# DAQmxCloseExtCal(calHandle, action)
DAQmxCloseExtCal.argtypes = [uInt32, int32]
# NIDAQmx.h 2000
DAQmxChangeExtCalPassword = _stdcall_libraries['nicaiu'].DAQmxChangeExtCalPassword
DAQmxChangeExtCalPassword.restype = int32
# DAQmxChangeExtCalPassword(deviceName, password, newPassword)
DAQmxChangeExtCalPassword.argtypes = [STRING, STRING, STRING]
# NIDAQmx.h 2002
DAQmxAdjustDSAAICal = _stdcall_libraries['nicaiu'].DAQmxAdjustDSAAICal
DAQmxAdjustDSAAICal.restype = int32
# DAQmxAdjustDSAAICal(calHandle, referenceVoltage)
DAQmxAdjustDSAAICal.argtypes = [uInt32, float64]
# NIDAQmx.h 2003
DAQmxAdjustDSAAOCal = _stdcall_libraries['nicaiu'].DAQmxAdjustDSAAOCal
DAQmxAdjustDSAAOCal.restype = int32
# DAQmxAdjustDSAAOCal(calHandle, channel, requestedLowVoltage, actualLowVoltage, requestedHighVoltage, actualHighVoltage, gainSetting)
DAQmxAdjustDSAAOCal.argtypes = [uInt32, uInt32, float64, float64, float64, float64, float64]
# NIDAQmx.h 2004
DAQmxAdjustDSATimebaseCal = _stdcall_libraries['nicaiu'].DAQmxAdjustDSATimebaseCal
DAQmxAdjustDSATimebaseCal.restype = int32
# DAQmxAdjustDSATimebaseCal(calHandle, referenceFrequency)
DAQmxAdjustDSATimebaseCal.argtypes = [uInt32, float64]
# NIDAQmx.h 2006
DAQmxAdjust4204Cal = _stdcall_libraries['nicaiu'].DAQmxAdjust4204Cal
DAQmxAdjust4204Cal.restype = int32
# DAQmxAdjust4204Cal(calHandle, channelNames, lowPassFreq, trackHoldEnabled, inputVal)
DAQmxAdjust4204Cal.argtypes = [uInt32, STRING, float64, bool32, float64]
# NIDAQmx.h 2007
DAQmxAdjust4220Cal = _stdcall_libraries['nicaiu'].DAQmxAdjust4220Cal
DAQmxAdjust4220Cal.restype = int32
# DAQmxAdjust4220Cal(calHandle, channelNames, gain, inputVal)
DAQmxAdjust4220Cal.argtypes = [uInt32, STRING, float64, float64]
# NIDAQmx.h 2008
DAQmxAdjust4224Cal = _stdcall_libraries['nicaiu'].DAQmxAdjust4224Cal
DAQmxAdjust4224Cal.restype = int32
# DAQmxAdjust4224Cal(calHandle, channelNames, gain, inputVal)
DAQmxAdjust4224Cal.argtypes = [uInt32, STRING, float64, float64]
# NIDAQmx.h 2009
DAQmxAdjust4225Cal = _stdcall_libraries['nicaiu'].DAQmxAdjust4225Cal
DAQmxAdjust4225Cal.restype = int32
# DAQmxAdjust4225Cal(calHandle, channelNames, gain, inputVal)
DAQmxAdjust4225Cal.argtypes = [uInt32, STRING, float64, float64]
# NIDAQmx.h 2016
DAQmxConfigureTEDS = _stdcall_libraries['nicaiu'].DAQmxConfigureTEDS
DAQmxConfigureTEDS.restype = int32
# DAQmxConfigureTEDS(physicalChannel, filePath)
DAQmxConfigureTEDS.argtypes = [STRING, STRING]
# NIDAQmx.h 2017
DAQmxClearTEDS = _stdcall_libraries['nicaiu'].DAQmxClearTEDS
DAQmxClearTEDS.restype = int32
# DAQmxClearTEDS(physicalChannel)
DAQmxClearTEDS.argtypes = [STRING]
# NIDAQmx.h 2018
DAQmxWriteToTEDSFromArray = _stdcall_libraries['nicaiu'].DAQmxWriteToTEDSFromArray
DAQmxWriteToTEDSFromArray.restype = int32
# DAQmxWriteToTEDSFromArray(physicalChannel, bitStream, arraySize, basicTEDSOptions)
DAQmxWriteToTEDSFromArray.argtypes = [STRING, POINTER(uInt8), uInt32, int32]
# NIDAQmx.h 2019
DAQmxWriteToTEDSFromFile = _stdcall_libraries['nicaiu'].DAQmxWriteToTEDSFromFile
DAQmxWriteToTEDSFromFile.restype = int32
# DAQmxWriteToTEDSFromFile(physicalChannel, filePath, basicTEDSOptions)
DAQmxWriteToTEDSFromFile.argtypes = [STRING, STRING, int32]
# NIDAQmx.h 2020
DAQmxGetPhysicalChanAttribute = _libraries['nicaiu'].DAQmxGetPhysicalChanAttribute
DAQmxGetPhysicalChanAttribute.restype = int32
# DAQmxGetPhysicalChanAttribute(physicalChannel, attribute, value)
DAQmxGetPhysicalChanAttribute.argtypes = [STRING, int32, c_void_p]
# NIDAQmx.h 2027
DAQmxWaitForNextSampleClock = _stdcall_libraries['nicaiu'].DAQmxWaitForNextSampleClock
DAQmxWaitForNextSampleClock.restype = int32
# DAQmxWaitForNextSampleClock(taskHandle, timeout, isLate)
DAQmxWaitForNextSampleClock.argtypes = [TaskHandle, float64, POINTER(bool32)]
# NIDAQmx.h 2028
DAQmxGetRealTimeAttribute = _libraries['nicaiu'].DAQmxGetRealTimeAttribute
DAQmxGetRealTimeAttribute.restype = int32
# DAQmxGetRealTimeAttribute(taskHandle, attribute, value)
DAQmxGetRealTimeAttribute.argtypes = [TaskHandle, int32, c_void_p]
# NIDAQmx.h 2029
DAQmxSetRealTimeAttribute = _libraries['nicaiu'].DAQmxSetRealTimeAttribute
DAQmxSetRealTimeAttribute.restype = int32
# DAQmxSetRealTimeAttribute(taskHandle, attribute)
DAQmxSetRealTimeAttribute.argtypes = [TaskHandle, int32]
# NIDAQmx.h 2030
DAQmxResetRealTimeAttribute = _stdcall_libraries['nicaiu'].DAQmxResetRealTimeAttribute
DAQmxResetRealTimeAttribute.restype = int32
# DAQmxResetRealTimeAttribute(taskHandle, attribute)
DAQmxResetRealTimeAttribute.argtypes = [TaskHandle, int32]
# NIDAQmx.h 2033
DAQmxIsReadOrWriteLate = _stdcall_libraries['nicaiu'].DAQmxIsReadOrWriteLate
DAQmxIsReadOrWriteLate.restype = bool32
# DAQmxIsReadOrWriteLate(errorCode)
DAQmxIsReadOrWriteLate.argtypes = [int32]
# NIDAQmx.h 2040
DAQmxSaveTask = _stdcall_libraries['nicaiu'].DAQmxSaveTask
DAQmxSaveTask.restype = int32
# DAQmxSaveTask(taskHandle, saveAs, author, options)
DAQmxSaveTask.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2041
DAQmxSaveGlobalChan = _stdcall_libraries['nicaiu'].DAQmxSaveGlobalChan
DAQmxSaveGlobalChan.restype = int32
# DAQmxSaveGlobalChan(taskHandle, channelName, saveAs, author, options)
DAQmxSaveGlobalChan.argtypes = [TaskHandle, STRING, STRING, STRING, uInt32]
# NIDAQmx.h 2042
DAQmxSaveScale = _stdcall_libraries['nicaiu'].DAQmxSaveScale
DAQmxSaveScale.restype = int32
# DAQmxSaveScale(scaleName, saveAs, author, options)
DAQmxSaveScale.argtypes = [STRING, STRING, STRING, uInt32]
# NIDAQmx.h 2043
DAQmxDeleteSavedTask = _stdcall_libraries['nicaiu'].DAQmxDeleteSavedTask
DAQmxDeleteSavedTask.restype = int32
# DAQmxDeleteSavedTask(taskName)
DAQmxDeleteSavedTask.argtypes = [STRING]
# NIDAQmx.h 2044
DAQmxDeleteSavedGlobalChan = _stdcall_libraries['nicaiu'].DAQmxDeleteSavedGlobalChan
DAQmxDeleteSavedGlobalChan.restype = int32
# DAQmxDeleteSavedGlobalChan(channelName)
DAQmxDeleteSavedGlobalChan.argtypes = [STRING]
# NIDAQmx.h 2045
DAQmxDeleteSavedScale = _stdcall_libraries['nicaiu'].DAQmxDeleteSavedScale
DAQmxDeleteSavedScale.restype = int32
# DAQmxDeleteSavedScale(scaleName)
DAQmxDeleteSavedScale.argtypes = [STRING]
# NIDAQmx.h 2047
DAQmxGetPersistedTaskAttribute = _libraries['nicaiu'].DAQmxGetPersistedTaskAttribute
DAQmxGetPersistedTaskAttribute.restype = int32
# DAQmxGetPersistedTaskAttribute(taskName, attribute, value)
DAQmxGetPersistedTaskAttribute.argtypes = [STRING, int32, c_void_p]
# NIDAQmx.h 2048
DAQmxGetPersistedChanAttribute = _libraries['nicaiu'].DAQmxGetPersistedChanAttribute
DAQmxGetPersistedChanAttribute.restype = int32
# DAQmxGetPersistedChanAttribute(channel, attribute, value)
DAQmxGetPersistedChanAttribute.argtypes = [STRING, int32, c_void_p]
# NIDAQmx.h 2049
DAQmxGetPersistedScaleAttribute = _libraries['nicaiu'].DAQmxGetPersistedScaleAttribute
DAQmxGetPersistedScaleAttribute.restype = int32
# DAQmxGetPersistedScaleAttribute(scaleName, attribute, value)
DAQmxGetPersistedScaleAttribute.argtypes = [STRING, int32, c_void_p]
# NIDAQmx.h 2056
DAQmxGetSystemInfoAttribute = _libraries['nicaiu'].DAQmxGetSystemInfoAttribute
DAQmxGetSystemInfoAttribute.restype = int32
# DAQmxGetSystemInfoAttribute(attribute, value)
DAQmxGetSystemInfoAttribute.argtypes = [int32, c_void_p]
# NIDAQmx.h 2057
DAQmxSetDigitalPowerUpStates = _libraries['nicaiu'].DAQmxSetDigitalPowerUpStates
DAQmxSetDigitalPowerUpStates.restype = int32
# DAQmxSetDigitalPowerUpStates(deviceName, channelNames, state)
DAQmxSetDigitalPowerUpStates.argtypes = [STRING, STRING, int32]
# NIDAQmx.h 2058
DAQmxSetAnalogPowerUpStates = _libraries['nicaiu'].DAQmxSetAnalogPowerUpStates
DAQmxSetAnalogPowerUpStates.restype = int32
# DAQmxSetAnalogPowerUpStates(deviceName, channelNames, state, channelType)
DAQmxSetAnalogPowerUpStates.argtypes = [STRING, STRING, float64, int32]
# NIDAQmx.h 2065
DAQmxGetErrorString = _stdcall_libraries['nicaiu'].DAQmxGetErrorString
DAQmxGetErrorString.restype = int32
# DAQmxGetErrorString(errorCode, errorString, bufferSize)
DAQmxGetErrorString.argtypes = [int32, STRING, uInt32]
# NIDAQmx.h 2066
DAQmxGetExtendedErrorInfo = _stdcall_libraries['nicaiu'].DAQmxGetExtendedErrorInfo
DAQmxGetExtendedErrorInfo.restype = int32
# DAQmxGetExtendedErrorInfo(errorString, bufferSize)
DAQmxGetExtendedErrorInfo.argtypes = [STRING, uInt32]
# NIDAQmx.h 2075
DAQmxGetBufInputBufSize = _stdcall_libraries['nicaiu'].DAQmxGetBufInputBufSize
DAQmxGetBufInputBufSize.restype = int32
# DAQmxGetBufInputBufSize(taskHandle, data)
DAQmxGetBufInputBufSize.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 2076
DAQmxSetBufInputBufSize = _stdcall_libraries['nicaiu'].DAQmxSetBufInputBufSize
DAQmxSetBufInputBufSize.restype = int32
# DAQmxSetBufInputBufSize(taskHandle, data)
DAQmxSetBufInputBufSize.argtypes = [TaskHandle, uInt32]
# NIDAQmx.h 2077
DAQmxResetBufInputBufSize = _stdcall_libraries['nicaiu'].DAQmxResetBufInputBufSize
DAQmxResetBufInputBufSize.restype = int32
# DAQmxResetBufInputBufSize(taskHandle)
DAQmxResetBufInputBufSize.argtypes = [TaskHandle]
# NIDAQmx.h 2079
DAQmxGetBufInputOnbrdBufSize = _stdcall_libraries['nicaiu'].DAQmxGetBufInputOnbrdBufSize
DAQmxGetBufInputOnbrdBufSize.restype = int32
# DAQmxGetBufInputOnbrdBufSize(taskHandle, data)
DAQmxGetBufInputOnbrdBufSize.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 2081
DAQmxGetBufOutputBufSize = _stdcall_libraries['nicaiu'].DAQmxGetBufOutputBufSize
DAQmxGetBufOutputBufSize.restype = int32
# DAQmxGetBufOutputBufSize(taskHandle, data)
DAQmxGetBufOutputBufSize.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 2082
DAQmxSetBufOutputBufSize = _stdcall_libraries['nicaiu'].DAQmxSetBufOutputBufSize
DAQmxSetBufOutputBufSize.restype = int32
# DAQmxSetBufOutputBufSize(taskHandle, data)
DAQmxSetBufOutputBufSize.argtypes = [TaskHandle, uInt32]
# NIDAQmx.h 2083
DAQmxResetBufOutputBufSize = _stdcall_libraries['nicaiu'].DAQmxResetBufOutputBufSize
DAQmxResetBufOutputBufSize.restype = int32
# DAQmxResetBufOutputBufSize(taskHandle)
DAQmxResetBufOutputBufSize.argtypes = [TaskHandle]
# NIDAQmx.h 2085
DAQmxGetBufOutputOnbrdBufSize = _stdcall_libraries['nicaiu'].DAQmxGetBufOutputOnbrdBufSize
DAQmxGetBufOutputOnbrdBufSize.restype = int32
# DAQmxGetBufOutputOnbrdBufSize(taskHandle, data)
DAQmxGetBufOutputOnbrdBufSize.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 2086
DAQmxSetBufOutputOnbrdBufSize = _stdcall_libraries['nicaiu'].DAQmxSetBufOutputOnbrdBufSize
DAQmxSetBufOutputOnbrdBufSize.restype = int32
# DAQmxSetBufOutputOnbrdBufSize(taskHandle, data)
DAQmxSetBufOutputOnbrdBufSize.argtypes = [TaskHandle, uInt32]
# NIDAQmx.h 2087
DAQmxResetBufOutputOnbrdBufSize = _stdcall_libraries['nicaiu'].DAQmxResetBufOutputOnbrdBufSize
DAQmxResetBufOutputOnbrdBufSize.restype = int32
# DAQmxResetBufOutputOnbrdBufSize(taskHandle)
DAQmxResetBufOutputOnbrdBufSize.argtypes = [TaskHandle]
# NIDAQmx.h 2091
DAQmxGetSelfCalSupported = _stdcall_libraries['nicaiu'].DAQmxGetSelfCalSupported
DAQmxGetSelfCalSupported.restype = int32
# DAQmxGetSelfCalSupported(deviceName, data)
DAQmxGetSelfCalSupported.argtypes = [STRING, POINTER(bool32)]
# NIDAQmx.h 2093
DAQmxGetSelfCalLastTemp = _stdcall_libraries['nicaiu'].DAQmxGetSelfCalLastTemp
DAQmxGetSelfCalLastTemp.restype = int32
# DAQmxGetSelfCalLastTemp(deviceName, data)
DAQmxGetSelfCalLastTemp.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 2095
DAQmxGetExtCalRecommendedInterval = _stdcall_libraries['nicaiu'].DAQmxGetExtCalRecommendedInterval
DAQmxGetExtCalRecommendedInterval.restype = int32
# DAQmxGetExtCalRecommendedInterval(deviceName, data)
DAQmxGetExtCalRecommendedInterval.argtypes = [STRING, POINTER(uInt32)]
# NIDAQmx.h 2097
DAQmxGetExtCalLastTemp = _stdcall_libraries['nicaiu'].DAQmxGetExtCalLastTemp
DAQmxGetExtCalLastTemp.restype = int32
# DAQmxGetExtCalLastTemp(deviceName, data)
DAQmxGetExtCalLastTemp.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 2099
DAQmxGetCalUserDefinedInfo = _stdcall_libraries['nicaiu'].DAQmxGetCalUserDefinedInfo
DAQmxGetCalUserDefinedInfo.restype = int32
# DAQmxGetCalUserDefinedInfo(deviceName, data, bufferSize)
DAQmxGetCalUserDefinedInfo.argtypes = [STRING, STRING, uInt32]
# NIDAQmx.h 2100
DAQmxSetCalUserDefinedInfo = _stdcall_libraries['nicaiu'].DAQmxSetCalUserDefinedInfo
DAQmxSetCalUserDefinedInfo.restype = int32
# DAQmxSetCalUserDefinedInfo(deviceName, data)
DAQmxSetCalUserDefinedInfo.argtypes = [STRING, STRING]
# NIDAQmx.h 2102
DAQmxGetCalUserDefinedInfoMaxSize = _stdcall_libraries['nicaiu'].DAQmxGetCalUserDefinedInfoMaxSize
DAQmxGetCalUserDefinedInfoMaxSize.restype = int32
# DAQmxGetCalUserDefinedInfoMaxSize(deviceName, data)
DAQmxGetCalUserDefinedInfoMaxSize.argtypes = [STRING, POINTER(uInt32)]
# NIDAQmx.h 2104
DAQmxGetCalDevTemp = _stdcall_libraries['nicaiu'].DAQmxGetCalDevTemp
DAQmxGetCalDevTemp.restype = int32
# DAQmxGetCalDevTemp(deviceName, data)
DAQmxGetCalDevTemp.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 2108
DAQmxGetAIMax = _stdcall_libraries['nicaiu'].DAQmxGetAIMax
DAQmxGetAIMax.restype = int32
# DAQmxGetAIMax(taskHandle, channel, data)
DAQmxGetAIMax.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2109
DAQmxSetAIMax = _stdcall_libraries['nicaiu'].DAQmxSetAIMax
DAQmxSetAIMax.restype = int32
# DAQmxSetAIMax(taskHandle, channel, data)
DAQmxSetAIMax.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2110
DAQmxResetAIMax = _stdcall_libraries['nicaiu'].DAQmxResetAIMax
DAQmxResetAIMax.restype = int32
# DAQmxResetAIMax(taskHandle, channel)
DAQmxResetAIMax.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2112
DAQmxGetAIMin = _stdcall_libraries['nicaiu'].DAQmxGetAIMin
DAQmxGetAIMin.restype = int32
# DAQmxGetAIMin(taskHandle, channel, data)
DAQmxGetAIMin.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2113
DAQmxSetAIMin = _stdcall_libraries['nicaiu'].DAQmxSetAIMin
DAQmxSetAIMin.restype = int32
# DAQmxSetAIMin(taskHandle, channel, data)
DAQmxSetAIMin.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2114
DAQmxResetAIMin = _stdcall_libraries['nicaiu'].DAQmxResetAIMin
DAQmxResetAIMin.restype = int32
# DAQmxResetAIMin(taskHandle, channel)
DAQmxResetAIMin.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2116
DAQmxGetAICustomScaleName = _stdcall_libraries['nicaiu'].DAQmxGetAICustomScaleName
DAQmxGetAICustomScaleName.restype = int32
# DAQmxGetAICustomScaleName(taskHandle, channel, data, bufferSize)
DAQmxGetAICustomScaleName.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2117
DAQmxSetAICustomScaleName = _stdcall_libraries['nicaiu'].DAQmxSetAICustomScaleName
DAQmxSetAICustomScaleName.restype = int32
# DAQmxSetAICustomScaleName(taskHandle, channel, data)
DAQmxSetAICustomScaleName.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2118
DAQmxResetAICustomScaleName = _stdcall_libraries['nicaiu'].DAQmxResetAICustomScaleName
DAQmxResetAICustomScaleName.restype = int32
# DAQmxResetAICustomScaleName(taskHandle, channel)
DAQmxResetAICustomScaleName.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2121
DAQmxGetAIMeasType = _stdcall_libraries['nicaiu'].DAQmxGetAIMeasType
DAQmxGetAIMeasType.restype = int32
# DAQmxGetAIMeasType(taskHandle, channel, data)
DAQmxGetAIMeasType.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2124
DAQmxGetAIVoltageUnits = _stdcall_libraries['nicaiu'].DAQmxGetAIVoltageUnits
DAQmxGetAIVoltageUnits.restype = int32
# DAQmxGetAIVoltageUnits(taskHandle, channel, data)
DAQmxGetAIVoltageUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2125
DAQmxSetAIVoltageUnits = _stdcall_libraries['nicaiu'].DAQmxSetAIVoltageUnits
DAQmxSetAIVoltageUnits.restype = int32
# DAQmxSetAIVoltageUnits(taskHandle, channel, data)
DAQmxSetAIVoltageUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2126
DAQmxResetAIVoltageUnits = _stdcall_libraries['nicaiu'].DAQmxResetAIVoltageUnits
DAQmxResetAIVoltageUnits.restype = int32
# DAQmxResetAIVoltageUnits(taskHandle, channel)
DAQmxResetAIVoltageUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2129
DAQmxGetAITempUnits = _stdcall_libraries['nicaiu'].DAQmxGetAITempUnits
DAQmxGetAITempUnits.restype = int32
# DAQmxGetAITempUnits(taskHandle, channel, data)
DAQmxGetAITempUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2130
DAQmxSetAITempUnits = _stdcall_libraries['nicaiu'].DAQmxSetAITempUnits
DAQmxSetAITempUnits.restype = int32
# DAQmxSetAITempUnits(taskHandle, channel, data)
DAQmxSetAITempUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2131
DAQmxResetAITempUnits = _stdcall_libraries['nicaiu'].DAQmxResetAITempUnits
DAQmxResetAITempUnits.restype = int32
# DAQmxResetAITempUnits(taskHandle, channel)
DAQmxResetAITempUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2134
DAQmxGetAIThrmcplType = _stdcall_libraries['nicaiu'].DAQmxGetAIThrmcplType
DAQmxGetAIThrmcplType.restype = int32
# DAQmxGetAIThrmcplType(taskHandle, channel, data)
DAQmxGetAIThrmcplType.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2135
DAQmxSetAIThrmcplType = _stdcall_libraries['nicaiu'].DAQmxSetAIThrmcplType
DAQmxSetAIThrmcplType.restype = int32
# DAQmxSetAIThrmcplType(taskHandle, channel, data)
DAQmxSetAIThrmcplType.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2136
DAQmxResetAIThrmcplType = _stdcall_libraries['nicaiu'].DAQmxResetAIThrmcplType
DAQmxResetAIThrmcplType.restype = int32
# DAQmxResetAIThrmcplType(taskHandle, channel)
DAQmxResetAIThrmcplType.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2139
DAQmxGetAIThrmcplCJCSrc = _stdcall_libraries['nicaiu'].DAQmxGetAIThrmcplCJCSrc
DAQmxGetAIThrmcplCJCSrc.restype = int32
# DAQmxGetAIThrmcplCJCSrc(taskHandle, channel, data)
DAQmxGetAIThrmcplCJCSrc.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2141
DAQmxGetAIThrmcplCJCVal = _stdcall_libraries['nicaiu'].DAQmxGetAIThrmcplCJCVal
DAQmxGetAIThrmcplCJCVal.restype = int32
# DAQmxGetAIThrmcplCJCVal(taskHandle, channel, data)
DAQmxGetAIThrmcplCJCVal.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2142
DAQmxSetAIThrmcplCJCVal = _stdcall_libraries['nicaiu'].DAQmxSetAIThrmcplCJCVal
DAQmxSetAIThrmcplCJCVal.restype = int32
# DAQmxSetAIThrmcplCJCVal(taskHandle, channel, data)
DAQmxSetAIThrmcplCJCVal.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2143
DAQmxResetAIThrmcplCJCVal = _stdcall_libraries['nicaiu'].DAQmxResetAIThrmcplCJCVal
DAQmxResetAIThrmcplCJCVal.restype = int32
# DAQmxResetAIThrmcplCJCVal(taskHandle, channel)
DAQmxResetAIThrmcplCJCVal.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2145
DAQmxGetAIThrmcplCJCChan = _stdcall_libraries['nicaiu'].DAQmxGetAIThrmcplCJCChan
DAQmxGetAIThrmcplCJCChan.restype = int32
# DAQmxGetAIThrmcplCJCChan(taskHandle, channel, data, bufferSize)
DAQmxGetAIThrmcplCJCChan.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2148
DAQmxGetAIRTDType = _stdcall_libraries['nicaiu'].DAQmxGetAIRTDType
DAQmxGetAIRTDType.restype = int32
# DAQmxGetAIRTDType(taskHandle, channel, data)
DAQmxGetAIRTDType.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2149
DAQmxSetAIRTDType = _stdcall_libraries['nicaiu'].DAQmxSetAIRTDType
DAQmxSetAIRTDType.restype = int32
# DAQmxSetAIRTDType(taskHandle, channel, data)
DAQmxSetAIRTDType.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2150
DAQmxResetAIRTDType = _stdcall_libraries['nicaiu'].DAQmxResetAIRTDType
DAQmxResetAIRTDType.restype = int32
# DAQmxResetAIRTDType(taskHandle, channel)
DAQmxResetAIRTDType.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2152
DAQmxGetAIRTDR0 = _stdcall_libraries['nicaiu'].DAQmxGetAIRTDR0
DAQmxGetAIRTDR0.restype = int32
# DAQmxGetAIRTDR0(taskHandle, channel, data)
DAQmxGetAIRTDR0.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2153
DAQmxSetAIRTDR0 = _stdcall_libraries['nicaiu'].DAQmxSetAIRTDR0
DAQmxSetAIRTDR0.restype = int32
# DAQmxSetAIRTDR0(taskHandle, channel, data)
DAQmxSetAIRTDR0.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2154
DAQmxResetAIRTDR0 = _stdcall_libraries['nicaiu'].DAQmxResetAIRTDR0
DAQmxResetAIRTDR0.restype = int32
# DAQmxResetAIRTDR0(taskHandle, channel)
DAQmxResetAIRTDR0.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2156
DAQmxGetAIRTDA = _stdcall_libraries['nicaiu'].DAQmxGetAIRTDA
DAQmxGetAIRTDA.restype = int32
# DAQmxGetAIRTDA(taskHandle, channel, data)
DAQmxGetAIRTDA.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2157
DAQmxSetAIRTDA = _stdcall_libraries['nicaiu'].DAQmxSetAIRTDA
DAQmxSetAIRTDA.restype = int32
# DAQmxSetAIRTDA(taskHandle, channel, data)
DAQmxSetAIRTDA.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2158
DAQmxResetAIRTDA = _stdcall_libraries['nicaiu'].DAQmxResetAIRTDA
DAQmxResetAIRTDA.restype = int32
# DAQmxResetAIRTDA(taskHandle, channel)
DAQmxResetAIRTDA.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2160
DAQmxGetAIRTDB = _stdcall_libraries['nicaiu'].DAQmxGetAIRTDB
DAQmxGetAIRTDB.restype = int32
# DAQmxGetAIRTDB(taskHandle, channel, data)
DAQmxGetAIRTDB.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2161
DAQmxSetAIRTDB = _stdcall_libraries['nicaiu'].DAQmxSetAIRTDB
DAQmxSetAIRTDB.restype = int32
# DAQmxSetAIRTDB(taskHandle, channel, data)
DAQmxSetAIRTDB.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2162
DAQmxResetAIRTDB = _stdcall_libraries['nicaiu'].DAQmxResetAIRTDB
DAQmxResetAIRTDB.restype = int32
# DAQmxResetAIRTDB(taskHandle, channel)
DAQmxResetAIRTDB.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2164
DAQmxGetAIRTDC = _stdcall_libraries['nicaiu'].DAQmxGetAIRTDC
DAQmxGetAIRTDC.restype = int32
# DAQmxGetAIRTDC(taskHandle, channel, data)
DAQmxGetAIRTDC.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2165
DAQmxSetAIRTDC = _stdcall_libraries['nicaiu'].DAQmxSetAIRTDC
DAQmxSetAIRTDC.restype = int32
# DAQmxSetAIRTDC(taskHandle, channel, data)
DAQmxSetAIRTDC.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2166
DAQmxResetAIRTDC = _stdcall_libraries['nicaiu'].DAQmxResetAIRTDC
DAQmxResetAIRTDC.restype = int32
# DAQmxResetAIRTDC(taskHandle, channel)
DAQmxResetAIRTDC.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2168
DAQmxGetAIThrmstrA = _stdcall_libraries['nicaiu'].DAQmxGetAIThrmstrA
DAQmxGetAIThrmstrA.restype = int32
# DAQmxGetAIThrmstrA(taskHandle, channel, data)
DAQmxGetAIThrmstrA.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2169
DAQmxSetAIThrmstrA = _stdcall_libraries['nicaiu'].DAQmxSetAIThrmstrA
DAQmxSetAIThrmstrA.restype = int32
# DAQmxSetAIThrmstrA(taskHandle, channel, data)
DAQmxSetAIThrmstrA.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2170
DAQmxResetAIThrmstrA = _stdcall_libraries['nicaiu'].DAQmxResetAIThrmstrA
DAQmxResetAIThrmstrA.restype = int32
# DAQmxResetAIThrmstrA(taskHandle, channel)
DAQmxResetAIThrmstrA.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2172
DAQmxGetAIThrmstrB = _stdcall_libraries['nicaiu'].DAQmxGetAIThrmstrB
DAQmxGetAIThrmstrB.restype = int32
# DAQmxGetAIThrmstrB(taskHandle, channel, data)
DAQmxGetAIThrmstrB.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2173
DAQmxSetAIThrmstrB = _stdcall_libraries['nicaiu'].DAQmxSetAIThrmstrB
DAQmxSetAIThrmstrB.restype = int32
# DAQmxSetAIThrmstrB(taskHandle, channel, data)
DAQmxSetAIThrmstrB.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2174
DAQmxResetAIThrmstrB = _stdcall_libraries['nicaiu'].DAQmxResetAIThrmstrB
DAQmxResetAIThrmstrB.restype = int32
# DAQmxResetAIThrmstrB(taskHandle, channel)
DAQmxResetAIThrmstrB.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2176
DAQmxGetAIThrmstrC = _stdcall_libraries['nicaiu'].DAQmxGetAIThrmstrC
DAQmxGetAIThrmstrC.restype = int32
# DAQmxGetAIThrmstrC(taskHandle, channel, data)
DAQmxGetAIThrmstrC.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2177
DAQmxSetAIThrmstrC = _stdcall_libraries['nicaiu'].DAQmxSetAIThrmstrC
DAQmxSetAIThrmstrC.restype = int32
# DAQmxSetAIThrmstrC(taskHandle, channel, data)
DAQmxSetAIThrmstrC.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2178
DAQmxResetAIThrmstrC = _stdcall_libraries['nicaiu'].DAQmxResetAIThrmstrC
DAQmxResetAIThrmstrC.restype = int32
# DAQmxResetAIThrmstrC(taskHandle, channel)
DAQmxResetAIThrmstrC.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2180
DAQmxGetAIThrmstrR1 = _stdcall_libraries['nicaiu'].DAQmxGetAIThrmstrR1
DAQmxGetAIThrmstrR1.restype = int32
# DAQmxGetAIThrmstrR1(taskHandle, channel, data)
DAQmxGetAIThrmstrR1.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2181
DAQmxSetAIThrmstrR1 = _stdcall_libraries['nicaiu'].DAQmxSetAIThrmstrR1
DAQmxSetAIThrmstrR1.restype = int32
# DAQmxSetAIThrmstrR1(taskHandle, channel, data)
DAQmxSetAIThrmstrR1.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2182
DAQmxResetAIThrmstrR1 = _stdcall_libraries['nicaiu'].DAQmxResetAIThrmstrR1
DAQmxResetAIThrmstrR1.restype = int32
# DAQmxResetAIThrmstrR1(taskHandle, channel)
DAQmxResetAIThrmstrR1.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2184
DAQmxGetAIForceReadFromChan = _stdcall_libraries['nicaiu'].DAQmxGetAIForceReadFromChan
DAQmxGetAIForceReadFromChan.restype = int32
# DAQmxGetAIForceReadFromChan(taskHandle, channel, data)
DAQmxGetAIForceReadFromChan.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2185
DAQmxSetAIForceReadFromChan = _stdcall_libraries['nicaiu'].DAQmxSetAIForceReadFromChan
DAQmxSetAIForceReadFromChan.restype = int32
# DAQmxSetAIForceReadFromChan(taskHandle, channel, data)
DAQmxSetAIForceReadFromChan.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2186
DAQmxResetAIForceReadFromChan = _stdcall_libraries['nicaiu'].DAQmxResetAIForceReadFromChan
DAQmxResetAIForceReadFromChan.restype = int32
# DAQmxResetAIForceReadFromChan(taskHandle, channel)
DAQmxResetAIForceReadFromChan.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2189
DAQmxGetAICurrentUnits = _stdcall_libraries['nicaiu'].DAQmxGetAICurrentUnits
DAQmxGetAICurrentUnits.restype = int32
# DAQmxGetAICurrentUnits(taskHandle, channel, data)
DAQmxGetAICurrentUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2190
DAQmxSetAICurrentUnits = _stdcall_libraries['nicaiu'].DAQmxSetAICurrentUnits
DAQmxSetAICurrentUnits.restype = int32
# DAQmxSetAICurrentUnits(taskHandle, channel, data)
DAQmxSetAICurrentUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2191
DAQmxResetAICurrentUnits = _stdcall_libraries['nicaiu'].DAQmxResetAICurrentUnits
DAQmxResetAICurrentUnits.restype = int32
# DAQmxResetAICurrentUnits(taskHandle, channel)
DAQmxResetAICurrentUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2194
DAQmxGetAIStrainUnits = _stdcall_libraries['nicaiu'].DAQmxGetAIStrainUnits
DAQmxGetAIStrainUnits.restype = int32
# DAQmxGetAIStrainUnits(taskHandle, channel, data)
DAQmxGetAIStrainUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2195
DAQmxSetAIStrainUnits = _stdcall_libraries['nicaiu'].DAQmxSetAIStrainUnits
DAQmxSetAIStrainUnits.restype = int32
# DAQmxSetAIStrainUnits(taskHandle, channel, data)
DAQmxSetAIStrainUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2196
DAQmxResetAIStrainUnits = _stdcall_libraries['nicaiu'].DAQmxResetAIStrainUnits
DAQmxResetAIStrainUnits.restype = int32
# DAQmxResetAIStrainUnits(taskHandle, channel)
DAQmxResetAIStrainUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2198
DAQmxGetAIStrainGageGageFactor = _stdcall_libraries['nicaiu'].DAQmxGetAIStrainGageGageFactor
DAQmxGetAIStrainGageGageFactor.restype = int32
# DAQmxGetAIStrainGageGageFactor(taskHandle, channel, data)
DAQmxGetAIStrainGageGageFactor.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2199
DAQmxSetAIStrainGageGageFactor = _stdcall_libraries['nicaiu'].DAQmxSetAIStrainGageGageFactor
DAQmxSetAIStrainGageGageFactor.restype = int32
# DAQmxSetAIStrainGageGageFactor(taskHandle, channel, data)
DAQmxSetAIStrainGageGageFactor.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2200
DAQmxResetAIStrainGageGageFactor = _stdcall_libraries['nicaiu'].DAQmxResetAIStrainGageGageFactor
DAQmxResetAIStrainGageGageFactor.restype = int32
# DAQmxResetAIStrainGageGageFactor(taskHandle, channel)
DAQmxResetAIStrainGageGageFactor.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2202
DAQmxGetAIStrainGagePoissonRatio = _stdcall_libraries['nicaiu'].DAQmxGetAIStrainGagePoissonRatio
DAQmxGetAIStrainGagePoissonRatio.restype = int32
# DAQmxGetAIStrainGagePoissonRatio(taskHandle, channel, data)
DAQmxGetAIStrainGagePoissonRatio.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2203
DAQmxSetAIStrainGagePoissonRatio = _stdcall_libraries['nicaiu'].DAQmxSetAIStrainGagePoissonRatio
DAQmxSetAIStrainGagePoissonRatio.restype = int32
# DAQmxSetAIStrainGagePoissonRatio(taskHandle, channel, data)
DAQmxSetAIStrainGagePoissonRatio.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2204
DAQmxResetAIStrainGagePoissonRatio = _stdcall_libraries['nicaiu'].DAQmxResetAIStrainGagePoissonRatio
DAQmxResetAIStrainGagePoissonRatio.restype = int32
# DAQmxResetAIStrainGagePoissonRatio(taskHandle, channel)
DAQmxResetAIStrainGagePoissonRatio.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2207
DAQmxGetAIStrainGageCfg = _stdcall_libraries['nicaiu'].DAQmxGetAIStrainGageCfg
DAQmxGetAIStrainGageCfg.restype = int32
# DAQmxGetAIStrainGageCfg(taskHandle, channel, data)
DAQmxGetAIStrainGageCfg.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2208
DAQmxSetAIStrainGageCfg = _stdcall_libraries['nicaiu'].DAQmxSetAIStrainGageCfg
DAQmxSetAIStrainGageCfg.restype = int32
# DAQmxSetAIStrainGageCfg(taskHandle, channel, data)
DAQmxSetAIStrainGageCfg.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2209
DAQmxResetAIStrainGageCfg = _stdcall_libraries['nicaiu'].DAQmxResetAIStrainGageCfg
DAQmxResetAIStrainGageCfg.restype = int32
# DAQmxResetAIStrainGageCfg(taskHandle, channel)
DAQmxResetAIStrainGageCfg.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2212
DAQmxGetAIResistanceUnits = _stdcall_libraries['nicaiu'].DAQmxGetAIResistanceUnits
DAQmxGetAIResistanceUnits.restype = int32
# DAQmxGetAIResistanceUnits(taskHandle, channel, data)
DAQmxGetAIResistanceUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2213
DAQmxSetAIResistanceUnits = _stdcall_libraries['nicaiu'].DAQmxSetAIResistanceUnits
DAQmxSetAIResistanceUnits.restype = int32
# DAQmxSetAIResistanceUnits(taskHandle, channel, data)
DAQmxSetAIResistanceUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2214
DAQmxResetAIResistanceUnits = _stdcall_libraries['nicaiu'].DAQmxResetAIResistanceUnits
DAQmxResetAIResistanceUnits.restype = int32
# DAQmxResetAIResistanceUnits(taskHandle, channel)
DAQmxResetAIResistanceUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2217
DAQmxGetAIFreqUnits = _stdcall_libraries['nicaiu'].DAQmxGetAIFreqUnits
DAQmxGetAIFreqUnits.restype = int32
# DAQmxGetAIFreqUnits(taskHandle, channel, data)
DAQmxGetAIFreqUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2218
DAQmxSetAIFreqUnits = _stdcall_libraries['nicaiu'].DAQmxSetAIFreqUnits
DAQmxSetAIFreqUnits.restype = int32
# DAQmxSetAIFreqUnits(taskHandle, channel, data)
DAQmxSetAIFreqUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2219
DAQmxResetAIFreqUnits = _stdcall_libraries['nicaiu'].DAQmxResetAIFreqUnits
DAQmxResetAIFreqUnits.restype = int32
# DAQmxResetAIFreqUnits(taskHandle, channel)
DAQmxResetAIFreqUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2221
DAQmxGetAIFreqThreshVoltage = _stdcall_libraries['nicaiu'].DAQmxGetAIFreqThreshVoltage
DAQmxGetAIFreqThreshVoltage.restype = int32
# DAQmxGetAIFreqThreshVoltage(taskHandle, channel, data)
DAQmxGetAIFreqThreshVoltage.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2222
DAQmxSetAIFreqThreshVoltage = _stdcall_libraries['nicaiu'].DAQmxSetAIFreqThreshVoltage
DAQmxSetAIFreqThreshVoltage.restype = int32
# DAQmxSetAIFreqThreshVoltage(taskHandle, channel, data)
DAQmxSetAIFreqThreshVoltage.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2223
DAQmxResetAIFreqThreshVoltage = _stdcall_libraries['nicaiu'].DAQmxResetAIFreqThreshVoltage
DAQmxResetAIFreqThreshVoltage.restype = int32
# DAQmxResetAIFreqThreshVoltage(taskHandle, channel)
DAQmxResetAIFreqThreshVoltage.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2225
DAQmxGetAIFreqHyst = _stdcall_libraries['nicaiu'].DAQmxGetAIFreqHyst
DAQmxGetAIFreqHyst.restype = int32
# DAQmxGetAIFreqHyst(taskHandle, channel, data)
DAQmxGetAIFreqHyst.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2226
DAQmxSetAIFreqHyst = _stdcall_libraries['nicaiu'].DAQmxSetAIFreqHyst
DAQmxSetAIFreqHyst.restype = int32
# DAQmxSetAIFreqHyst(taskHandle, channel, data)
DAQmxSetAIFreqHyst.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2227
DAQmxResetAIFreqHyst = _stdcall_libraries['nicaiu'].DAQmxResetAIFreqHyst
DAQmxResetAIFreqHyst.restype = int32
# DAQmxResetAIFreqHyst(taskHandle, channel)
DAQmxResetAIFreqHyst.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2230
DAQmxGetAILVDTUnits = _stdcall_libraries['nicaiu'].DAQmxGetAILVDTUnits
DAQmxGetAILVDTUnits.restype = int32
# DAQmxGetAILVDTUnits(taskHandle, channel, data)
DAQmxGetAILVDTUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2231
DAQmxSetAILVDTUnits = _stdcall_libraries['nicaiu'].DAQmxSetAILVDTUnits
DAQmxSetAILVDTUnits.restype = int32
# DAQmxSetAILVDTUnits(taskHandle, channel, data)
DAQmxSetAILVDTUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2232
DAQmxResetAILVDTUnits = _stdcall_libraries['nicaiu'].DAQmxResetAILVDTUnits
DAQmxResetAILVDTUnits.restype = int32
# DAQmxResetAILVDTUnits(taskHandle, channel)
DAQmxResetAILVDTUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2234
DAQmxGetAILVDTSensitivity = _stdcall_libraries['nicaiu'].DAQmxGetAILVDTSensitivity
DAQmxGetAILVDTSensitivity.restype = int32
# DAQmxGetAILVDTSensitivity(taskHandle, channel, data)
DAQmxGetAILVDTSensitivity.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2235
DAQmxSetAILVDTSensitivity = _stdcall_libraries['nicaiu'].DAQmxSetAILVDTSensitivity
DAQmxSetAILVDTSensitivity.restype = int32
# DAQmxSetAILVDTSensitivity(taskHandle, channel, data)
DAQmxSetAILVDTSensitivity.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2236
DAQmxResetAILVDTSensitivity = _stdcall_libraries['nicaiu'].DAQmxResetAILVDTSensitivity
DAQmxResetAILVDTSensitivity.restype = int32
# DAQmxResetAILVDTSensitivity(taskHandle, channel)
DAQmxResetAILVDTSensitivity.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2239
DAQmxGetAILVDTSensitivityUnits = _stdcall_libraries['nicaiu'].DAQmxGetAILVDTSensitivityUnits
DAQmxGetAILVDTSensitivityUnits.restype = int32
# DAQmxGetAILVDTSensitivityUnits(taskHandle, channel, data)
DAQmxGetAILVDTSensitivityUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2240
DAQmxSetAILVDTSensitivityUnits = _stdcall_libraries['nicaiu'].DAQmxSetAILVDTSensitivityUnits
DAQmxSetAILVDTSensitivityUnits.restype = int32
# DAQmxSetAILVDTSensitivityUnits(taskHandle, channel, data)
DAQmxSetAILVDTSensitivityUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2241
DAQmxResetAILVDTSensitivityUnits = _stdcall_libraries['nicaiu'].DAQmxResetAILVDTSensitivityUnits
DAQmxResetAILVDTSensitivityUnits.restype = int32
# DAQmxResetAILVDTSensitivityUnits(taskHandle, channel)
DAQmxResetAILVDTSensitivityUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2244
DAQmxGetAIRVDTUnits = _stdcall_libraries['nicaiu'].DAQmxGetAIRVDTUnits
DAQmxGetAIRVDTUnits.restype = int32
# DAQmxGetAIRVDTUnits(taskHandle, channel, data)
DAQmxGetAIRVDTUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2245
DAQmxSetAIRVDTUnits = _stdcall_libraries['nicaiu'].DAQmxSetAIRVDTUnits
DAQmxSetAIRVDTUnits.restype = int32
# DAQmxSetAIRVDTUnits(taskHandle, channel, data)
DAQmxSetAIRVDTUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2246
DAQmxResetAIRVDTUnits = _stdcall_libraries['nicaiu'].DAQmxResetAIRVDTUnits
DAQmxResetAIRVDTUnits.restype = int32
# DAQmxResetAIRVDTUnits(taskHandle, channel)
DAQmxResetAIRVDTUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2248
DAQmxGetAIRVDTSensitivity = _stdcall_libraries['nicaiu'].DAQmxGetAIRVDTSensitivity
DAQmxGetAIRVDTSensitivity.restype = int32
# DAQmxGetAIRVDTSensitivity(taskHandle, channel, data)
DAQmxGetAIRVDTSensitivity.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2249
DAQmxSetAIRVDTSensitivity = _stdcall_libraries['nicaiu'].DAQmxSetAIRVDTSensitivity
DAQmxSetAIRVDTSensitivity.restype = int32
# DAQmxSetAIRVDTSensitivity(taskHandle, channel, data)
DAQmxSetAIRVDTSensitivity.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2250
DAQmxResetAIRVDTSensitivity = _stdcall_libraries['nicaiu'].DAQmxResetAIRVDTSensitivity
DAQmxResetAIRVDTSensitivity.restype = int32
# DAQmxResetAIRVDTSensitivity(taskHandle, channel)
DAQmxResetAIRVDTSensitivity.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2253
DAQmxGetAIRVDTSensitivityUnits = _stdcall_libraries['nicaiu'].DAQmxGetAIRVDTSensitivityUnits
DAQmxGetAIRVDTSensitivityUnits.restype = int32
# DAQmxGetAIRVDTSensitivityUnits(taskHandle, channel, data)
DAQmxGetAIRVDTSensitivityUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2254
DAQmxSetAIRVDTSensitivityUnits = _stdcall_libraries['nicaiu'].DAQmxSetAIRVDTSensitivityUnits
DAQmxSetAIRVDTSensitivityUnits.restype = int32
# DAQmxSetAIRVDTSensitivityUnits(taskHandle, channel, data)
DAQmxSetAIRVDTSensitivityUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2255
DAQmxResetAIRVDTSensitivityUnits = _stdcall_libraries['nicaiu'].DAQmxResetAIRVDTSensitivityUnits
DAQmxResetAIRVDTSensitivityUnits.restype = int32
# DAQmxResetAIRVDTSensitivityUnits(taskHandle, channel)
DAQmxResetAIRVDTSensitivityUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2257
DAQmxGetAISoundPressureMaxSoundPressureLvl = _stdcall_libraries['nicaiu'].DAQmxGetAISoundPressureMaxSoundPressureLvl
DAQmxGetAISoundPressureMaxSoundPressureLvl.restype = int32
# DAQmxGetAISoundPressureMaxSoundPressureLvl(taskHandle, channel, data)
DAQmxGetAISoundPressureMaxSoundPressureLvl.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2258
DAQmxSetAISoundPressureMaxSoundPressureLvl = _stdcall_libraries['nicaiu'].DAQmxSetAISoundPressureMaxSoundPressureLvl
DAQmxSetAISoundPressureMaxSoundPressureLvl.restype = int32
# DAQmxSetAISoundPressureMaxSoundPressureLvl(taskHandle, channel, data)
DAQmxSetAISoundPressureMaxSoundPressureLvl.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2259
DAQmxResetAISoundPressureMaxSoundPressureLvl = _stdcall_libraries['nicaiu'].DAQmxResetAISoundPressureMaxSoundPressureLvl
DAQmxResetAISoundPressureMaxSoundPressureLvl.restype = int32
# DAQmxResetAISoundPressureMaxSoundPressureLvl(taskHandle, channel)
DAQmxResetAISoundPressureMaxSoundPressureLvl.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2262
DAQmxGetAISoundPressureUnits = _stdcall_libraries['nicaiu'].DAQmxGetAISoundPressureUnits
DAQmxGetAISoundPressureUnits.restype = int32
# DAQmxGetAISoundPressureUnits(taskHandle, channel, data)
DAQmxGetAISoundPressureUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2263
DAQmxSetAISoundPressureUnits = _stdcall_libraries['nicaiu'].DAQmxSetAISoundPressureUnits
DAQmxSetAISoundPressureUnits.restype = int32
# DAQmxSetAISoundPressureUnits(taskHandle, channel, data)
DAQmxSetAISoundPressureUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2264
DAQmxResetAISoundPressureUnits = _stdcall_libraries['nicaiu'].DAQmxResetAISoundPressureUnits
DAQmxResetAISoundPressureUnits.restype = int32
# DAQmxResetAISoundPressureUnits(taskHandle, channel)
DAQmxResetAISoundPressureUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2266
DAQmxGetAIMicrophoneSensitivity = _stdcall_libraries['nicaiu'].DAQmxGetAIMicrophoneSensitivity
DAQmxGetAIMicrophoneSensitivity.restype = int32
# DAQmxGetAIMicrophoneSensitivity(taskHandle, channel, data)
DAQmxGetAIMicrophoneSensitivity.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2267
DAQmxSetAIMicrophoneSensitivity = _stdcall_libraries['nicaiu'].DAQmxSetAIMicrophoneSensitivity
DAQmxSetAIMicrophoneSensitivity.restype = int32
# DAQmxSetAIMicrophoneSensitivity(taskHandle, channel, data)
DAQmxSetAIMicrophoneSensitivity.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2268
DAQmxResetAIMicrophoneSensitivity = _stdcall_libraries['nicaiu'].DAQmxResetAIMicrophoneSensitivity
DAQmxResetAIMicrophoneSensitivity.restype = int32
# DAQmxResetAIMicrophoneSensitivity(taskHandle, channel)
DAQmxResetAIMicrophoneSensitivity.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2271
DAQmxGetAIAccelUnits = _stdcall_libraries['nicaiu'].DAQmxGetAIAccelUnits
DAQmxGetAIAccelUnits.restype = int32
# DAQmxGetAIAccelUnits(taskHandle, channel, data)
DAQmxGetAIAccelUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2272
DAQmxSetAIAccelUnits = _stdcall_libraries['nicaiu'].DAQmxSetAIAccelUnits
DAQmxSetAIAccelUnits.restype = int32
# DAQmxSetAIAccelUnits(taskHandle, channel, data)
DAQmxSetAIAccelUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2273
DAQmxResetAIAccelUnits = _stdcall_libraries['nicaiu'].DAQmxResetAIAccelUnits
DAQmxResetAIAccelUnits.restype = int32
# DAQmxResetAIAccelUnits(taskHandle, channel)
DAQmxResetAIAccelUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2275
DAQmxGetAIAccelSensitivity = _stdcall_libraries['nicaiu'].DAQmxGetAIAccelSensitivity
DAQmxGetAIAccelSensitivity.restype = int32
# DAQmxGetAIAccelSensitivity(taskHandle, channel, data)
DAQmxGetAIAccelSensitivity.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2276
DAQmxSetAIAccelSensitivity = _stdcall_libraries['nicaiu'].DAQmxSetAIAccelSensitivity
DAQmxSetAIAccelSensitivity.restype = int32
# DAQmxSetAIAccelSensitivity(taskHandle, channel, data)
DAQmxSetAIAccelSensitivity.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2277
DAQmxResetAIAccelSensitivity = _stdcall_libraries['nicaiu'].DAQmxResetAIAccelSensitivity
DAQmxResetAIAccelSensitivity.restype = int32
# DAQmxResetAIAccelSensitivity(taskHandle, channel)
DAQmxResetAIAccelSensitivity.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2280
DAQmxGetAIAccelSensitivityUnits = _stdcall_libraries['nicaiu'].DAQmxGetAIAccelSensitivityUnits
DAQmxGetAIAccelSensitivityUnits.restype = int32
# DAQmxGetAIAccelSensitivityUnits(taskHandle, channel, data)
DAQmxGetAIAccelSensitivityUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2281
DAQmxSetAIAccelSensitivityUnits = _stdcall_libraries['nicaiu'].DAQmxSetAIAccelSensitivityUnits
DAQmxSetAIAccelSensitivityUnits.restype = int32
# DAQmxSetAIAccelSensitivityUnits(taskHandle, channel, data)
DAQmxSetAIAccelSensitivityUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2282
DAQmxResetAIAccelSensitivityUnits = _stdcall_libraries['nicaiu'].DAQmxResetAIAccelSensitivityUnits
DAQmxResetAIAccelSensitivityUnits.restype = int32
# DAQmxResetAIAccelSensitivityUnits(taskHandle, channel)
DAQmxResetAIAccelSensitivityUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2284
DAQmxGetAITEDSUnits = _stdcall_libraries['nicaiu'].DAQmxGetAITEDSUnits
DAQmxGetAITEDSUnits.restype = int32
# DAQmxGetAITEDSUnits(taskHandle, channel, data, bufferSize)
DAQmxGetAITEDSUnits.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2287
DAQmxGetAICoupling = _stdcall_libraries['nicaiu'].DAQmxGetAICoupling
DAQmxGetAICoupling.restype = int32
# DAQmxGetAICoupling(taskHandle, channel, data)
DAQmxGetAICoupling.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2288
DAQmxSetAICoupling = _stdcall_libraries['nicaiu'].DAQmxSetAICoupling
DAQmxSetAICoupling.restype = int32
# DAQmxSetAICoupling(taskHandle, channel, data)
DAQmxSetAICoupling.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2289
DAQmxResetAICoupling = _stdcall_libraries['nicaiu'].DAQmxResetAICoupling
DAQmxResetAICoupling.restype = int32
# DAQmxResetAICoupling(taskHandle, channel)
DAQmxResetAICoupling.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2292
DAQmxGetAIImpedance = _stdcall_libraries['nicaiu'].DAQmxGetAIImpedance
DAQmxGetAIImpedance.restype = int32
# DAQmxGetAIImpedance(taskHandle, channel, data)
DAQmxGetAIImpedance.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2293
DAQmxSetAIImpedance = _stdcall_libraries['nicaiu'].DAQmxSetAIImpedance
DAQmxSetAIImpedance.restype = int32
# DAQmxSetAIImpedance(taskHandle, channel, data)
DAQmxSetAIImpedance.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2294
DAQmxResetAIImpedance = _stdcall_libraries['nicaiu'].DAQmxResetAIImpedance
DAQmxResetAIImpedance.restype = int32
# DAQmxResetAIImpedance(taskHandle, channel)
DAQmxResetAIImpedance.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2297
DAQmxGetAITermCfg = _stdcall_libraries['nicaiu'].DAQmxGetAITermCfg
DAQmxGetAITermCfg.restype = int32
# DAQmxGetAITermCfg(taskHandle, channel, data)
DAQmxGetAITermCfg.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2298
DAQmxSetAITermCfg = _stdcall_libraries['nicaiu'].DAQmxSetAITermCfg
DAQmxSetAITermCfg.restype = int32
# DAQmxSetAITermCfg(taskHandle, channel, data)
DAQmxSetAITermCfg.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2299
DAQmxResetAITermCfg = _stdcall_libraries['nicaiu'].DAQmxResetAITermCfg
DAQmxResetAITermCfg.restype = int32
# DAQmxResetAITermCfg(taskHandle, channel)
DAQmxResetAITermCfg.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2301
DAQmxGetAIInputSrc = _stdcall_libraries['nicaiu'].DAQmxGetAIInputSrc
DAQmxGetAIInputSrc.restype = int32
# DAQmxGetAIInputSrc(taskHandle, channel, data, bufferSize)
DAQmxGetAIInputSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2302
DAQmxSetAIInputSrc = _stdcall_libraries['nicaiu'].DAQmxSetAIInputSrc
DAQmxSetAIInputSrc.restype = int32
# DAQmxSetAIInputSrc(taskHandle, channel, data)
DAQmxSetAIInputSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2303
DAQmxResetAIInputSrc = _stdcall_libraries['nicaiu'].DAQmxResetAIInputSrc
DAQmxResetAIInputSrc.restype = int32
# DAQmxResetAIInputSrc(taskHandle, channel)
DAQmxResetAIInputSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2306
DAQmxGetAIResistanceCfg = _stdcall_libraries['nicaiu'].DAQmxGetAIResistanceCfg
DAQmxGetAIResistanceCfg.restype = int32
# DAQmxGetAIResistanceCfg(taskHandle, channel, data)
DAQmxGetAIResistanceCfg.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2307
DAQmxSetAIResistanceCfg = _stdcall_libraries['nicaiu'].DAQmxSetAIResistanceCfg
DAQmxSetAIResistanceCfg.restype = int32
# DAQmxSetAIResistanceCfg(taskHandle, channel, data)
DAQmxSetAIResistanceCfg.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2308
DAQmxResetAIResistanceCfg = _stdcall_libraries['nicaiu'].DAQmxResetAIResistanceCfg
DAQmxResetAIResistanceCfg.restype = int32
# DAQmxResetAIResistanceCfg(taskHandle, channel)
DAQmxResetAIResistanceCfg.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2310
DAQmxGetAILeadWireResistance = _stdcall_libraries['nicaiu'].DAQmxGetAILeadWireResistance
DAQmxGetAILeadWireResistance.restype = int32
# DAQmxGetAILeadWireResistance(taskHandle, channel, data)
DAQmxGetAILeadWireResistance.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2311
DAQmxSetAILeadWireResistance = _stdcall_libraries['nicaiu'].DAQmxSetAILeadWireResistance
DAQmxSetAILeadWireResistance.restype = int32
# DAQmxSetAILeadWireResistance(taskHandle, channel, data)
DAQmxSetAILeadWireResistance.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2312
DAQmxResetAILeadWireResistance = _stdcall_libraries['nicaiu'].DAQmxResetAILeadWireResistance
DAQmxResetAILeadWireResistance.restype = int32
# DAQmxResetAILeadWireResistance(taskHandle, channel)
DAQmxResetAILeadWireResistance.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2315
DAQmxGetAIBridgeCfg = _stdcall_libraries['nicaiu'].DAQmxGetAIBridgeCfg
DAQmxGetAIBridgeCfg.restype = int32
# DAQmxGetAIBridgeCfg(taskHandle, channel, data)
DAQmxGetAIBridgeCfg.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2316
DAQmxSetAIBridgeCfg = _stdcall_libraries['nicaiu'].DAQmxSetAIBridgeCfg
DAQmxSetAIBridgeCfg.restype = int32
# DAQmxSetAIBridgeCfg(taskHandle, channel, data)
DAQmxSetAIBridgeCfg.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2317
DAQmxResetAIBridgeCfg = _stdcall_libraries['nicaiu'].DAQmxResetAIBridgeCfg
DAQmxResetAIBridgeCfg.restype = int32
# DAQmxResetAIBridgeCfg(taskHandle, channel)
DAQmxResetAIBridgeCfg.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2319
DAQmxGetAIBridgeNomResistance = _stdcall_libraries['nicaiu'].DAQmxGetAIBridgeNomResistance
DAQmxGetAIBridgeNomResistance.restype = int32
# DAQmxGetAIBridgeNomResistance(taskHandle, channel, data)
DAQmxGetAIBridgeNomResistance.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2320
DAQmxSetAIBridgeNomResistance = _stdcall_libraries['nicaiu'].DAQmxSetAIBridgeNomResistance
DAQmxSetAIBridgeNomResistance.restype = int32
# DAQmxSetAIBridgeNomResistance(taskHandle, channel, data)
DAQmxSetAIBridgeNomResistance.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2321
DAQmxResetAIBridgeNomResistance = _stdcall_libraries['nicaiu'].DAQmxResetAIBridgeNomResistance
DAQmxResetAIBridgeNomResistance.restype = int32
# DAQmxResetAIBridgeNomResistance(taskHandle, channel)
DAQmxResetAIBridgeNomResistance.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2323
DAQmxGetAIBridgeInitialVoltage = _stdcall_libraries['nicaiu'].DAQmxGetAIBridgeInitialVoltage
DAQmxGetAIBridgeInitialVoltage.restype = int32
# DAQmxGetAIBridgeInitialVoltage(taskHandle, channel, data)
DAQmxGetAIBridgeInitialVoltage.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2324
DAQmxSetAIBridgeInitialVoltage = _stdcall_libraries['nicaiu'].DAQmxSetAIBridgeInitialVoltage
DAQmxSetAIBridgeInitialVoltage.restype = int32
# DAQmxSetAIBridgeInitialVoltage(taskHandle, channel, data)
DAQmxSetAIBridgeInitialVoltage.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2325
DAQmxResetAIBridgeInitialVoltage = _stdcall_libraries['nicaiu'].DAQmxResetAIBridgeInitialVoltage
DAQmxResetAIBridgeInitialVoltage.restype = int32
# DAQmxResetAIBridgeInitialVoltage(taskHandle, channel)
DAQmxResetAIBridgeInitialVoltage.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2327
DAQmxGetAIBridgeShuntCalEnable = _stdcall_libraries['nicaiu'].DAQmxGetAIBridgeShuntCalEnable
DAQmxGetAIBridgeShuntCalEnable.restype = int32
# DAQmxGetAIBridgeShuntCalEnable(taskHandle, channel, data)
DAQmxGetAIBridgeShuntCalEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2328
DAQmxSetAIBridgeShuntCalEnable = _stdcall_libraries['nicaiu'].DAQmxSetAIBridgeShuntCalEnable
DAQmxSetAIBridgeShuntCalEnable.restype = int32
# DAQmxSetAIBridgeShuntCalEnable(taskHandle, channel, data)
DAQmxSetAIBridgeShuntCalEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2329
DAQmxResetAIBridgeShuntCalEnable = _stdcall_libraries['nicaiu'].DAQmxResetAIBridgeShuntCalEnable
DAQmxResetAIBridgeShuntCalEnable.restype = int32
# DAQmxResetAIBridgeShuntCalEnable(taskHandle, channel)
DAQmxResetAIBridgeShuntCalEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2332
DAQmxGetAIBridgeShuntCalSelect = _stdcall_libraries['nicaiu'].DAQmxGetAIBridgeShuntCalSelect
DAQmxGetAIBridgeShuntCalSelect.restype = int32
# DAQmxGetAIBridgeShuntCalSelect(taskHandle, channel, data)
DAQmxGetAIBridgeShuntCalSelect.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2333
DAQmxSetAIBridgeShuntCalSelect = _stdcall_libraries['nicaiu'].DAQmxSetAIBridgeShuntCalSelect
DAQmxSetAIBridgeShuntCalSelect.restype = int32
# DAQmxSetAIBridgeShuntCalSelect(taskHandle, channel, data)
DAQmxSetAIBridgeShuntCalSelect.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2334
DAQmxResetAIBridgeShuntCalSelect = _stdcall_libraries['nicaiu'].DAQmxResetAIBridgeShuntCalSelect
DAQmxResetAIBridgeShuntCalSelect.restype = int32
# DAQmxResetAIBridgeShuntCalSelect(taskHandle, channel)
DAQmxResetAIBridgeShuntCalSelect.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2336
DAQmxGetAIBridgeShuntCalGainAdjust = _stdcall_libraries['nicaiu'].DAQmxGetAIBridgeShuntCalGainAdjust
DAQmxGetAIBridgeShuntCalGainAdjust.restype = int32
# DAQmxGetAIBridgeShuntCalGainAdjust(taskHandle, channel, data)
DAQmxGetAIBridgeShuntCalGainAdjust.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2337
DAQmxSetAIBridgeShuntCalGainAdjust = _stdcall_libraries['nicaiu'].DAQmxSetAIBridgeShuntCalGainAdjust
DAQmxSetAIBridgeShuntCalGainAdjust.restype = int32
# DAQmxSetAIBridgeShuntCalGainAdjust(taskHandle, channel, data)
DAQmxSetAIBridgeShuntCalGainAdjust.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2338
DAQmxResetAIBridgeShuntCalGainAdjust = _stdcall_libraries['nicaiu'].DAQmxResetAIBridgeShuntCalGainAdjust
DAQmxResetAIBridgeShuntCalGainAdjust.restype = int32
# DAQmxResetAIBridgeShuntCalGainAdjust(taskHandle, channel)
DAQmxResetAIBridgeShuntCalGainAdjust.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2340
DAQmxGetAIBridgeBalanceCoarsePot = _stdcall_libraries['nicaiu'].DAQmxGetAIBridgeBalanceCoarsePot
DAQmxGetAIBridgeBalanceCoarsePot.restype = int32
# DAQmxGetAIBridgeBalanceCoarsePot(taskHandle, channel, data)
DAQmxGetAIBridgeBalanceCoarsePot.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2341
DAQmxSetAIBridgeBalanceCoarsePot = _stdcall_libraries['nicaiu'].DAQmxSetAIBridgeBalanceCoarsePot
DAQmxSetAIBridgeBalanceCoarsePot.restype = int32
# DAQmxSetAIBridgeBalanceCoarsePot(taskHandle, channel, data)
DAQmxSetAIBridgeBalanceCoarsePot.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2342
DAQmxResetAIBridgeBalanceCoarsePot = _stdcall_libraries['nicaiu'].DAQmxResetAIBridgeBalanceCoarsePot
DAQmxResetAIBridgeBalanceCoarsePot.restype = int32
# DAQmxResetAIBridgeBalanceCoarsePot(taskHandle, channel)
DAQmxResetAIBridgeBalanceCoarsePot.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2344
DAQmxGetAIBridgeBalanceFinePot = _stdcall_libraries['nicaiu'].DAQmxGetAIBridgeBalanceFinePot
DAQmxGetAIBridgeBalanceFinePot.restype = int32
# DAQmxGetAIBridgeBalanceFinePot(taskHandle, channel, data)
DAQmxGetAIBridgeBalanceFinePot.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2345
DAQmxSetAIBridgeBalanceFinePot = _stdcall_libraries['nicaiu'].DAQmxSetAIBridgeBalanceFinePot
DAQmxSetAIBridgeBalanceFinePot.restype = int32
# DAQmxSetAIBridgeBalanceFinePot(taskHandle, channel, data)
DAQmxSetAIBridgeBalanceFinePot.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2346
DAQmxResetAIBridgeBalanceFinePot = _stdcall_libraries['nicaiu'].DAQmxResetAIBridgeBalanceFinePot
DAQmxResetAIBridgeBalanceFinePot.restype = int32
# DAQmxResetAIBridgeBalanceFinePot(taskHandle, channel)
DAQmxResetAIBridgeBalanceFinePot.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2349
DAQmxGetAICurrentShuntLoc = _stdcall_libraries['nicaiu'].DAQmxGetAICurrentShuntLoc
DAQmxGetAICurrentShuntLoc.restype = int32
# DAQmxGetAICurrentShuntLoc(taskHandle, channel, data)
DAQmxGetAICurrentShuntLoc.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2350
DAQmxSetAICurrentShuntLoc = _stdcall_libraries['nicaiu'].DAQmxSetAICurrentShuntLoc
DAQmxSetAICurrentShuntLoc.restype = int32
# DAQmxSetAICurrentShuntLoc(taskHandle, channel, data)
DAQmxSetAICurrentShuntLoc.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2351
DAQmxResetAICurrentShuntLoc = _stdcall_libraries['nicaiu'].DAQmxResetAICurrentShuntLoc
DAQmxResetAICurrentShuntLoc.restype = int32
# DAQmxResetAICurrentShuntLoc(taskHandle, channel)
DAQmxResetAICurrentShuntLoc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2353
DAQmxGetAICurrentShuntResistance = _stdcall_libraries['nicaiu'].DAQmxGetAICurrentShuntResistance
DAQmxGetAICurrentShuntResistance.restype = int32
# DAQmxGetAICurrentShuntResistance(taskHandle, channel, data)
DAQmxGetAICurrentShuntResistance.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2354
DAQmxSetAICurrentShuntResistance = _stdcall_libraries['nicaiu'].DAQmxSetAICurrentShuntResistance
DAQmxSetAICurrentShuntResistance.restype = int32
# DAQmxSetAICurrentShuntResistance(taskHandle, channel, data)
DAQmxSetAICurrentShuntResistance.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2355
DAQmxResetAICurrentShuntResistance = _stdcall_libraries['nicaiu'].DAQmxResetAICurrentShuntResistance
DAQmxResetAICurrentShuntResistance.restype = int32
# DAQmxResetAICurrentShuntResistance(taskHandle, channel)
DAQmxResetAICurrentShuntResistance.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2358
DAQmxGetAIExcitSrc = _stdcall_libraries['nicaiu'].DAQmxGetAIExcitSrc
DAQmxGetAIExcitSrc.restype = int32
# DAQmxGetAIExcitSrc(taskHandle, channel, data)
DAQmxGetAIExcitSrc.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2359
DAQmxSetAIExcitSrc = _stdcall_libraries['nicaiu'].DAQmxSetAIExcitSrc
DAQmxSetAIExcitSrc.restype = int32
# DAQmxSetAIExcitSrc(taskHandle, channel, data)
DAQmxSetAIExcitSrc.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2360
DAQmxResetAIExcitSrc = _stdcall_libraries['nicaiu'].DAQmxResetAIExcitSrc
DAQmxResetAIExcitSrc.restype = int32
# DAQmxResetAIExcitSrc(taskHandle, channel)
DAQmxResetAIExcitSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2362
DAQmxGetAIExcitVal = _stdcall_libraries['nicaiu'].DAQmxGetAIExcitVal
DAQmxGetAIExcitVal.restype = int32
# DAQmxGetAIExcitVal(taskHandle, channel, data)
DAQmxGetAIExcitVal.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2363
DAQmxSetAIExcitVal = _stdcall_libraries['nicaiu'].DAQmxSetAIExcitVal
DAQmxSetAIExcitVal.restype = int32
# DAQmxSetAIExcitVal(taskHandle, channel, data)
DAQmxSetAIExcitVal.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2364
DAQmxResetAIExcitVal = _stdcall_libraries['nicaiu'].DAQmxResetAIExcitVal
DAQmxResetAIExcitVal.restype = int32
# DAQmxResetAIExcitVal(taskHandle, channel)
DAQmxResetAIExcitVal.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2366
DAQmxGetAIExcitUseForScaling = _stdcall_libraries['nicaiu'].DAQmxGetAIExcitUseForScaling
DAQmxGetAIExcitUseForScaling.restype = int32
# DAQmxGetAIExcitUseForScaling(taskHandle, channel, data)
DAQmxGetAIExcitUseForScaling.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2367
DAQmxSetAIExcitUseForScaling = _stdcall_libraries['nicaiu'].DAQmxSetAIExcitUseForScaling
DAQmxSetAIExcitUseForScaling.restype = int32
# DAQmxSetAIExcitUseForScaling(taskHandle, channel, data)
DAQmxSetAIExcitUseForScaling.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2368
DAQmxResetAIExcitUseForScaling = _stdcall_libraries['nicaiu'].DAQmxResetAIExcitUseForScaling
DAQmxResetAIExcitUseForScaling.restype = int32
# DAQmxResetAIExcitUseForScaling(taskHandle, channel)
DAQmxResetAIExcitUseForScaling.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2370
DAQmxGetAIExcitUseMultiplexed = _stdcall_libraries['nicaiu'].DAQmxGetAIExcitUseMultiplexed
DAQmxGetAIExcitUseMultiplexed.restype = int32
# DAQmxGetAIExcitUseMultiplexed(taskHandle, channel, data)
DAQmxGetAIExcitUseMultiplexed.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2371
DAQmxSetAIExcitUseMultiplexed = _stdcall_libraries['nicaiu'].DAQmxSetAIExcitUseMultiplexed
DAQmxSetAIExcitUseMultiplexed.restype = int32
# DAQmxSetAIExcitUseMultiplexed(taskHandle, channel, data)
DAQmxSetAIExcitUseMultiplexed.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2372
DAQmxResetAIExcitUseMultiplexed = _stdcall_libraries['nicaiu'].DAQmxResetAIExcitUseMultiplexed
DAQmxResetAIExcitUseMultiplexed.restype = int32
# DAQmxResetAIExcitUseMultiplexed(taskHandle, channel)
DAQmxResetAIExcitUseMultiplexed.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2374
DAQmxGetAIExcitActualVal = _stdcall_libraries['nicaiu'].DAQmxGetAIExcitActualVal
DAQmxGetAIExcitActualVal.restype = int32
# DAQmxGetAIExcitActualVal(taskHandle, channel, data)
DAQmxGetAIExcitActualVal.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2375
DAQmxSetAIExcitActualVal = _stdcall_libraries['nicaiu'].DAQmxSetAIExcitActualVal
DAQmxSetAIExcitActualVal.restype = int32
# DAQmxSetAIExcitActualVal(taskHandle, channel, data)
DAQmxSetAIExcitActualVal.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2376
DAQmxResetAIExcitActualVal = _stdcall_libraries['nicaiu'].DAQmxResetAIExcitActualVal
DAQmxResetAIExcitActualVal.restype = int32
# DAQmxResetAIExcitActualVal(taskHandle, channel)
DAQmxResetAIExcitActualVal.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2379
DAQmxGetAIExcitDCorAC = _stdcall_libraries['nicaiu'].DAQmxGetAIExcitDCorAC
DAQmxGetAIExcitDCorAC.restype = int32
# DAQmxGetAIExcitDCorAC(taskHandle, channel, data)
DAQmxGetAIExcitDCorAC.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2380
DAQmxSetAIExcitDCorAC = _stdcall_libraries['nicaiu'].DAQmxSetAIExcitDCorAC
DAQmxSetAIExcitDCorAC.restype = int32
# DAQmxSetAIExcitDCorAC(taskHandle, channel, data)
DAQmxSetAIExcitDCorAC.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2381
DAQmxResetAIExcitDCorAC = _stdcall_libraries['nicaiu'].DAQmxResetAIExcitDCorAC
DAQmxResetAIExcitDCorAC.restype = int32
# DAQmxResetAIExcitDCorAC(taskHandle, channel)
DAQmxResetAIExcitDCorAC.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2384
DAQmxGetAIExcitVoltageOrCurrent = _stdcall_libraries['nicaiu'].DAQmxGetAIExcitVoltageOrCurrent
DAQmxGetAIExcitVoltageOrCurrent.restype = int32
# DAQmxGetAIExcitVoltageOrCurrent(taskHandle, channel, data)
DAQmxGetAIExcitVoltageOrCurrent.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2385
DAQmxSetAIExcitVoltageOrCurrent = _stdcall_libraries['nicaiu'].DAQmxSetAIExcitVoltageOrCurrent
DAQmxSetAIExcitVoltageOrCurrent.restype = int32
# DAQmxSetAIExcitVoltageOrCurrent(taskHandle, channel, data)
DAQmxSetAIExcitVoltageOrCurrent.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2386
DAQmxResetAIExcitVoltageOrCurrent = _stdcall_libraries['nicaiu'].DAQmxResetAIExcitVoltageOrCurrent
DAQmxResetAIExcitVoltageOrCurrent.restype = int32
# DAQmxResetAIExcitVoltageOrCurrent(taskHandle, channel)
DAQmxResetAIExcitVoltageOrCurrent.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2388
DAQmxGetAIACExcitFreq = _stdcall_libraries['nicaiu'].DAQmxGetAIACExcitFreq
DAQmxGetAIACExcitFreq.restype = int32
# DAQmxGetAIACExcitFreq(taskHandle, channel, data)
DAQmxGetAIACExcitFreq.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2389
DAQmxSetAIACExcitFreq = _stdcall_libraries['nicaiu'].DAQmxSetAIACExcitFreq
DAQmxSetAIACExcitFreq.restype = int32
# DAQmxSetAIACExcitFreq(taskHandle, channel, data)
DAQmxSetAIACExcitFreq.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2390
DAQmxResetAIACExcitFreq = _stdcall_libraries['nicaiu'].DAQmxResetAIACExcitFreq
DAQmxResetAIACExcitFreq.restype = int32
# DAQmxResetAIACExcitFreq(taskHandle, channel)
DAQmxResetAIACExcitFreq.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2392
DAQmxGetAIACExcitSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetAIACExcitSyncEnable
DAQmxGetAIACExcitSyncEnable.restype = int32
# DAQmxGetAIACExcitSyncEnable(taskHandle, channel, data)
DAQmxGetAIACExcitSyncEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2393
DAQmxSetAIACExcitSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetAIACExcitSyncEnable
DAQmxSetAIACExcitSyncEnable.restype = int32
# DAQmxSetAIACExcitSyncEnable(taskHandle, channel, data)
DAQmxSetAIACExcitSyncEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2394
DAQmxResetAIACExcitSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetAIACExcitSyncEnable
DAQmxResetAIACExcitSyncEnable.restype = int32
# DAQmxResetAIACExcitSyncEnable(taskHandle, channel)
DAQmxResetAIACExcitSyncEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2397
DAQmxGetAIACExcitWireMode = _stdcall_libraries['nicaiu'].DAQmxGetAIACExcitWireMode
DAQmxGetAIACExcitWireMode.restype = int32
# DAQmxGetAIACExcitWireMode(taskHandle, channel, data)
DAQmxGetAIACExcitWireMode.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2398
DAQmxSetAIACExcitWireMode = _stdcall_libraries['nicaiu'].DAQmxSetAIACExcitWireMode
DAQmxSetAIACExcitWireMode.restype = int32
# DAQmxSetAIACExcitWireMode(taskHandle, channel, data)
DAQmxSetAIACExcitWireMode.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2399
DAQmxResetAIACExcitWireMode = _stdcall_libraries['nicaiu'].DAQmxResetAIACExcitWireMode
DAQmxResetAIACExcitWireMode.restype = int32
# DAQmxResetAIACExcitWireMode(taskHandle, channel)
DAQmxResetAIACExcitWireMode.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2401
DAQmxGetAIAtten = _stdcall_libraries['nicaiu'].DAQmxGetAIAtten
DAQmxGetAIAtten.restype = int32
# DAQmxGetAIAtten(taskHandle, channel, data)
DAQmxGetAIAtten.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2402
DAQmxSetAIAtten = _stdcall_libraries['nicaiu'].DAQmxSetAIAtten
DAQmxSetAIAtten.restype = int32
# DAQmxSetAIAtten(taskHandle, channel, data)
DAQmxSetAIAtten.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2403
DAQmxResetAIAtten = _stdcall_libraries['nicaiu'].DAQmxResetAIAtten
DAQmxResetAIAtten.restype = int32
# DAQmxResetAIAtten(taskHandle, channel)
DAQmxResetAIAtten.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2405
DAQmxGetAILowpassEnable = _stdcall_libraries['nicaiu'].DAQmxGetAILowpassEnable
DAQmxGetAILowpassEnable.restype = int32
# DAQmxGetAILowpassEnable(taskHandle, channel, data)
DAQmxGetAILowpassEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2406
DAQmxSetAILowpassEnable = _stdcall_libraries['nicaiu'].DAQmxSetAILowpassEnable
DAQmxSetAILowpassEnable.restype = int32
# DAQmxSetAILowpassEnable(taskHandle, channel, data)
DAQmxSetAILowpassEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2407
DAQmxResetAILowpassEnable = _stdcall_libraries['nicaiu'].DAQmxResetAILowpassEnable
DAQmxResetAILowpassEnable.restype = int32
# DAQmxResetAILowpassEnable(taskHandle, channel)
DAQmxResetAILowpassEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2409
DAQmxGetAILowpassCutoffFreq = _stdcall_libraries['nicaiu'].DAQmxGetAILowpassCutoffFreq
DAQmxGetAILowpassCutoffFreq.restype = int32
# DAQmxGetAILowpassCutoffFreq(taskHandle, channel, data)
DAQmxGetAILowpassCutoffFreq.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2410
DAQmxSetAILowpassCutoffFreq = _stdcall_libraries['nicaiu'].DAQmxSetAILowpassCutoffFreq
DAQmxSetAILowpassCutoffFreq.restype = int32
# DAQmxSetAILowpassCutoffFreq(taskHandle, channel, data)
DAQmxSetAILowpassCutoffFreq.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2411
DAQmxResetAILowpassCutoffFreq = _stdcall_libraries['nicaiu'].DAQmxResetAILowpassCutoffFreq
DAQmxResetAILowpassCutoffFreq.restype = int32
# DAQmxResetAILowpassCutoffFreq(taskHandle, channel)
DAQmxResetAILowpassCutoffFreq.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2414
DAQmxGetAILowpassSwitchCapClkSrc = _stdcall_libraries['nicaiu'].DAQmxGetAILowpassSwitchCapClkSrc
DAQmxGetAILowpassSwitchCapClkSrc.restype = int32
# DAQmxGetAILowpassSwitchCapClkSrc(taskHandle, channel, data)
DAQmxGetAILowpassSwitchCapClkSrc.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2415
DAQmxSetAILowpassSwitchCapClkSrc = _stdcall_libraries['nicaiu'].DAQmxSetAILowpassSwitchCapClkSrc
DAQmxSetAILowpassSwitchCapClkSrc.restype = int32
# DAQmxSetAILowpassSwitchCapClkSrc(taskHandle, channel, data)
DAQmxSetAILowpassSwitchCapClkSrc.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2416
DAQmxResetAILowpassSwitchCapClkSrc = _stdcall_libraries['nicaiu'].DAQmxResetAILowpassSwitchCapClkSrc
DAQmxResetAILowpassSwitchCapClkSrc.restype = int32
# DAQmxResetAILowpassSwitchCapClkSrc(taskHandle, channel)
DAQmxResetAILowpassSwitchCapClkSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2418
DAQmxGetAILowpassSwitchCapExtClkFreq = _stdcall_libraries['nicaiu'].DAQmxGetAILowpassSwitchCapExtClkFreq
DAQmxGetAILowpassSwitchCapExtClkFreq.restype = int32
# DAQmxGetAILowpassSwitchCapExtClkFreq(taskHandle, channel, data)
DAQmxGetAILowpassSwitchCapExtClkFreq.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2419
DAQmxSetAILowpassSwitchCapExtClkFreq = _stdcall_libraries['nicaiu'].DAQmxSetAILowpassSwitchCapExtClkFreq
DAQmxSetAILowpassSwitchCapExtClkFreq.restype = int32
# DAQmxSetAILowpassSwitchCapExtClkFreq(taskHandle, channel, data)
DAQmxSetAILowpassSwitchCapExtClkFreq.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2420
DAQmxResetAILowpassSwitchCapExtClkFreq = _stdcall_libraries['nicaiu'].DAQmxResetAILowpassSwitchCapExtClkFreq
DAQmxResetAILowpassSwitchCapExtClkFreq.restype = int32
# DAQmxResetAILowpassSwitchCapExtClkFreq(taskHandle, channel)
DAQmxResetAILowpassSwitchCapExtClkFreq.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2422
DAQmxGetAILowpassSwitchCapExtClkDiv = _stdcall_libraries['nicaiu'].DAQmxGetAILowpassSwitchCapExtClkDiv
DAQmxGetAILowpassSwitchCapExtClkDiv.restype = int32
# DAQmxGetAILowpassSwitchCapExtClkDiv(taskHandle, channel, data)
DAQmxGetAILowpassSwitchCapExtClkDiv.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 2423
DAQmxSetAILowpassSwitchCapExtClkDiv = _stdcall_libraries['nicaiu'].DAQmxSetAILowpassSwitchCapExtClkDiv
DAQmxSetAILowpassSwitchCapExtClkDiv.restype = int32
# DAQmxSetAILowpassSwitchCapExtClkDiv(taskHandle, channel, data)
DAQmxSetAILowpassSwitchCapExtClkDiv.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 2424
DAQmxResetAILowpassSwitchCapExtClkDiv = _stdcall_libraries['nicaiu'].DAQmxResetAILowpassSwitchCapExtClkDiv
DAQmxResetAILowpassSwitchCapExtClkDiv.restype = int32
# DAQmxResetAILowpassSwitchCapExtClkDiv(taskHandle, channel)
DAQmxResetAILowpassSwitchCapExtClkDiv.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2426
DAQmxGetAILowpassSwitchCapOutClkDiv = _stdcall_libraries['nicaiu'].DAQmxGetAILowpassSwitchCapOutClkDiv
DAQmxGetAILowpassSwitchCapOutClkDiv.restype = int32
# DAQmxGetAILowpassSwitchCapOutClkDiv(taskHandle, channel, data)
DAQmxGetAILowpassSwitchCapOutClkDiv.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 2427
DAQmxSetAILowpassSwitchCapOutClkDiv = _stdcall_libraries['nicaiu'].DAQmxSetAILowpassSwitchCapOutClkDiv
DAQmxSetAILowpassSwitchCapOutClkDiv.restype = int32
# DAQmxSetAILowpassSwitchCapOutClkDiv(taskHandle, channel, data)
DAQmxSetAILowpassSwitchCapOutClkDiv.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 2428
DAQmxResetAILowpassSwitchCapOutClkDiv = _stdcall_libraries['nicaiu'].DAQmxResetAILowpassSwitchCapOutClkDiv
DAQmxResetAILowpassSwitchCapOutClkDiv.restype = int32
# DAQmxResetAILowpassSwitchCapOutClkDiv(taskHandle, channel)
DAQmxResetAILowpassSwitchCapOutClkDiv.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2431
DAQmxGetAIResolutionUnits = _stdcall_libraries['nicaiu'].DAQmxGetAIResolutionUnits
DAQmxGetAIResolutionUnits.restype = int32
# DAQmxGetAIResolutionUnits(taskHandle, channel, data)
DAQmxGetAIResolutionUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2433
DAQmxGetAIResolution = _stdcall_libraries['nicaiu'].DAQmxGetAIResolution
DAQmxGetAIResolution.restype = int32
# DAQmxGetAIResolution(taskHandle, channel, data)
DAQmxGetAIResolution.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2435
DAQmxGetAIRawSampSize = _stdcall_libraries['nicaiu'].DAQmxGetAIRawSampSize
DAQmxGetAIRawSampSize.restype = int32
# DAQmxGetAIRawSampSize(taskHandle, channel, data)
DAQmxGetAIRawSampSize.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 2438
DAQmxGetAIRawSampJustification = _stdcall_libraries['nicaiu'].DAQmxGetAIRawSampJustification
DAQmxGetAIRawSampJustification.restype = int32
# DAQmxGetAIRawSampJustification(taskHandle, channel, data)
DAQmxGetAIRawSampJustification.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2440
DAQmxGetAIDitherEnable = _stdcall_libraries['nicaiu'].DAQmxGetAIDitherEnable
DAQmxGetAIDitherEnable.restype = int32
# DAQmxGetAIDitherEnable(taskHandle, channel, data)
DAQmxGetAIDitherEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2441
DAQmxSetAIDitherEnable = _stdcall_libraries['nicaiu'].DAQmxSetAIDitherEnable
DAQmxSetAIDitherEnable.restype = int32
# DAQmxSetAIDitherEnable(taskHandle, channel, data)
DAQmxSetAIDitherEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2442
DAQmxResetAIDitherEnable = _stdcall_libraries['nicaiu'].DAQmxResetAIDitherEnable
DAQmxResetAIDitherEnable.restype = int32
# DAQmxResetAIDitherEnable(taskHandle, channel)
DAQmxResetAIDitherEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2444
DAQmxGetAIChanCalHasValidCalInfo = _stdcall_libraries['nicaiu'].DAQmxGetAIChanCalHasValidCalInfo
DAQmxGetAIChanCalHasValidCalInfo.restype = int32
# DAQmxGetAIChanCalHasValidCalInfo(taskHandle, channel, data)
DAQmxGetAIChanCalHasValidCalInfo.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2446
DAQmxGetAIChanCalEnableCal = _stdcall_libraries['nicaiu'].DAQmxGetAIChanCalEnableCal
DAQmxGetAIChanCalEnableCal.restype = int32
# DAQmxGetAIChanCalEnableCal(taskHandle, channel, data)
DAQmxGetAIChanCalEnableCal.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2447
DAQmxSetAIChanCalEnableCal = _stdcall_libraries['nicaiu'].DAQmxSetAIChanCalEnableCal
DAQmxSetAIChanCalEnableCal.restype = int32
# DAQmxSetAIChanCalEnableCal(taskHandle, channel, data)
DAQmxSetAIChanCalEnableCal.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2448
DAQmxResetAIChanCalEnableCal = _stdcall_libraries['nicaiu'].DAQmxResetAIChanCalEnableCal
DAQmxResetAIChanCalEnableCal.restype = int32
# DAQmxResetAIChanCalEnableCal(taskHandle, channel)
DAQmxResetAIChanCalEnableCal.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2450
DAQmxGetAIChanCalApplyCalIfExp = _stdcall_libraries['nicaiu'].DAQmxGetAIChanCalApplyCalIfExp
DAQmxGetAIChanCalApplyCalIfExp.restype = int32
# DAQmxGetAIChanCalApplyCalIfExp(taskHandle, channel, data)
DAQmxGetAIChanCalApplyCalIfExp.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2451
DAQmxSetAIChanCalApplyCalIfExp = _stdcall_libraries['nicaiu'].DAQmxSetAIChanCalApplyCalIfExp
DAQmxSetAIChanCalApplyCalIfExp.restype = int32
# DAQmxSetAIChanCalApplyCalIfExp(taskHandle, channel, data)
DAQmxSetAIChanCalApplyCalIfExp.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2452
DAQmxResetAIChanCalApplyCalIfExp = _stdcall_libraries['nicaiu'].DAQmxResetAIChanCalApplyCalIfExp
DAQmxResetAIChanCalApplyCalIfExp.restype = int32
# DAQmxResetAIChanCalApplyCalIfExp(taskHandle, channel)
DAQmxResetAIChanCalApplyCalIfExp.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2455
DAQmxGetAIChanCalScaleType = _stdcall_libraries['nicaiu'].DAQmxGetAIChanCalScaleType
DAQmxGetAIChanCalScaleType.restype = int32
# DAQmxGetAIChanCalScaleType(taskHandle, channel, data)
DAQmxGetAIChanCalScaleType.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2456
DAQmxSetAIChanCalScaleType = _stdcall_libraries['nicaiu'].DAQmxSetAIChanCalScaleType
DAQmxSetAIChanCalScaleType.restype = int32
# DAQmxSetAIChanCalScaleType(taskHandle, channel, data)
DAQmxSetAIChanCalScaleType.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2457
DAQmxResetAIChanCalScaleType = _stdcall_libraries['nicaiu'].DAQmxResetAIChanCalScaleType
DAQmxResetAIChanCalScaleType.restype = int32
# DAQmxResetAIChanCalScaleType(taskHandle, channel)
DAQmxResetAIChanCalScaleType.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2459
DAQmxGetAIChanCalTablePreScaledVals = _stdcall_libraries['nicaiu'].DAQmxGetAIChanCalTablePreScaledVals
DAQmxGetAIChanCalTablePreScaledVals.restype = int32
# DAQmxGetAIChanCalTablePreScaledVals(taskHandle, channel, data, arraySizeInSamples)
DAQmxGetAIChanCalTablePreScaledVals.argtypes = [TaskHandle, STRING, POINTER(float64), uInt32]
# NIDAQmx.h 2460
DAQmxSetAIChanCalTablePreScaledVals = _stdcall_libraries['nicaiu'].DAQmxSetAIChanCalTablePreScaledVals
DAQmxSetAIChanCalTablePreScaledVals.restype = int32
# DAQmxSetAIChanCalTablePreScaledVals(taskHandle, channel, data, arraySizeInSamples)
DAQmxSetAIChanCalTablePreScaledVals.argtypes = [TaskHandle, STRING, POINTER(float64), uInt32]
# NIDAQmx.h 2461
DAQmxResetAIChanCalTablePreScaledVals = _stdcall_libraries['nicaiu'].DAQmxResetAIChanCalTablePreScaledVals
DAQmxResetAIChanCalTablePreScaledVals.restype = int32
# DAQmxResetAIChanCalTablePreScaledVals(taskHandle, channel)
DAQmxResetAIChanCalTablePreScaledVals.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2463
DAQmxGetAIChanCalTableScaledVals = _stdcall_libraries['nicaiu'].DAQmxGetAIChanCalTableScaledVals
DAQmxGetAIChanCalTableScaledVals.restype = int32
# DAQmxGetAIChanCalTableScaledVals(taskHandle, channel, data, arraySizeInSamples)
DAQmxGetAIChanCalTableScaledVals.argtypes = [TaskHandle, STRING, POINTER(float64), uInt32]
# NIDAQmx.h 2464
DAQmxSetAIChanCalTableScaledVals = _stdcall_libraries['nicaiu'].DAQmxSetAIChanCalTableScaledVals
DAQmxSetAIChanCalTableScaledVals.restype = int32
# DAQmxSetAIChanCalTableScaledVals(taskHandle, channel, data, arraySizeInSamples)
DAQmxSetAIChanCalTableScaledVals.argtypes = [TaskHandle, STRING, POINTER(float64), uInt32]
# NIDAQmx.h 2465
DAQmxResetAIChanCalTableScaledVals = _stdcall_libraries['nicaiu'].DAQmxResetAIChanCalTableScaledVals
DAQmxResetAIChanCalTableScaledVals.restype = int32
# DAQmxResetAIChanCalTableScaledVals(taskHandle, channel)
DAQmxResetAIChanCalTableScaledVals.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2467
DAQmxGetAIChanCalPolyForwardCoeff = _stdcall_libraries['nicaiu'].DAQmxGetAIChanCalPolyForwardCoeff
DAQmxGetAIChanCalPolyForwardCoeff.restype = int32
# DAQmxGetAIChanCalPolyForwardCoeff(taskHandle, channel, data, arraySizeInSamples)
DAQmxGetAIChanCalPolyForwardCoeff.argtypes = [TaskHandle, STRING, POINTER(float64), uInt32]
# NIDAQmx.h 2468
DAQmxSetAIChanCalPolyForwardCoeff = _stdcall_libraries['nicaiu'].DAQmxSetAIChanCalPolyForwardCoeff
DAQmxSetAIChanCalPolyForwardCoeff.restype = int32
# DAQmxSetAIChanCalPolyForwardCoeff(taskHandle, channel, data, arraySizeInSamples)
DAQmxSetAIChanCalPolyForwardCoeff.argtypes = [TaskHandle, STRING, POINTER(float64), uInt32]
# NIDAQmx.h 2469
DAQmxResetAIChanCalPolyForwardCoeff = _stdcall_libraries['nicaiu'].DAQmxResetAIChanCalPolyForwardCoeff
DAQmxResetAIChanCalPolyForwardCoeff.restype = int32
# DAQmxResetAIChanCalPolyForwardCoeff(taskHandle, channel)
DAQmxResetAIChanCalPolyForwardCoeff.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2471
DAQmxGetAIChanCalPolyReverseCoeff = _stdcall_libraries['nicaiu'].DAQmxGetAIChanCalPolyReverseCoeff
DAQmxGetAIChanCalPolyReverseCoeff.restype = int32
# DAQmxGetAIChanCalPolyReverseCoeff(taskHandle, channel, data, arraySizeInSamples)
DAQmxGetAIChanCalPolyReverseCoeff.argtypes = [TaskHandle, STRING, POINTER(float64), uInt32]
# NIDAQmx.h 2472
DAQmxSetAIChanCalPolyReverseCoeff = _stdcall_libraries['nicaiu'].DAQmxSetAIChanCalPolyReverseCoeff
DAQmxSetAIChanCalPolyReverseCoeff.restype = int32
# DAQmxSetAIChanCalPolyReverseCoeff(taskHandle, channel, data, arraySizeInSamples)
DAQmxSetAIChanCalPolyReverseCoeff.argtypes = [TaskHandle, STRING, POINTER(float64), uInt32]
# NIDAQmx.h 2473
DAQmxResetAIChanCalPolyReverseCoeff = _stdcall_libraries['nicaiu'].DAQmxResetAIChanCalPolyReverseCoeff
DAQmxResetAIChanCalPolyReverseCoeff.restype = int32
# DAQmxResetAIChanCalPolyReverseCoeff(taskHandle, channel)
DAQmxResetAIChanCalPolyReverseCoeff.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2475
DAQmxGetAIChanCalOperatorName = _stdcall_libraries['nicaiu'].DAQmxGetAIChanCalOperatorName
DAQmxGetAIChanCalOperatorName.restype = int32
# DAQmxGetAIChanCalOperatorName(taskHandle, channel, data, bufferSize)
DAQmxGetAIChanCalOperatorName.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2476
DAQmxSetAIChanCalOperatorName = _stdcall_libraries['nicaiu'].DAQmxSetAIChanCalOperatorName
DAQmxSetAIChanCalOperatorName.restype = int32
# DAQmxSetAIChanCalOperatorName(taskHandle, channel, data)
DAQmxSetAIChanCalOperatorName.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2477
DAQmxResetAIChanCalOperatorName = _stdcall_libraries['nicaiu'].DAQmxResetAIChanCalOperatorName
DAQmxResetAIChanCalOperatorName.restype = int32
# DAQmxResetAIChanCalOperatorName(taskHandle, channel)
DAQmxResetAIChanCalOperatorName.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2479
DAQmxGetAIChanCalDesc = _stdcall_libraries['nicaiu'].DAQmxGetAIChanCalDesc
DAQmxGetAIChanCalDesc.restype = int32
# DAQmxGetAIChanCalDesc(taskHandle, channel, data, bufferSize)
DAQmxGetAIChanCalDesc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2480
DAQmxSetAIChanCalDesc = _stdcall_libraries['nicaiu'].DAQmxSetAIChanCalDesc
DAQmxSetAIChanCalDesc.restype = int32
# DAQmxSetAIChanCalDesc(taskHandle, channel, data)
DAQmxSetAIChanCalDesc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2481
DAQmxResetAIChanCalDesc = _stdcall_libraries['nicaiu'].DAQmxResetAIChanCalDesc
DAQmxResetAIChanCalDesc.restype = int32
# DAQmxResetAIChanCalDesc(taskHandle, channel)
DAQmxResetAIChanCalDesc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2483
DAQmxGetAIChanCalVerifRefVals = _stdcall_libraries['nicaiu'].DAQmxGetAIChanCalVerifRefVals
DAQmxGetAIChanCalVerifRefVals.restype = int32
# DAQmxGetAIChanCalVerifRefVals(taskHandle, channel, data, arraySizeInSamples)
DAQmxGetAIChanCalVerifRefVals.argtypes = [TaskHandle, STRING, POINTER(float64), uInt32]
# NIDAQmx.h 2484
DAQmxSetAIChanCalVerifRefVals = _stdcall_libraries['nicaiu'].DAQmxSetAIChanCalVerifRefVals
DAQmxSetAIChanCalVerifRefVals.restype = int32
# DAQmxSetAIChanCalVerifRefVals(taskHandle, channel, data, arraySizeInSamples)
DAQmxSetAIChanCalVerifRefVals.argtypes = [TaskHandle, STRING, POINTER(float64), uInt32]
# NIDAQmx.h 2485
DAQmxResetAIChanCalVerifRefVals = _stdcall_libraries['nicaiu'].DAQmxResetAIChanCalVerifRefVals
DAQmxResetAIChanCalVerifRefVals.restype = int32
# DAQmxResetAIChanCalVerifRefVals(taskHandle, channel)
DAQmxResetAIChanCalVerifRefVals.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2487
DAQmxGetAIChanCalVerifAcqVals = _stdcall_libraries['nicaiu'].DAQmxGetAIChanCalVerifAcqVals
DAQmxGetAIChanCalVerifAcqVals.restype = int32
# DAQmxGetAIChanCalVerifAcqVals(taskHandle, channel, data, arraySizeInSamples)
DAQmxGetAIChanCalVerifAcqVals.argtypes = [TaskHandle, STRING, POINTER(float64), uInt32]
# NIDAQmx.h 2488
DAQmxSetAIChanCalVerifAcqVals = _stdcall_libraries['nicaiu'].DAQmxSetAIChanCalVerifAcqVals
DAQmxSetAIChanCalVerifAcqVals.restype = int32
# DAQmxSetAIChanCalVerifAcqVals(taskHandle, channel, data, arraySizeInSamples)
DAQmxSetAIChanCalVerifAcqVals.argtypes = [TaskHandle, STRING, POINTER(float64), uInt32]
# NIDAQmx.h 2489
DAQmxResetAIChanCalVerifAcqVals = _stdcall_libraries['nicaiu'].DAQmxResetAIChanCalVerifAcqVals
DAQmxResetAIChanCalVerifAcqVals.restype = int32
# DAQmxResetAIChanCalVerifAcqVals(taskHandle, channel)
DAQmxResetAIChanCalVerifAcqVals.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2491
DAQmxGetAIRngHigh = _stdcall_libraries['nicaiu'].DAQmxGetAIRngHigh
DAQmxGetAIRngHigh.restype = int32
# DAQmxGetAIRngHigh(taskHandle, channel, data)
DAQmxGetAIRngHigh.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2492
DAQmxSetAIRngHigh = _stdcall_libraries['nicaiu'].DAQmxSetAIRngHigh
DAQmxSetAIRngHigh.restype = int32
# DAQmxSetAIRngHigh(taskHandle, channel, data)
DAQmxSetAIRngHigh.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2493
DAQmxResetAIRngHigh = _stdcall_libraries['nicaiu'].DAQmxResetAIRngHigh
DAQmxResetAIRngHigh.restype = int32
# DAQmxResetAIRngHigh(taskHandle, channel)
DAQmxResetAIRngHigh.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2495
DAQmxGetAIRngLow = _stdcall_libraries['nicaiu'].DAQmxGetAIRngLow
DAQmxGetAIRngLow.restype = int32
# DAQmxGetAIRngLow(taskHandle, channel, data)
DAQmxGetAIRngLow.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2496
DAQmxSetAIRngLow = _stdcall_libraries['nicaiu'].DAQmxSetAIRngLow
DAQmxSetAIRngLow.restype = int32
# DAQmxSetAIRngLow(taskHandle, channel, data)
DAQmxSetAIRngLow.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2497
DAQmxResetAIRngLow = _stdcall_libraries['nicaiu'].DAQmxResetAIRngLow
DAQmxResetAIRngLow.restype = int32
# DAQmxResetAIRngLow(taskHandle, channel)
DAQmxResetAIRngLow.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2499
DAQmxGetAIGain = _stdcall_libraries['nicaiu'].DAQmxGetAIGain
DAQmxGetAIGain.restype = int32
# DAQmxGetAIGain(taskHandle, channel, data)
DAQmxGetAIGain.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2500
DAQmxSetAIGain = _stdcall_libraries['nicaiu'].DAQmxSetAIGain
DAQmxSetAIGain.restype = int32
# DAQmxSetAIGain(taskHandle, channel, data)
DAQmxSetAIGain.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2501
DAQmxResetAIGain = _stdcall_libraries['nicaiu'].DAQmxResetAIGain
DAQmxResetAIGain.restype = int32
# DAQmxResetAIGain(taskHandle, channel)
DAQmxResetAIGain.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2503
DAQmxGetAISampAndHoldEnable = _stdcall_libraries['nicaiu'].DAQmxGetAISampAndHoldEnable
DAQmxGetAISampAndHoldEnable.restype = int32
# DAQmxGetAISampAndHoldEnable(taskHandle, channel, data)
DAQmxGetAISampAndHoldEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2504
DAQmxSetAISampAndHoldEnable = _stdcall_libraries['nicaiu'].DAQmxSetAISampAndHoldEnable
DAQmxSetAISampAndHoldEnable.restype = int32
# DAQmxSetAISampAndHoldEnable(taskHandle, channel, data)
DAQmxSetAISampAndHoldEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2505
DAQmxResetAISampAndHoldEnable = _stdcall_libraries['nicaiu'].DAQmxResetAISampAndHoldEnable
DAQmxResetAISampAndHoldEnable.restype = int32
# DAQmxResetAISampAndHoldEnable(taskHandle, channel)
DAQmxResetAISampAndHoldEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2508
DAQmxGetAIAutoZeroMode = _stdcall_libraries['nicaiu'].DAQmxGetAIAutoZeroMode
DAQmxGetAIAutoZeroMode.restype = int32
# DAQmxGetAIAutoZeroMode(taskHandle, channel, data)
DAQmxGetAIAutoZeroMode.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2509
DAQmxSetAIAutoZeroMode = _stdcall_libraries['nicaiu'].DAQmxSetAIAutoZeroMode
DAQmxSetAIAutoZeroMode.restype = int32
# DAQmxSetAIAutoZeroMode(taskHandle, channel, data)
DAQmxSetAIAutoZeroMode.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2510
DAQmxResetAIAutoZeroMode = _stdcall_libraries['nicaiu'].DAQmxResetAIAutoZeroMode
DAQmxResetAIAutoZeroMode.restype = int32
# DAQmxResetAIAutoZeroMode(taskHandle, channel)
DAQmxResetAIAutoZeroMode.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2513
DAQmxGetAIDataXferMech = _stdcall_libraries['nicaiu'].DAQmxGetAIDataXferMech
DAQmxGetAIDataXferMech.restype = int32
# DAQmxGetAIDataXferMech(taskHandle, channel, data)
DAQmxGetAIDataXferMech.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2514
DAQmxSetAIDataXferMech = _stdcall_libraries['nicaiu'].DAQmxSetAIDataXferMech
DAQmxSetAIDataXferMech.restype = int32
# DAQmxSetAIDataXferMech(taskHandle, channel, data)
DAQmxSetAIDataXferMech.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2515
DAQmxResetAIDataXferMech = _stdcall_libraries['nicaiu'].DAQmxResetAIDataXferMech
DAQmxResetAIDataXferMech.restype = int32
# DAQmxResetAIDataXferMech(taskHandle, channel)
DAQmxResetAIDataXferMech.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2518
DAQmxGetAIDataXferReqCond = _stdcall_libraries['nicaiu'].DAQmxGetAIDataXferReqCond
DAQmxGetAIDataXferReqCond.restype = int32
# DAQmxGetAIDataXferReqCond(taskHandle, channel, data)
DAQmxGetAIDataXferReqCond.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2519
DAQmxSetAIDataXferReqCond = _stdcall_libraries['nicaiu'].DAQmxSetAIDataXferReqCond
DAQmxSetAIDataXferReqCond.restype = int32
# DAQmxSetAIDataXferReqCond(taskHandle, channel, data)
DAQmxSetAIDataXferReqCond.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2520
DAQmxResetAIDataXferReqCond = _stdcall_libraries['nicaiu'].DAQmxResetAIDataXferReqCond
DAQmxResetAIDataXferReqCond.restype = int32
# DAQmxResetAIDataXferReqCond(taskHandle, channel)
DAQmxResetAIDataXferReqCond.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2522
DAQmxGetAIDataXferCustomThreshold = _stdcall_libraries['nicaiu'].DAQmxGetAIDataXferCustomThreshold
DAQmxGetAIDataXferCustomThreshold.restype = int32
# DAQmxGetAIDataXferCustomThreshold(taskHandle, channel, data)
DAQmxGetAIDataXferCustomThreshold.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 2523
DAQmxSetAIDataXferCustomThreshold = _stdcall_libraries['nicaiu'].DAQmxSetAIDataXferCustomThreshold
DAQmxSetAIDataXferCustomThreshold.restype = int32
# DAQmxSetAIDataXferCustomThreshold(taskHandle, channel, data)
DAQmxSetAIDataXferCustomThreshold.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 2524
DAQmxResetAIDataXferCustomThreshold = _stdcall_libraries['nicaiu'].DAQmxResetAIDataXferCustomThreshold
DAQmxResetAIDataXferCustomThreshold.restype = int32
# DAQmxResetAIDataXferCustomThreshold(taskHandle, channel)
DAQmxResetAIDataXferCustomThreshold.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2526
DAQmxGetAIMemMapEnable = _stdcall_libraries['nicaiu'].DAQmxGetAIMemMapEnable
DAQmxGetAIMemMapEnable.restype = int32
# DAQmxGetAIMemMapEnable(taskHandle, channel, data)
DAQmxGetAIMemMapEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2527
DAQmxSetAIMemMapEnable = _stdcall_libraries['nicaiu'].DAQmxSetAIMemMapEnable
DAQmxSetAIMemMapEnable.restype = int32
# DAQmxSetAIMemMapEnable(taskHandle, channel, data)
DAQmxSetAIMemMapEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2528
DAQmxResetAIMemMapEnable = _stdcall_libraries['nicaiu'].DAQmxResetAIMemMapEnable
DAQmxResetAIMemMapEnable.restype = int32
# DAQmxResetAIMemMapEnable(taskHandle, channel)
DAQmxResetAIMemMapEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2531
DAQmxGetAIRawDataCompressionType = _stdcall_libraries['nicaiu'].DAQmxGetAIRawDataCompressionType
DAQmxGetAIRawDataCompressionType.restype = int32
# DAQmxGetAIRawDataCompressionType(taskHandle, channel, data)
DAQmxGetAIRawDataCompressionType.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2532
DAQmxSetAIRawDataCompressionType = _stdcall_libraries['nicaiu'].DAQmxSetAIRawDataCompressionType
DAQmxSetAIRawDataCompressionType.restype = int32
# DAQmxSetAIRawDataCompressionType(taskHandle, channel, data)
DAQmxSetAIRawDataCompressionType.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2533
DAQmxResetAIRawDataCompressionType = _stdcall_libraries['nicaiu'].DAQmxResetAIRawDataCompressionType
DAQmxResetAIRawDataCompressionType.restype = int32
# DAQmxResetAIRawDataCompressionType(taskHandle, channel)
DAQmxResetAIRawDataCompressionType.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2535
DAQmxGetAILossyLSBRemovalCompressedSampSize = _stdcall_libraries['nicaiu'].DAQmxGetAILossyLSBRemovalCompressedSampSize
DAQmxGetAILossyLSBRemovalCompressedSampSize.restype = int32
# DAQmxGetAILossyLSBRemovalCompressedSampSize(taskHandle, channel, data)
DAQmxGetAILossyLSBRemovalCompressedSampSize.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 2536
DAQmxSetAILossyLSBRemovalCompressedSampSize = _stdcall_libraries['nicaiu'].DAQmxSetAILossyLSBRemovalCompressedSampSize
DAQmxSetAILossyLSBRemovalCompressedSampSize.restype = int32
# DAQmxSetAILossyLSBRemovalCompressedSampSize(taskHandle, channel, data)
DAQmxSetAILossyLSBRemovalCompressedSampSize.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 2537
DAQmxResetAILossyLSBRemovalCompressedSampSize = _stdcall_libraries['nicaiu'].DAQmxResetAILossyLSBRemovalCompressedSampSize
DAQmxResetAILossyLSBRemovalCompressedSampSize.restype = int32
# DAQmxResetAILossyLSBRemovalCompressedSampSize(taskHandle, channel)
DAQmxResetAILossyLSBRemovalCompressedSampSize.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2539
DAQmxGetAIDevScalingCoeff = _stdcall_libraries['nicaiu'].DAQmxGetAIDevScalingCoeff
DAQmxGetAIDevScalingCoeff.restype = int32
# DAQmxGetAIDevScalingCoeff(taskHandle, channel, data, arraySizeInSamples)
DAQmxGetAIDevScalingCoeff.argtypes = [TaskHandle, STRING, POINTER(float64), uInt32]
# NIDAQmx.h 2541
DAQmxGetAIEnhancedAliasRejectionEnable = _stdcall_libraries['nicaiu'].DAQmxGetAIEnhancedAliasRejectionEnable
DAQmxGetAIEnhancedAliasRejectionEnable.restype = int32
# DAQmxGetAIEnhancedAliasRejectionEnable(taskHandle, channel, data)
DAQmxGetAIEnhancedAliasRejectionEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2542
DAQmxSetAIEnhancedAliasRejectionEnable = _stdcall_libraries['nicaiu'].DAQmxSetAIEnhancedAliasRejectionEnable
DAQmxSetAIEnhancedAliasRejectionEnable.restype = int32
# DAQmxSetAIEnhancedAliasRejectionEnable(taskHandle, channel, data)
DAQmxSetAIEnhancedAliasRejectionEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2543
DAQmxResetAIEnhancedAliasRejectionEnable = _stdcall_libraries['nicaiu'].DAQmxResetAIEnhancedAliasRejectionEnable
DAQmxResetAIEnhancedAliasRejectionEnable.restype = int32
# DAQmxResetAIEnhancedAliasRejectionEnable(taskHandle, channel)
DAQmxResetAIEnhancedAliasRejectionEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2545
DAQmxGetAOMax = _stdcall_libraries['nicaiu'].DAQmxGetAOMax
DAQmxGetAOMax.restype = int32
# DAQmxGetAOMax(taskHandle, channel, data)
DAQmxGetAOMax.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2546
DAQmxSetAOMax = _stdcall_libraries['nicaiu'].DAQmxSetAOMax
DAQmxSetAOMax.restype = int32
# DAQmxSetAOMax(taskHandle, channel, data)
DAQmxSetAOMax.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2547
DAQmxResetAOMax = _stdcall_libraries['nicaiu'].DAQmxResetAOMax
DAQmxResetAOMax.restype = int32
# DAQmxResetAOMax(taskHandle, channel)
DAQmxResetAOMax.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2549
DAQmxGetAOMin = _stdcall_libraries['nicaiu'].DAQmxGetAOMin
DAQmxGetAOMin.restype = int32
# DAQmxGetAOMin(taskHandle, channel, data)
DAQmxGetAOMin.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2550
DAQmxSetAOMin = _stdcall_libraries['nicaiu'].DAQmxSetAOMin
DAQmxSetAOMin.restype = int32
# DAQmxSetAOMin(taskHandle, channel, data)
DAQmxSetAOMin.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2551
DAQmxResetAOMin = _stdcall_libraries['nicaiu'].DAQmxResetAOMin
DAQmxResetAOMin.restype = int32
# DAQmxResetAOMin(taskHandle, channel)
DAQmxResetAOMin.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2553
DAQmxGetAOCustomScaleName = _stdcall_libraries['nicaiu'].DAQmxGetAOCustomScaleName
DAQmxGetAOCustomScaleName.restype = int32
# DAQmxGetAOCustomScaleName(taskHandle, channel, data, bufferSize)
DAQmxGetAOCustomScaleName.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2554
DAQmxSetAOCustomScaleName = _stdcall_libraries['nicaiu'].DAQmxSetAOCustomScaleName
DAQmxSetAOCustomScaleName.restype = int32
# DAQmxSetAOCustomScaleName(taskHandle, channel, data)
DAQmxSetAOCustomScaleName.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2555
DAQmxResetAOCustomScaleName = _stdcall_libraries['nicaiu'].DAQmxResetAOCustomScaleName
DAQmxResetAOCustomScaleName.restype = int32
# DAQmxResetAOCustomScaleName(taskHandle, channel)
DAQmxResetAOCustomScaleName.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2558
DAQmxGetAOOutputType = _stdcall_libraries['nicaiu'].DAQmxGetAOOutputType
DAQmxGetAOOutputType.restype = int32
# DAQmxGetAOOutputType(taskHandle, channel, data)
DAQmxGetAOOutputType.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2561
DAQmxGetAOVoltageUnits = _stdcall_libraries['nicaiu'].DAQmxGetAOVoltageUnits
DAQmxGetAOVoltageUnits.restype = int32
# DAQmxGetAOVoltageUnits(taskHandle, channel, data)
DAQmxGetAOVoltageUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2562
DAQmxSetAOVoltageUnits = _stdcall_libraries['nicaiu'].DAQmxSetAOVoltageUnits
DAQmxSetAOVoltageUnits.restype = int32
# DAQmxSetAOVoltageUnits(taskHandle, channel, data)
DAQmxSetAOVoltageUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2563
DAQmxResetAOVoltageUnits = _stdcall_libraries['nicaiu'].DAQmxResetAOVoltageUnits
DAQmxResetAOVoltageUnits.restype = int32
# DAQmxResetAOVoltageUnits(taskHandle, channel)
DAQmxResetAOVoltageUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2566
DAQmxGetAOCurrentUnits = _stdcall_libraries['nicaiu'].DAQmxGetAOCurrentUnits
DAQmxGetAOCurrentUnits.restype = int32
# DAQmxGetAOCurrentUnits(taskHandle, channel, data)
DAQmxGetAOCurrentUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2567
DAQmxSetAOCurrentUnits = _stdcall_libraries['nicaiu'].DAQmxSetAOCurrentUnits
DAQmxSetAOCurrentUnits.restype = int32
# DAQmxSetAOCurrentUnits(taskHandle, channel, data)
DAQmxSetAOCurrentUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2568
DAQmxResetAOCurrentUnits = _stdcall_libraries['nicaiu'].DAQmxResetAOCurrentUnits
DAQmxResetAOCurrentUnits.restype = int32
# DAQmxResetAOCurrentUnits(taskHandle, channel)
DAQmxResetAOCurrentUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2570
DAQmxGetAOOutputImpedance = _stdcall_libraries['nicaiu'].DAQmxGetAOOutputImpedance
DAQmxGetAOOutputImpedance.restype = int32
# DAQmxGetAOOutputImpedance(taskHandle, channel, data)
DAQmxGetAOOutputImpedance.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2571
DAQmxSetAOOutputImpedance = _stdcall_libraries['nicaiu'].DAQmxSetAOOutputImpedance
DAQmxSetAOOutputImpedance.restype = int32
# DAQmxSetAOOutputImpedance(taskHandle, channel, data)
DAQmxSetAOOutputImpedance.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2572
DAQmxResetAOOutputImpedance = _stdcall_libraries['nicaiu'].DAQmxResetAOOutputImpedance
DAQmxResetAOOutputImpedance.restype = int32
# DAQmxResetAOOutputImpedance(taskHandle, channel)
DAQmxResetAOOutputImpedance.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2574
DAQmxGetAOLoadImpedance = _stdcall_libraries['nicaiu'].DAQmxGetAOLoadImpedance
DAQmxGetAOLoadImpedance.restype = int32
# DAQmxGetAOLoadImpedance(taskHandle, channel, data)
DAQmxGetAOLoadImpedance.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2575
DAQmxSetAOLoadImpedance = _stdcall_libraries['nicaiu'].DAQmxSetAOLoadImpedance
DAQmxSetAOLoadImpedance.restype = int32
# DAQmxSetAOLoadImpedance(taskHandle, channel, data)
DAQmxSetAOLoadImpedance.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2576
DAQmxResetAOLoadImpedance = _stdcall_libraries['nicaiu'].DAQmxResetAOLoadImpedance
DAQmxResetAOLoadImpedance.restype = int32
# DAQmxResetAOLoadImpedance(taskHandle, channel)
DAQmxResetAOLoadImpedance.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2579
DAQmxGetAOIdleOutputBehavior = _stdcall_libraries['nicaiu'].DAQmxGetAOIdleOutputBehavior
DAQmxGetAOIdleOutputBehavior.restype = int32
# DAQmxGetAOIdleOutputBehavior(taskHandle, channel, data)
DAQmxGetAOIdleOutputBehavior.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2580
DAQmxSetAOIdleOutputBehavior = _stdcall_libraries['nicaiu'].DAQmxSetAOIdleOutputBehavior
DAQmxSetAOIdleOutputBehavior.restype = int32
# DAQmxSetAOIdleOutputBehavior(taskHandle, channel, data)
DAQmxSetAOIdleOutputBehavior.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2581
DAQmxResetAOIdleOutputBehavior = _stdcall_libraries['nicaiu'].DAQmxResetAOIdleOutputBehavior
DAQmxResetAOIdleOutputBehavior.restype = int32
# DAQmxResetAOIdleOutputBehavior(taskHandle, channel)
DAQmxResetAOIdleOutputBehavior.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2584
DAQmxGetAOTermCfg = _stdcall_libraries['nicaiu'].DAQmxGetAOTermCfg
DAQmxGetAOTermCfg.restype = int32
# DAQmxGetAOTermCfg(taskHandle, channel, data)
DAQmxGetAOTermCfg.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2585
DAQmxSetAOTermCfg = _stdcall_libraries['nicaiu'].DAQmxSetAOTermCfg
DAQmxSetAOTermCfg.restype = int32
# DAQmxSetAOTermCfg(taskHandle, channel, data)
DAQmxSetAOTermCfg.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2586
DAQmxResetAOTermCfg = _stdcall_libraries['nicaiu'].DAQmxResetAOTermCfg
DAQmxResetAOTermCfg.restype = int32
# DAQmxResetAOTermCfg(taskHandle, channel)
DAQmxResetAOTermCfg.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2589
DAQmxGetAOResolutionUnits = _stdcall_libraries['nicaiu'].DAQmxGetAOResolutionUnits
DAQmxGetAOResolutionUnits.restype = int32
# DAQmxGetAOResolutionUnits(taskHandle, channel, data)
DAQmxGetAOResolutionUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2590
DAQmxSetAOResolutionUnits = _stdcall_libraries['nicaiu'].DAQmxSetAOResolutionUnits
DAQmxSetAOResolutionUnits.restype = int32
# DAQmxSetAOResolutionUnits(taskHandle, channel, data)
DAQmxSetAOResolutionUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2591
DAQmxResetAOResolutionUnits = _stdcall_libraries['nicaiu'].DAQmxResetAOResolutionUnits
DAQmxResetAOResolutionUnits.restype = int32
# DAQmxResetAOResolutionUnits(taskHandle, channel)
DAQmxResetAOResolutionUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2593
DAQmxGetAOResolution = _stdcall_libraries['nicaiu'].DAQmxGetAOResolution
DAQmxGetAOResolution.restype = int32
# DAQmxGetAOResolution(taskHandle, channel, data)
DAQmxGetAOResolution.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2595
DAQmxGetAODACRngHigh = _stdcall_libraries['nicaiu'].DAQmxGetAODACRngHigh
DAQmxGetAODACRngHigh.restype = int32
# DAQmxGetAODACRngHigh(taskHandle, channel, data)
DAQmxGetAODACRngHigh.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2596
DAQmxSetAODACRngHigh = _stdcall_libraries['nicaiu'].DAQmxSetAODACRngHigh
DAQmxSetAODACRngHigh.restype = int32
# DAQmxSetAODACRngHigh(taskHandle, channel, data)
DAQmxSetAODACRngHigh.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2597
DAQmxResetAODACRngHigh = _stdcall_libraries['nicaiu'].DAQmxResetAODACRngHigh
DAQmxResetAODACRngHigh.restype = int32
# DAQmxResetAODACRngHigh(taskHandle, channel)
DAQmxResetAODACRngHigh.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2599
DAQmxGetAODACRngLow = _stdcall_libraries['nicaiu'].DAQmxGetAODACRngLow
DAQmxGetAODACRngLow.restype = int32
# DAQmxGetAODACRngLow(taskHandle, channel, data)
DAQmxGetAODACRngLow.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2600
DAQmxSetAODACRngLow = _stdcall_libraries['nicaiu'].DAQmxSetAODACRngLow
DAQmxSetAODACRngLow.restype = int32
# DAQmxSetAODACRngLow(taskHandle, channel, data)
DAQmxSetAODACRngLow.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2601
DAQmxResetAODACRngLow = _stdcall_libraries['nicaiu'].DAQmxResetAODACRngLow
DAQmxResetAODACRngLow.restype = int32
# DAQmxResetAODACRngLow(taskHandle, channel)
DAQmxResetAODACRngLow.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2603
DAQmxGetAODACRefConnToGnd = _stdcall_libraries['nicaiu'].DAQmxGetAODACRefConnToGnd
DAQmxGetAODACRefConnToGnd.restype = int32
# DAQmxGetAODACRefConnToGnd(taskHandle, channel, data)
DAQmxGetAODACRefConnToGnd.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2604
DAQmxSetAODACRefConnToGnd = _stdcall_libraries['nicaiu'].DAQmxSetAODACRefConnToGnd
DAQmxSetAODACRefConnToGnd.restype = int32
# DAQmxSetAODACRefConnToGnd(taskHandle, channel, data)
DAQmxSetAODACRefConnToGnd.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2605
DAQmxResetAODACRefConnToGnd = _stdcall_libraries['nicaiu'].DAQmxResetAODACRefConnToGnd
DAQmxResetAODACRefConnToGnd.restype = int32
# DAQmxResetAODACRefConnToGnd(taskHandle, channel)
DAQmxResetAODACRefConnToGnd.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2607
DAQmxGetAODACRefAllowConnToGnd = _stdcall_libraries['nicaiu'].DAQmxGetAODACRefAllowConnToGnd
DAQmxGetAODACRefAllowConnToGnd.restype = int32
# DAQmxGetAODACRefAllowConnToGnd(taskHandle, channel, data)
DAQmxGetAODACRefAllowConnToGnd.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2608
DAQmxSetAODACRefAllowConnToGnd = _stdcall_libraries['nicaiu'].DAQmxSetAODACRefAllowConnToGnd
DAQmxSetAODACRefAllowConnToGnd.restype = int32
# DAQmxSetAODACRefAllowConnToGnd(taskHandle, channel, data)
DAQmxSetAODACRefAllowConnToGnd.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2609
DAQmxResetAODACRefAllowConnToGnd = _stdcall_libraries['nicaiu'].DAQmxResetAODACRefAllowConnToGnd
DAQmxResetAODACRefAllowConnToGnd.restype = int32
# DAQmxResetAODACRefAllowConnToGnd(taskHandle, channel)
DAQmxResetAODACRefAllowConnToGnd.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2612
DAQmxGetAODACRefSrc = _stdcall_libraries['nicaiu'].DAQmxGetAODACRefSrc
DAQmxGetAODACRefSrc.restype = int32
# DAQmxGetAODACRefSrc(taskHandle, channel, data)
DAQmxGetAODACRefSrc.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2613
DAQmxSetAODACRefSrc = _stdcall_libraries['nicaiu'].DAQmxSetAODACRefSrc
DAQmxSetAODACRefSrc.restype = int32
# DAQmxSetAODACRefSrc(taskHandle, channel, data)
DAQmxSetAODACRefSrc.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2614
DAQmxResetAODACRefSrc = _stdcall_libraries['nicaiu'].DAQmxResetAODACRefSrc
DAQmxResetAODACRefSrc.restype = int32
# DAQmxResetAODACRefSrc(taskHandle, channel)
DAQmxResetAODACRefSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2616
DAQmxGetAODACRefExtSrc = _stdcall_libraries['nicaiu'].DAQmxGetAODACRefExtSrc
DAQmxGetAODACRefExtSrc.restype = int32
# DAQmxGetAODACRefExtSrc(taskHandle, channel, data, bufferSize)
DAQmxGetAODACRefExtSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2617
DAQmxSetAODACRefExtSrc = _stdcall_libraries['nicaiu'].DAQmxSetAODACRefExtSrc
DAQmxSetAODACRefExtSrc.restype = int32
# DAQmxSetAODACRefExtSrc(taskHandle, channel, data)
DAQmxSetAODACRefExtSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2618
DAQmxResetAODACRefExtSrc = _stdcall_libraries['nicaiu'].DAQmxResetAODACRefExtSrc
DAQmxResetAODACRefExtSrc.restype = int32
# DAQmxResetAODACRefExtSrc(taskHandle, channel)
DAQmxResetAODACRefExtSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2620
DAQmxGetAODACRefVal = _stdcall_libraries['nicaiu'].DAQmxGetAODACRefVal
DAQmxGetAODACRefVal.restype = int32
# DAQmxGetAODACRefVal(taskHandle, channel, data)
DAQmxGetAODACRefVal.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2621
DAQmxSetAODACRefVal = _stdcall_libraries['nicaiu'].DAQmxSetAODACRefVal
DAQmxSetAODACRefVal.restype = int32
# DAQmxSetAODACRefVal(taskHandle, channel, data)
DAQmxSetAODACRefVal.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2622
DAQmxResetAODACRefVal = _stdcall_libraries['nicaiu'].DAQmxResetAODACRefVal
DAQmxResetAODACRefVal.restype = int32
# DAQmxResetAODACRefVal(taskHandle, channel)
DAQmxResetAODACRefVal.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2625
DAQmxGetAODACOffsetSrc = _stdcall_libraries['nicaiu'].DAQmxGetAODACOffsetSrc
DAQmxGetAODACOffsetSrc.restype = int32
# DAQmxGetAODACOffsetSrc(taskHandle, channel, data)
DAQmxGetAODACOffsetSrc.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2626
DAQmxSetAODACOffsetSrc = _stdcall_libraries['nicaiu'].DAQmxSetAODACOffsetSrc
DAQmxSetAODACOffsetSrc.restype = int32
# DAQmxSetAODACOffsetSrc(taskHandle, channel, data)
DAQmxSetAODACOffsetSrc.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2627
DAQmxResetAODACOffsetSrc = _stdcall_libraries['nicaiu'].DAQmxResetAODACOffsetSrc
DAQmxResetAODACOffsetSrc.restype = int32
# DAQmxResetAODACOffsetSrc(taskHandle, channel)
DAQmxResetAODACOffsetSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2629
DAQmxGetAODACOffsetExtSrc = _stdcall_libraries['nicaiu'].DAQmxGetAODACOffsetExtSrc
DAQmxGetAODACOffsetExtSrc.restype = int32
# DAQmxGetAODACOffsetExtSrc(taskHandle, channel, data, bufferSize)
DAQmxGetAODACOffsetExtSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2630
DAQmxSetAODACOffsetExtSrc = _stdcall_libraries['nicaiu'].DAQmxSetAODACOffsetExtSrc
DAQmxSetAODACOffsetExtSrc.restype = int32
# DAQmxSetAODACOffsetExtSrc(taskHandle, channel, data)
DAQmxSetAODACOffsetExtSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2631
DAQmxResetAODACOffsetExtSrc = _stdcall_libraries['nicaiu'].DAQmxResetAODACOffsetExtSrc
DAQmxResetAODACOffsetExtSrc.restype = int32
# DAQmxResetAODACOffsetExtSrc(taskHandle, channel)
DAQmxResetAODACOffsetExtSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2633
DAQmxGetAODACOffsetVal = _stdcall_libraries['nicaiu'].DAQmxGetAODACOffsetVal
DAQmxGetAODACOffsetVal.restype = int32
# DAQmxGetAODACOffsetVal(taskHandle, channel, data)
DAQmxGetAODACOffsetVal.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2634
DAQmxSetAODACOffsetVal = _stdcall_libraries['nicaiu'].DAQmxSetAODACOffsetVal
DAQmxSetAODACOffsetVal.restype = int32
# DAQmxSetAODACOffsetVal(taskHandle, channel, data)
DAQmxSetAODACOffsetVal.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2635
DAQmxResetAODACOffsetVal = _stdcall_libraries['nicaiu'].DAQmxResetAODACOffsetVal
DAQmxResetAODACOffsetVal.restype = int32
# DAQmxResetAODACOffsetVal(taskHandle, channel)
DAQmxResetAODACOffsetVal.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2637
DAQmxGetAOReglitchEnable = _stdcall_libraries['nicaiu'].DAQmxGetAOReglitchEnable
DAQmxGetAOReglitchEnable.restype = int32
# DAQmxGetAOReglitchEnable(taskHandle, channel, data)
DAQmxGetAOReglitchEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2638
DAQmxSetAOReglitchEnable = _stdcall_libraries['nicaiu'].DAQmxSetAOReglitchEnable
DAQmxSetAOReglitchEnable.restype = int32
# DAQmxSetAOReglitchEnable(taskHandle, channel, data)
DAQmxSetAOReglitchEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2639
DAQmxResetAOReglitchEnable = _stdcall_libraries['nicaiu'].DAQmxResetAOReglitchEnable
DAQmxResetAOReglitchEnable.restype = int32
# DAQmxResetAOReglitchEnable(taskHandle, channel)
DAQmxResetAOReglitchEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2641
DAQmxGetAOGain = _stdcall_libraries['nicaiu'].DAQmxGetAOGain
DAQmxGetAOGain.restype = int32
# DAQmxGetAOGain(taskHandle, channel, data)
DAQmxGetAOGain.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2642
DAQmxSetAOGain = _stdcall_libraries['nicaiu'].DAQmxSetAOGain
DAQmxSetAOGain.restype = int32
# DAQmxSetAOGain(taskHandle, channel, data)
DAQmxSetAOGain.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2643
DAQmxResetAOGain = _stdcall_libraries['nicaiu'].DAQmxResetAOGain
DAQmxResetAOGain.restype = int32
# DAQmxResetAOGain(taskHandle, channel)
DAQmxResetAOGain.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2645
DAQmxGetAOUseOnlyOnBrdMem = _stdcall_libraries['nicaiu'].DAQmxGetAOUseOnlyOnBrdMem
DAQmxGetAOUseOnlyOnBrdMem.restype = int32
# DAQmxGetAOUseOnlyOnBrdMem(taskHandle, channel, data)
DAQmxGetAOUseOnlyOnBrdMem.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2646
DAQmxSetAOUseOnlyOnBrdMem = _stdcall_libraries['nicaiu'].DAQmxSetAOUseOnlyOnBrdMem
DAQmxSetAOUseOnlyOnBrdMem.restype = int32
# DAQmxSetAOUseOnlyOnBrdMem(taskHandle, channel, data)
DAQmxSetAOUseOnlyOnBrdMem.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2647
DAQmxResetAOUseOnlyOnBrdMem = _stdcall_libraries['nicaiu'].DAQmxResetAOUseOnlyOnBrdMem
DAQmxResetAOUseOnlyOnBrdMem.restype = int32
# DAQmxResetAOUseOnlyOnBrdMem(taskHandle, channel)
DAQmxResetAOUseOnlyOnBrdMem.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2650
DAQmxGetAODataXferMech = _stdcall_libraries['nicaiu'].DAQmxGetAODataXferMech
DAQmxGetAODataXferMech.restype = int32
# DAQmxGetAODataXferMech(taskHandle, channel, data)
DAQmxGetAODataXferMech.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2651
DAQmxSetAODataXferMech = _stdcall_libraries['nicaiu'].DAQmxSetAODataXferMech
DAQmxSetAODataXferMech.restype = int32
# DAQmxSetAODataXferMech(taskHandle, channel, data)
DAQmxSetAODataXferMech.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2652
DAQmxResetAODataXferMech = _stdcall_libraries['nicaiu'].DAQmxResetAODataXferMech
DAQmxResetAODataXferMech.restype = int32
# DAQmxResetAODataXferMech(taskHandle, channel)
DAQmxResetAODataXferMech.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2655
DAQmxGetAODataXferReqCond = _stdcall_libraries['nicaiu'].DAQmxGetAODataXferReqCond
DAQmxGetAODataXferReqCond.restype = int32
# DAQmxGetAODataXferReqCond(taskHandle, channel, data)
DAQmxGetAODataXferReqCond.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2656
DAQmxSetAODataXferReqCond = _stdcall_libraries['nicaiu'].DAQmxSetAODataXferReqCond
DAQmxSetAODataXferReqCond.restype = int32
# DAQmxSetAODataXferReqCond(taskHandle, channel, data)
DAQmxSetAODataXferReqCond.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2657
DAQmxResetAODataXferReqCond = _stdcall_libraries['nicaiu'].DAQmxResetAODataXferReqCond
DAQmxResetAODataXferReqCond.restype = int32
# DAQmxResetAODataXferReqCond(taskHandle, channel)
DAQmxResetAODataXferReqCond.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2659
DAQmxGetAOMemMapEnable = _stdcall_libraries['nicaiu'].DAQmxGetAOMemMapEnable
DAQmxGetAOMemMapEnable.restype = int32
# DAQmxGetAOMemMapEnable(taskHandle, channel, data)
DAQmxGetAOMemMapEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2660
DAQmxSetAOMemMapEnable = _stdcall_libraries['nicaiu'].DAQmxSetAOMemMapEnable
DAQmxSetAOMemMapEnable.restype = int32
# DAQmxSetAOMemMapEnable(taskHandle, channel, data)
DAQmxSetAOMemMapEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2661
DAQmxResetAOMemMapEnable = _stdcall_libraries['nicaiu'].DAQmxResetAOMemMapEnable
DAQmxResetAOMemMapEnable.restype = int32
# DAQmxResetAOMemMapEnable(taskHandle, channel)
DAQmxResetAOMemMapEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2663
DAQmxGetAODevScalingCoeff = _stdcall_libraries['nicaiu'].DAQmxGetAODevScalingCoeff
DAQmxGetAODevScalingCoeff.restype = int32
# DAQmxGetAODevScalingCoeff(taskHandle, channel, data, arraySizeInSamples)
DAQmxGetAODevScalingCoeff.argtypes = [TaskHandle, STRING, POINTER(float64), uInt32]
# NIDAQmx.h 2665
DAQmxGetAOEnhancedImageRejectionEnable = _stdcall_libraries['nicaiu'].DAQmxGetAOEnhancedImageRejectionEnable
DAQmxGetAOEnhancedImageRejectionEnable.restype = int32
# DAQmxGetAOEnhancedImageRejectionEnable(taskHandle, channel, data)
DAQmxGetAOEnhancedImageRejectionEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2666
DAQmxSetAOEnhancedImageRejectionEnable = _stdcall_libraries['nicaiu'].DAQmxSetAOEnhancedImageRejectionEnable
DAQmxSetAOEnhancedImageRejectionEnable.restype = int32
# DAQmxSetAOEnhancedImageRejectionEnable(taskHandle, channel, data)
DAQmxSetAOEnhancedImageRejectionEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2667
DAQmxResetAOEnhancedImageRejectionEnable = _stdcall_libraries['nicaiu'].DAQmxResetAOEnhancedImageRejectionEnable
DAQmxResetAOEnhancedImageRejectionEnable.restype = int32
# DAQmxResetAOEnhancedImageRejectionEnable(taskHandle, channel)
DAQmxResetAOEnhancedImageRejectionEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2669
DAQmxGetDIInvertLines = _stdcall_libraries['nicaiu'].DAQmxGetDIInvertLines
DAQmxGetDIInvertLines.restype = int32
# DAQmxGetDIInvertLines(taskHandle, channel, data)
DAQmxGetDIInvertLines.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2670
DAQmxSetDIInvertLines = _stdcall_libraries['nicaiu'].DAQmxSetDIInvertLines
DAQmxSetDIInvertLines.restype = int32
# DAQmxSetDIInvertLines(taskHandle, channel, data)
DAQmxSetDIInvertLines.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2671
DAQmxResetDIInvertLines = _stdcall_libraries['nicaiu'].DAQmxResetDIInvertLines
DAQmxResetDIInvertLines.restype = int32
# DAQmxResetDIInvertLines(taskHandle, channel)
DAQmxResetDIInvertLines.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2673
DAQmxGetDINumLines = _stdcall_libraries['nicaiu'].DAQmxGetDINumLines
DAQmxGetDINumLines.restype = int32
# DAQmxGetDINumLines(taskHandle, channel, data)
DAQmxGetDINumLines.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 2675
DAQmxGetDIDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetDIDigFltrEnable
DAQmxGetDIDigFltrEnable.restype = int32
# DAQmxGetDIDigFltrEnable(taskHandle, channel, data)
DAQmxGetDIDigFltrEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2676
DAQmxSetDIDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetDIDigFltrEnable
DAQmxSetDIDigFltrEnable.restype = int32
# DAQmxSetDIDigFltrEnable(taskHandle, channel, data)
DAQmxSetDIDigFltrEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2677
DAQmxResetDIDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetDIDigFltrEnable
DAQmxResetDIDigFltrEnable.restype = int32
# DAQmxResetDIDigFltrEnable(taskHandle, channel)
DAQmxResetDIDigFltrEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2679
DAQmxGetDIDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetDIDigFltrMinPulseWidth
DAQmxGetDIDigFltrMinPulseWidth.restype = int32
# DAQmxGetDIDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxGetDIDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2680
DAQmxSetDIDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetDIDigFltrMinPulseWidth
DAQmxSetDIDigFltrMinPulseWidth.restype = int32
# DAQmxSetDIDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxSetDIDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2681
DAQmxResetDIDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetDIDigFltrMinPulseWidth
DAQmxResetDIDigFltrMinPulseWidth.restype = int32
# DAQmxResetDIDigFltrMinPulseWidth(taskHandle, channel)
DAQmxResetDIDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2683
DAQmxGetDITristate = _stdcall_libraries['nicaiu'].DAQmxGetDITristate
DAQmxGetDITristate.restype = int32
# DAQmxGetDITristate(taskHandle, channel, data)
DAQmxGetDITristate.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2684
DAQmxSetDITristate = _stdcall_libraries['nicaiu'].DAQmxSetDITristate
DAQmxSetDITristate.restype = int32
# DAQmxSetDITristate(taskHandle, channel, data)
DAQmxSetDITristate.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2685
DAQmxResetDITristate = _stdcall_libraries['nicaiu'].DAQmxResetDITristate
DAQmxResetDITristate.restype = int32
# DAQmxResetDITristate(taskHandle, channel)
DAQmxResetDITristate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2688
DAQmxGetDIDataXferMech = _stdcall_libraries['nicaiu'].DAQmxGetDIDataXferMech
DAQmxGetDIDataXferMech.restype = int32
# DAQmxGetDIDataXferMech(taskHandle, channel, data)
DAQmxGetDIDataXferMech.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2689
DAQmxSetDIDataXferMech = _stdcall_libraries['nicaiu'].DAQmxSetDIDataXferMech
DAQmxSetDIDataXferMech.restype = int32
# DAQmxSetDIDataXferMech(taskHandle, channel, data)
DAQmxSetDIDataXferMech.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2690
DAQmxResetDIDataXferMech = _stdcall_libraries['nicaiu'].DAQmxResetDIDataXferMech
DAQmxResetDIDataXferMech.restype = int32
# DAQmxResetDIDataXferMech(taskHandle, channel)
DAQmxResetDIDataXferMech.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2693
DAQmxGetDIDataXferReqCond = _stdcall_libraries['nicaiu'].DAQmxGetDIDataXferReqCond
DAQmxGetDIDataXferReqCond.restype = int32
# DAQmxGetDIDataXferReqCond(taskHandle, channel, data)
DAQmxGetDIDataXferReqCond.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2694
DAQmxSetDIDataXferReqCond = _stdcall_libraries['nicaiu'].DAQmxSetDIDataXferReqCond
DAQmxSetDIDataXferReqCond.restype = int32
# DAQmxSetDIDataXferReqCond(taskHandle, channel, data)
DAQmxSetDIDataXferReqCond.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2695
DAQmxResetDIDataXferReqCond = _stdcall_libraries['nicaiu'].DAQmxResetDIDataXferReqCond
DAQmxResetDIDataXferReqCond.restype = int32
# DAQmxResetDIDataXferReqCond(taskHandle, channel)
DAQmxResetDIDataXferReqCond.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2698
DAQmxGetDOOutputDriveType = _stdcall_libraries['nicaiu'].DAQmxGetDOOutputDriveType
DAQmxGetDOOutputDriveType.restype = int32
# DAQmxGetDOOutputDriveType(taskHandle, channel, data)
DAQmxGetDOOutputDriveType.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2699
DAQmxSetDOOutputDriveType = _stdcall_libraries['nicaiu'].DAQmxSetDOOutputDriveType
DAQmxSetDOOutputDriveType.restype = int32
# DAQmxSetDOOutputDriveType(taskHandle, channel, data)
DAQmxSetDOOutputDriveType.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2700
DAQmxResetDOOutputDriveType = _stdcall_libraries['nicaiu'].DAQmxResetDOOutputDriveType
DAQmxResetDOOutputDriveType.restype = int32
# DAQmxResetDOOutputDriveType(taskHandle, channel)
DAQmxResetDOOutputDriveType.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2702
DAQmxGetDOInvertLines = _stdcall_libraries['nicaiu'].DAQmxGetDOInvertLines
DAQmxGetDOInvertLines.restype = int32
# DAQmxGetDOInvertLines(taskHandle, channel, data)
DAQmxGetDOInvertLines.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2703
DAQmxSetDOInvertLines = _stdcall_libraries['nicaiu'].DAQmxSetDOInvertLines
DAQmxSetDOInvertLines.restype = int32
# DAQmxSetDOInvertLines(taskHandle, channel, data)
DAQmxSetDOInvertLines.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2704
DAQmxResetDOInvertLines = _stdcall_libraries['nicaiu'].DAQmxResetDOInvertLines
DAQmxResetDOInvertLines.restype = int32
# DAQmxResetDOInvertLines(taskHandle, channel)
DAQmxResetDOInvertLines.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2706
DAQmxGetDONumLines = _stdcall_libraries['nicaiu'].DAQmxGetDONumLines
DAQmxGetDONumLines.restype = int32
# DAQmxGetDONumLines(taskHandle, channel, data)
DAQmxGetDONumLines.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 2708
DAQmxGetDOTristate = _stdcall_libraries['nicaiu'].DAQmxGetDOTristate
DAQmxGetDOTristate.restype = int32
# DAQmxGetDOTristate(taskHandle, channel, data)
DAQmxGetDOTristate.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2709
DAQmxSetDOTristate = _stdcall_libraries['nicaiu'].DAQmxSetDOTristate
DAQmxSetDOTristate.restype = int32
# DAQmxSetDOTristate(taskHandle, channel, data)
DAQmxSetDOTristate.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2710
DAQmxResetDOTristate = _stdcall_libraries['nicaiu'].DAQmxResetDOTristate
DAQmxResetDOTristate.restype = int32
# DAQmxResetDOTristate(taskHandle, channel)
DAQmxResetDOTristate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2712
DAQmxGetDOUseOnlyOnBrdMem = _stdcall_libraries['nicaiu'].DAQmxGetDOUseOnlyOnBrdMem
DAQmxGetDOUseOnlyOnBrdMem.restype = int32
# DAQmxGetDOUseOnlyOnBrdMem(taskHandle, channel, data)
DAQmxGetDOUseOnlyOnBrdMem.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2713
DAQmxSetDOUseOnlyOnBrdMem = _stdcall_libraries['nicaiu'].DAQmxSetDOUseOnlyOnBrdMem
DAQmxSetDOUseOnlyOnBrdMem.restype = int32
# DAQmxSetDOUseOnlyOnBrdMem(taskHandle, channel, data)
DAQmxSetDOUseOnlyOnBrdMem.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2714
DAQmxResetDOUseOnlyOnBrdMem = _stdcall_libraries['nicaiu'].DAQmxResetDOUseOnlyOnBrdMem
DAQmxResetDOUseOnlyOnBrdMem.restype = int32
# DAQmxResetDOUseOnlyOnBrdMem(taskHandle, channel)
DAQmxResetDOUseOnlyOnBrdMem.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2717
DAQmxGetDODataXferMech = _stdcall_libraries['nicaiu'].DAQmxGetDODataXferMech
DAQmxGetDODataXferMech.restype = int32
# DAQmxGetDODataXferMech(taskHandle, channel, data)
DAQmxGetDODataXferMech.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2718
DAQmxSetDODataXferMech = _stdcall_libraries['nicaiu'].DAQmxSetDODataXferMech
DAQmxSetDODataXferMech.restype = int32
# DAQmxSetDODataXferMech(taskHandle, channel, data)
DAQmxSetDODataXferMech.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2719
DAQmxResetDODataXferMech = _stdcall_libraries['nicaiu'].DAQmxResetDODataXferMech
DAQmxResetDODataXferMech.restype = int32
# DAQmxResetDODataXferMech(taskHandle, channel)
DAQmxResetDODataXferMech.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2722
DAQmxGetDODataXferReqCond = _stdcall_libraries['nicaiu'].DAQmxGetDODataXferReqCond
DAQmxGetDODataXferReqCond.restype = int32
# DAQmxGetDODataXferReqCond(taskHandle, channel, data)
DAQmxGetDODataXferReqCond.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2723
DAQmxSetDODataXferReqCond = _stdcall_libraries['nicaiu'].DAQmxSetDODataXferReqCond
DAQmxSetDODataXferReqCond.restype = int32
# DAQmxSetDODataXferReqCond(taskHandle, channel, data)
DAQmxSetDODataXferReqCond.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2724
DAQmxResetDODataXferReqCond = _stdcall_libraries['nicaiu'].DAQmxResetDODataXferReqCond
DAQmxResetDODataXferReqCond.restype = int32
# DAQmxResetDODataXferReqCond(taskHandle, channel)
DAQmxResetDODataXferReqCond.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2726
DAQmxGetCIMax = _stdcall_libraries['nicaiu'].DAQmxGetCIMax
DAQmxGetCIMax.restype = int32
# DAQmxGetCIMax(taskHandle, channel, data)
DAQmxGetCIMax.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2727
DAQmxSetCIMax = _stdcall_libraries['nicaiu'].DAQmxSetCIMax
DAQmxSetCIMax.restype = int32
# DAQmxSetCIMax(taskHandle, channel, data)
DAQmxSetCIMax.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2728
DAQmxResetCIMax = _stdcall_libraries['nicaiu'].DAQmxResetCIMax
DAQmxResetCIMax.restype = int32
# DAQmxResetCIMax(taskHandle, channel)
DAQmxResetCIMax.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2730
DAQmxGetCIMin = _stdcall_libraries['nicaiu'].DAQmxGetCIMin
DAQmxGetCIMin.restype = int32
# DAQmxGetCIMin(taskHandle, channel, data)
DAQmxGetCIMin.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2731
DAQmxSetCIMin = _stdcall_libraries['nicaiu'].DAQmxSetCIMin
DAQmxSetCIMin.restype = int32
# DAQmxSetCIMin(taskHandle, channel, data)
DAQmxSetCIMin.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2732
DAQmxResetCIMin = _stdcall_libraries['nicaiu'].DAQmxResetCIMin
DAQmxResetCIMin.restype = int32
# DAQmxResetCIMin(taskHandle, channel)
DAQmxResetCIMin.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2734
DAQmxGetCICustomScaleName = _stdcall_libraries['nicaiu'].DAQmxGetCICustomScaleName
DAQmxGetCICustomScaleName.restype = int32
# DAQmxGetCICustomScaleName(taskHandle, channel, data, bufferSize)
DAQmxGetCICustomScaleName.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2735
DAQmxSetCICustomScaleName = _stdcall_libraries['nicaiu'].DAQmxSetCICustomScaleName
DAQmxSetCICustomScaleName.restype = int32
# DAQmxSetCICustomScaleName(taskHandle, channel, data)
DAQmxSetCICustomScaleName.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2736
DAQmxResetCICustomScaleName = _stdcall_libraries['nicaiu'].DAQmxResetCICustomScaleName
DAQmxResetCICustomScaleName.restype = int32
# DAQmxResetCICustomScaleName(taskHandle, channel)
DAQmxResetCICustomScaleName.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2739
DAQmxGetCIMeasType = _stdcall_libraries['nicaiu'].DAQmxGetCIMeasType
DAQmxGetCIMeasType.restype = int32
# DAQmxGetCIMeasType(taskHandle, channel, data)
DAQmxGetCIMeasType.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2742
DAQmxGetCIFreqUnits = _stdcall_libraries['nicaiu'].DAQmxGetCIFreqUnits
DAQmxGetCIFreqUnits.restype = int32
# DAQmxGetCIFreqUnits(taskHandle, channel, data)
DAQmxGetCIFreqUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2743
DAQmxSetCIFreqUnits = _stdcall_libraries['nicaiu'].DAQmxSetCIFreqUnits
DAQmxSetCIFreqUnits.restype = int32
# DAQmxSetCIFreqUnits(taskHandle, channel, data)
DAQmxSetCIFreqUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2744
DAQmxResetCIFreqUnits = _stdcall_libraries['nicaiu'].DAQmxResetCIFreqUnits
DAQmxResetCIFreqUnits.restype = int32
# DAQmxResetCIFreqUnits(taskHandle, channel)
DAQmxResetCIFreqUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2746
DAQmxGetCIFreqTerm = _stdcall_libraries['nicaiu'].DAQmxGetCIFreqTerm
DAQmxGetCIFreqTerm.restype = int32
# DAQmxGetCIFreqTerm(taskHandle, channel, data, bufferSize)
DAQmxGetCIFreqTerm.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2747
DAQmxSetCIFreqTerm = _stdcall_libraries['nicaiu'].DAQmxSetCIFreqTerm
DAQmxSetCIFreqTerm.restype = int32
# DAQmxSetCIFreqTerm(taskHandle, channel, data)
DAQmxSetCIFreqTerm.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2748
DAQmxResetCIFreqTerm = _stdcall_libraries['nicaiu'].DAQmxResetCIFreqTerm
DAQmxResetCIFreqTerm.restype = int32
# DAQmxResetCIFreqTerm(taskHandle, channel)
DAQmxResetCIFreqTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2751
DAQmxGetCIFreqStartingEdge = _stdcall_libraries['nicaiu'].DAQmxGetCIFreqStartingEdge
DAQmxGetCIFreqStartingEdge.restype = int32
# DAQmxGetCIFreqStartingEdge(taskHandle, channel, data)
DAQmxGetCIFreqStartingEdge.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2752
DAQmxSetCIFreqStartingEdge = _stdcall_libraries['nicaiu'].DAQmxSetCIFreqStartingEdge
DAQmxSetCIFreqStartingEdge.restype = int32
# DAQmxSetCIFreqStartingEdge(taskHandle, channel, data)
DAQmxSetCIFreqStartingEdge.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2753
DAQmxResetCIFreqStartingEdge = _stdcall_libraries['nicaiu'].DAQmxResetCIFreqStartingEdge
DAQmxResetCIFreqStartingEdge.restype = int32
# DAQmxResetCIFreqStartingEdge(taskHandle, channel)
DAQmxResetCIFreqStartingEdge.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2756
DAQmxGetCIFreqMeasMeth = _stdcall_libraries['nicaiu'].DAQmxGetCIFreqMeasMeth
DAQmxGetCIFreqMeasMeth.restype = int32
# DAQmxGetCIFreqMeasMeth(taskHandle, channel, data)
DAQmxGetCIFreqMeasMeth.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2757
DAQmxSetCIFreqMeasMeth = _stdcall_libraries['nicaiu'].DAQmxSetCIFreqMeasMeth
DAQmxSetCIFreqMeasMeth.restype = int32
# DAQmxSetCIFreqMeasMeth(taskHandle, channel, data)
DAQmxSetCIFreqMeasMeth.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2758
DAQmxResetCIFreqMeasMeth = _stdcall_libraries['nicaiu'].DAQmxResetCIFreqMeasMeth
DAQmxResetCIFreqMeasMeth.restype = int32
# DAQmxResetCIFreqMeasMeth(taskHandle, channel)
DAQmxResetCIFreqMeasMeth.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2760
DAQmxGetCIFreqMeasTime = _stdcall_libraries['nicaiu'].DAQmxGetCIFreqMeasTime
DAQmxGetCIFreqMeasTime.restype = int32
# DAQmxGetCIFreqMeasTime(taskHandle, channel, data)
DAQmxGetCIFreqMeasTime.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2761
DAQmxSetCIFreqMeasTime = _stdcall_libraries['nicaiu'].DAQmxSetCIFreqMeasTime
DAQmxSetCIFreqMeasTime.restype = int32
# DAQmxSetCIFreqMeasTime(taskHandle, channel, data)
DAQmxSetCIFreqMeasTime.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2762
DAQmxResetCIFreqMeasTime = _stdcall_libraries['nicaiu'].DAQmxResetCIFreqMeasTime
DAQmxResetCIFreqMeasTime.restype = int32
# DAQmxResetCIFreqMeasTime(taskHandle, channel)
DAQmxResetCIFreqMeasTime.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2764
DAQmxGetCIFreqDiv = _stdcall_libraries['nicaiu'].DAQmxGetCIFreqDiv
DAQmxGetCIFreqDiv.restype = int32
# DAQmxGetCIFreqDiv(taskHandle, channel, data)
DAQmxGetCIFreqDiv.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 2765
DAQmxSetCIFreqDiv = _stdcall_libraries['nicaiu'].DAQmxSetCIFreqDiv
DAQmxSetCIFreqDiv.restype = int32
# DAQmxSetCIFreqDiv(taskHandle, channel, data)
DAQmxSetCIFreqDiv.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 2766
DAQmxResetCIFreqDiv = _stdcall_libraries['nicaiu'].DAQmxResetCIFreqDiv
DAQmxResetCIFreqDiv.restype = int32
# DAQmxResetCIFreqDiv(taskHandle, channel)
DAQmxResetCIFreqDiv.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2768
DAQmxGetCIFreqDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetCIFreqDigFltrEnable
DAQmxGetCIFreqDigFltrEnable.restype = int32
# DAQmxGetCIFreqDigFltrEnable(taskHandle, channel, data)
DAQmxGetCIFreqDigFltrEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2769
DAQmxSetCIFreqDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetCIFreqDigFltrEnable
DAQmxSetCIFreqDigFltrEnable.restype = int32
# DAQmxSetCIFreqDigFltrEnable(taskHandle, channel, data)
DAQmxSetCIFreqDigFltrEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2770
DAQmxResetCIFreqDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetCIFreqDigFltrEnable
DAQmxResetCIFreqDigFltrEnable.restype = int32
# DAQmxResetCIFreqDigFltrEnable(taskHandle, channel)
DAQmxResetCIFreqDigFltrEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2772
DAQmxGetCIFreqDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetCIFreqDigFltrMinPulseWidth
DAQmxGetCIFreqDigFltrMinPulseWidth.restype = int32
# DAQmxGetCIFreqDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxGetCIFreqDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2773
DAQmxSetCIFreqDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetCIFreqDigFltrMinPulseWidth
DAQmxSetCIFreqDigFltrMinPulseWidth.restype = int32
# DAQmxSetCIFreqDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxSetCIFreqDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2774
DAQmxResetCIFreqDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetCIFreqDigFltrMinPulseWidth
DAQmxResetCIFreqDigFltrMinPulseWidth.restype = int32
# DAQmxResetCIFreqDigFltrMinPulseWidth(taskHandle, channel)
DAQmxResetCIFreqDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2776
DAQmxGetCIFreqDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetCIFreqDigFltrTimebaseSrc
DAQmxGetCIFreqDigFltrTimebaseSrc.restype = int32
# DAQmxGetCIFreqDigFltrTimebaseSrc(taskHandle, channel, data, bufferSize)
DAQmxGetCIFreqDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2777
DAQmxSetCIFreqDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetCIFreqDigFltrTimebaseSrc
DAQmxSetCIFreqDigFltrTimebaseSrc.restype = int32
# DAQmxSetCIFreqDigFltrTimebaseSrc(taskHandle, channel, data)
DAQmxSetCIFreqDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2778
DAQmxResetCIFreqDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetCIFreqDigFltrTimebaseSrc
DAQmxResetCIFreqDigFltrTimebaseSrc.restype = int32
# DAQmxResetCIFreqDigFltrTimebaseSrc(taskHandle, channel)
DAQmxResetCIFreqDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2780
DAQmxGetCIFreqDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetCIFreqDigFltrTimebaseRate
DAQmxGetCIFreqDigFltrTimebaseRate.restype = int32
# DAQmxGetCIFreqDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxGetCIFreqDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2781
DAQmxSetCIFreqDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetCIFreqDigFltrTimebaseRate
DAQmxSetCIFreqDigFltrTimebaseRate.restype = int32
# DAQmxSetCIFreqDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxSetCIFreqDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2782
DAQmxResetCIFreqDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetCIFreqDigFltrTimebaseRate
DAQmxResetCIFreqDigFltrTimebaseRate.restype = int32
# DAQmxResetCIFreqDigFltrTimebaseRate(taskHandle, channel)
DAQmxResetCIFreqDigFltrTimebaseRate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2784
DAQmxGetCIFreqDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetCIFreqDigSyncEnable
DAQmxGetCIFreqDigSyncEnable.restype = int32
# DAQmxGetCIFreqDigSyncEnable(taskHandle, channel, data)
DAQmxGetCIFreqDigSyncEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2785
DAQmxSetCIFreqDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetCIFreqDigSyncEnable
DAQmxSetCIFreqDigSyncEnable.restype = int32
# DAQmxSetCIFreqDigSyncEnable(taskHandle, channel, data)
DAQmxSetCIFreqDigSyncEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2786
DAQmxResetCIFreqDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetCIFreqDigSyncEnable
DAQmxResetCIFreqDigSyncEnable.restype = int32
# DAQmxResetCIFreqDigSyncEnable(taskHandle, channel)
DAQmxResetCIFreqDigSyncEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2789
DAQmxGetCIPeriodUnits = _stdcall_libraries['nicaiu'].DAQmxGetCIPeriodUnits
DAQmxGetCIPeriodUnits.restype = int32
# DAQmxGetCIPeriodUnits(taskHandle, channel, data)
DAQmxGetCIPeriodUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2790
DAQmxSetCIPeriodUnits = _stdcall_libraries['nicaiu'].DAQmxSetCIPeriodUnits
DAQmxSetCIPeriodUnits.restype = int32
# DAQmxSetCIPeriodUnits(taskHandle, channel, data)
DAQmxSetCIPeriodUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2791
DAQmxResetCIPeriodUnits = _stdcall_libraries['nicaiu'].DAQmxResetCIPeriodUnits
DAQmxResetCIPeriodUnits.restype = int32
# DAQmxResetCIPeriodUnits(taskHandle, channel)
DAQmxResetCIPeriodUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2793
DAQmxGetCIPeriodTerm = _stdcall_libraries['nicaiu'].DAQmxGetCIPeriodTerm
DAQmxGetCIPeriodTerm.restype = int32
# DAQmxGetCIPeriodTerm(taskHandle, channel, data, bufferSize)
DAQmxGetCIPeriodTerm.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2794
DAQmxSetCIPeriodTerm = _stdcall_libraries['nicaiu'].DAQmxSetCIPeriodTerm
DAQmxSetCIPeriodTerm.restype = int32
# DAQmxSetCIPeriodTerm(taskHandle, channel, data)
DAQmxSetCIPeriodTerm.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2795
DAQmxResetCIPeriodTerm = _stdcall_libraries['nicaiu'].DAQmxResetCIPeriodTerm
DAQmxResetCIPeriodTerm.restype = int32
# DAQmxResetCIPeriodTerm(taskHandle, channel)
DAQmxResetCIPeriodTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2798
DAQmxGetCIPeriodStartingEdge = _stdcall_libraries['nicaiu'].DAQmxGetCIPeriodStartingEdge
DAQmxGetCIPeriodStartingEdge.restype = int32
# DAQmxGetCIPeriodStartingEdge(taskHandle, channel, data)
DAQmxGetCIPeriodStartingEdge.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2799
DAQmxSetCIPeriodStartingEdge = _stdcall_libraries['nicaiu'].DAQmxSetCIPeriodStartingEdge
DAQmxSetCIPeriodStartingEdge.restype = int32
# DAQmxSetCIPeriodStartingEdge(taskHandle, channel, data)
DAQmxSetCIPeriodStartingEdge.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2800
DAQmxResetCIPeriodStartingEdge = _stdcall_libraries['nicaiu'].DAQmxResetCIPeriodStartingEdge
DAQmxResetCIPeriodStartingEdge.restype = int32
# DAQmxResetCIPeriodStartingEdge(taskHandle, channel)
DAQmxResetCIPeriodStartingEdge.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2803
DAQmxGetCIPeriodMeasMeth = _stdcall_libraries['nicaiu'].DAQmxGetCIPeriodMeasMeth
DAQmxGetCIPeriodMeasMeth.restype = int32
# DAQmxGetCIPeriodMeasMeth(taskHandle, channel, data)
DAQmxGetCIPeriodMeasMeth.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2804
DAQmxSetCIPeriodMeasMeth = _stdcall_libraries['nicaiu'].DAQmxSetCIPeriodMeasMeth
DAQmxSetCIPeriodMeasMeth.restype = int32
# DAQmxSetCIPeriodMeasMeth(taskHandle, channel, data)
DAQmxSetCIPeriodMeasMeth.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2805
DAQmxResetCIPeriodMeasMeth = _stdcall_libraries['nicaiu'].DAQmxResetCIPeriodMeasMeth
DAQmxResetCIPeriodMeasMeth.restype = int32
# DAQmxResetCIPeriodMeasMeth(taskHandle, channel)
DAQmxResetCIPeriodMeasMeth.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2807
DAQmxGetCIPeriodMeasTime = _stdcall_libraries['nicaiu'].DAQmxGetCIPeriodMeasTime
DAQmxGetCIPeriodMeasTime.restype = int32
# DAQmxGetCIPeriodMeasTime(taskHandle, channel, data)
DAQmxGetCIPeriodMeasTime.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2808
DAQmxSetCIPeriodMeasTime = _stdcall_libraries['nicaiu'].DAQmxSetCIPeriodMeasTime
DAQmxSetCIPeriodMeasTime.restype = int32
# DAQmxSetCIPeriodMeasTime(taskHandle, channel, data)
DAQmxSetCIPeriodMeasTime.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2809
DAQmxResetCIPeriodMeasTime = _stdcall_libraries['nicaiu'].DAQmxResetCIPeriodMeasTime
DAQmxResetCIPeriodMeasTime.restype = int32
# DAQmxResetCIPeriodMeasTime(taskHandle, channel)
DAQmxResetCIPeriodMeasTime.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2811
DAQmxGetCIPeriodDiv = _stdcall_libraries['nicaiu'].DAQmxGetCIPeriodDiv
DAQmxGetCIPeriodDiv.restype = int32
# DAQmxGetCIPeriodDiv(taskHandle, channel, data)
DAQmxGetCIPeriodDiv.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 2812
DAQmxSetCIPeriodDiv = _stdcall_libraries['nicaiu'].DAQmxSetCIPeriodDiv
DAQmxSetCIPeriodDiv.restype = int32
# DAQmxSetCIPeriodDiv(taskHandle, channel, data)
DAQmxSetCIPeriodDiv.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 2813
DAQmxResetCIPeriodDiv = _stdcall_libraries['nicaiu'].DAQmxResetCIPeriodDiv
DAQmxResetCIPeriodDiv.restype = int32
# DAQmxResetCIPeriodDiv(taskHandle, channel)
DAQmxResetCIPeriodDiv.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2815
DAQmxGetCIPeriodDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetCIPeriodDigFltrEnable
DAQmxGetCIPeriodDigFltrEnable.restype = int32
# DAQmxGetCIPeriodDigFltrEnable(taskHandle, channel, data)
DAQmxGetCIPeriodDigFltrEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2816
DAQmxSetCIPeriodDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetCIPeriodDigFltrEnable
DAQmxSetCIPeriodDigFltrEnable.restype = int32
# DAQmxSetCIPeriodDigFltrEnable(taskHandle, channel, data)
DAQmxSetCIPeriodDigFltrEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2817
DAQmxResetCIPeriodDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetCIPeriodDigFltrEnable
DAQmxResetCIPeriodDigFltrEnable.restype = int32
# DAQmxResetCIPeriodDigFltrEnable(taskHandle, channel)
DAQmxResetCIPeriodDigFltrEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2819
DAQmxGetCIPeriodDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetCIPeriodDigFltrMinPulseWidth
DAQmxGetCIPeriodDigFltrMinPulseWidth.restype = int32
# DAQmxGetCIPeriodDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxGetCIPeriodDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2820
DAQmxSetCIPeriodDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetCIPeriodDigFltrMinPulseWidth
DAQmxSetCIPeriodDigFltrMinPulseWidth.restype = int32
# DAQmxSetCIPeriodDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxSetCIPeriodDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2821
DAQmxResetCIPeriodDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetCIPeriodDigFltrMinPulseWidth
DAQmxResetCIPeriodDigFltrMinPulseWidth.restype = int32
# DAQmxResetCIPeriodDigFltrMinPulseWidth(taskHandle, channel)
DAQmxResetCIPeriodDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2823
DAQmxGetCIPeriodDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetCIPeriodDigFltrTimebaseSrc
DAQmxGetCIPeriodDigFltrTimebaseSrc.restype = int32
# DAQmxGetCIPeriodDigFltrTimebaseSrc(taskHandle, channel, data, bufferSize)
DAQmxGetCIPeriodDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2824
DAQmxSetCIPeriodDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetCIPeriodDigFltrTimebaseSrc
DAQmxSetCIPeriodDigFltrTimebaseSrc.restype = int32
# DAQmxSetCIPeriodDigFltrTimebaseSrc(taskHandle, channel, data)
DAQmxSetCIPeriodDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2825
DAQmxResetCIPeriodDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetCIPeriodDigFltrTimebaseSrc
DAQmxResetCIPeriodDigFltrTimebaseSrc.restype = int32
# DAQmxResetCIPeriodDigFltrTimebaseSrc(taskHandle, channel)
DAQmxResetCIPeriodDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2827
DAQmxGetCIPeriodDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetCIPeriodDigFltrTimebaseRate
DAQmxGetCIPeriodDigFltrTimebaseRate.restype = int32
# DAQmxGetCIPeriodDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxGetCIPeriodDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2828
DAQmxSetCIPeriodDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetCIPeriodDigFltrTimebaseRate
DAQmxSetCIPeriodDigFltrTimebaseRate.restype = int32
# DAQmxSetCIPeriodDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxSetCIPeriodDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2829
DAQmxResetCIPeriodDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetCIPeriodDigFltrTimebaseRate
DAQmxResetCIPeriodDigFltrTimebaseRate.restype = int32
# DAQmxResetCIPeriodDigFltrTimebaseRate(taskHandle, channel)
DAQmxResetCIPeriodDigFltrTimebaseRate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2831
DAQmxGetCIPeriodDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetCIPeriodDigSyncEnable
DAQmxGetCIPeriodDigSyncEnable.restype = int32
# DAQmxGetCIPeriodDigSyncEnable(taskHandle, channel, data)
DAQmxGetCIPeriodDigSyncEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2832
DAQmxSetCIPeriodDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetCIPeriodDigSyncEnable
DAQmxSetCIPeriodDigSyncEnable.restype = int32
# DAQmxSetCIPeriodDigSyncEnable(taskHandle, channel, data)
DAQmxSetCIPeriodDigSyncEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2833
DAQmxResetCIPeriodDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetCIPeriodDigSyncEnable
DAQmxResetCIPeriodDigSyncEnable.restype = int32
# DAQmxResetCIPeriodDigSyncEnable(taskHandle, channel)
DAQmxResetCIPeriodDigSyncEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2835
DAQmxGetCICountEdgesTerm = _stdcall_libraries['nicaiu'].DAQmxGetCICountEdgesTerm
DAQmxGetCICountEdgesTerm.restype = int32
# DAQmxGetCICountEdgesTerm(taskHandle, channel, data, bufferSize)
DAQmxGetCICountEdgesTerm.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2836
DAQmxSetCICountEdgesTerm = _stdcall_libraries['nicaiu'].DAQmxSetCICountEdgesTerm
DAQmxSetCICountEdgesTerm.restype = int32
# DAQmxSetCICountEdgesTerm(taskHandle, channel, data)
DAQmxSetCICountEdgesTerm.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2837
DAQmxResetCICountEdgesTerm = _stdcall_libraries['nicaiu'].DAQmxResetCICountEdgesTerm
DAQmxResetCICountEdgesTerm.restype = int32
# DAQmxResetCICountEdgesTerm(taskHandle, channel)
DAQmxResetCICountEdgesTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2840
DAQmxGetCICountEdgesDir = _stdcall_libraries['nicaiu'].DAQmxGetCICountEdgesDir
DAQmxGetCICountEdgesDir.restype = int32
# DAQmxGetCICountEdgesDir(taskHandle, channel, data)
DAQmxGetCICountEdgesDir.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2841
DAQmxSetCICountEdgesDir = _stdcall_libraries['nicaiu'].DAQmxSetCICountEdgesDir
DAQmxSetCICountEdgesDir.restype = int32
# DAQmxSetCICountEdgesDir(taskHandle, channel, data)
DAQmxSetCICountEdgesDir.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2842
DAQmxResetCICountEdgesDir = _stdcall_libraries['nicaiu'].DAQmxResetCICountEdgesDir
DAQmxResetCICountEdgesDir.restype = int32
# DAQmxResetCICountEdgesDir(taskHandle, channel)
DAQmxResetCICountEdgesDir.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2844
DAQmxGetCICountEdgesDirTerm = _stdcall_libraries['nicaiu'].DAQmxGetCICountEdgesDirTerm
DAQmxGetCICountEdgesDirTerm.restype = int32
# DAQmxGetCICountEdgesDirTerm(taskHandle, channel, data, bufferSize)
DAQmxGetCICountEdgesDirTerm.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2845
DAQmxSetCICountEdgesDirTerm = _stdcall_libraries['nicaiu'].DAQmxSetCICountEdgesDirTerm
DAQmxSetCICountEdgesDirTerm.restype = int32
# DAQmxSetCICountEdgesDirTerm(taskHandle, channel, data)
DAQmxSetCICountEdgesDirTerm.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2846
DAQmxResetCICountEdgesDirTerm = _stdcall_libraries['nicaiu'].DAQmxResetCICountEdgesDirTerm
DAQmxResetCICountEdgesDirTerm.restype = int32
# DAQmxResetCICountEdgesDirTerm(taskHandle, channel)
DAQmxResetCICountEdgesDirTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2848
DAQmxGetCICountEdgesCountDirDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetCICountEdgesCountDirDigFltrEnable
DAQmxGetCICountEdgesCountDirDigFltrEnable.restype = int32
# DAQmxGetCICountEdgesCountDirDigFltrEnable(taskHandle, channel, data)
DAQmxGetCICountEdgesCountDirDigFltrEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2849
DAQmxSetCICountEdgesCountDirDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetCICountEdgesCountDirDigFltrEnable
DAQmxSetCICountEdgesCountDirDigFltrEnable.restype = int32
# DAQmxSetCICountEdgesCountDirDigFltrEnable(taskHandle, channel, data)
DAQmxSetCICountEdgesCountDirDigFltrEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2850
DAQmxResetCICountEdgesCountDirDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetCICountEdgesCountDirDigFltrEnable
DAQmxResetCICountEdgesCountDirDigFltrEnable.restype = int32
# DAQmxResetCICountEdgesCountDirDigFltrEnable(taskHandle, channel)
DAQmxResetCICountEdgesCountDirDigFltrEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2852
DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth
DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth.restype = int32
# DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2853
DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth
DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth.restype = int32
# DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2854
DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth
DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth.restype = int32
# DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth(taskHandle, channel)
DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2856
DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc
DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc.restype = int32
# DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc(taskHandle, channel, data, bufferSize)
DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2857
DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc
DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc.restype = int32
# DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc(taskHandle, channel, data)
DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2858
DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc
DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc.restype = int32
# DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc(taskHandle, channel)
DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2860
DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate
DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate.restype = int32
# DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2861
DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate
DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate.restype = int32
# DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2862
DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate
DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate.restype = int32
# DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate(taskHandle, channel)
DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2864
DAQmxGetCICountEdgesCountDirDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetCICountEdgesCountDirDigSyncEnable
DAQmxGetCICountEdgesCountDirDigSyncEnable.restype = int32
# DAQmxGetCICountEdgesCountDirDigSyncEnable(taskHandle, channel, data)
DAQmxGetCICountEdgesCountDirDigSyncEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2865
DAQmxSetCICountEdgesCountDirDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetCICountEdgesCountDirDigSyncEnable
DAQmxSetCICountEdgesCountDirDigSyncEnable.restype = int32
# DAQmxSetCICountEdgesCountDirDigSyncEnable(taskHandle, channel, data)
DAQmxSetCICountEdgesCountDirDigSyncEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2866
DAQmxResetCICountEdgesCountDirDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetCICountEdgesCountDirDigSyncEnable
DAQmxResetCICountEdgesCountDirDigSyncEnable.restype = int32
# DAQmxResetCICountEdgesCountDirDigSyncEnable(taskHandle, channel)
DAQmxResetCICountEdgesCountDirDigSyncEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2868
DAQmxGetCICountEdgesInitialCnt = _stdcall_libraries['nicaiu'].DAQmxGetCICountEdgesInitialCnt
DAQmxGetCICountEdgesInitialCnt.restype = int32
# DAQmxGetCICountEdgesInitialCnt(taskHandle, channel, data)
DAQmxGetCICountEdgesInitialCnt.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 2869
DAQmxSetCICountEdgesInitialCnt = _stdcall_libraries['nicaiu'].DAQmxSetCICountEdgesInitialCnt
DAQmxSetCICountEdgesInitialCnt.restype = int32
# DAQmxSetCICountEdgesInitialCnt(taskHandle, channel, data)
DAQmxSetCICountEdgesInitialCnt.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 2870
DAQmxResetCICountEdgesInitialCnt = _stdcall_libraries['nicaiu'].DAQmxResetCICountEdgesInitialCnt
DAQmxResetCICountEdgesInitialCnt.restype = int32
# DAQmxResetCICountEdgesInitialCnt(taskHandle, channel)
DAQmxResetCICountEdgesInitialCnt.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2873
DAQmxGetCICountEdgesActiveEdge = _stdcall_libraries['nicaiu'].DAQmxGetCICountEdgesActiveEdge
DAQmxGetCICountEdgesActiveEdge.restype = int32
# DAQmxGetCICountEdgesActiveEdge(taskHandle, channel, data)
DAQmxGetCICountEdgesActiveEdge.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2874
DAQmxSetCICountEdgesActiveEdge = _stdcall_libraries['nicaiu'].DAQmxSetCICountEdgesActiveEdge
DAQmxSetCICountEdgesActiveEdge.restype = int32
# DAQmxSetCICountEdgesActiveEdge(taskHandle, channel, data)
DAQmxSetCICountEdgesActiveEdge.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2875
DAQmxResetCICountEdgesActiveEdge = _stdcall_libraries['nicaiu'].DAQmxResetCICountEdgesActiveEdge
DAQmxResetCICountEdgesActiveEdge.restype = int32
# DAQmxResetCICountEdgesActiveEdge(taskHandle, channel)
DAQmxResetCICountEdgesActiveEdge.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2877
DAQmxGetCICountEdgesDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetCICountEdgesDigFltrEnable
DAQmxGetCICountEdgesDigFltrEnable.restype = int32
# DAQmxGetCICountEdgesDigFltrEnable(taskHandle, channel, data)
DAQmxGetCICountEdgesDigFltrEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2878
DAQmxSetCICountEdgesDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetCICountEdgesDigFltrEnable
DAQmxSetCICountEdgesDigFltrEnable.restype = int32
# DAQmxSetCICountEdgesDigFltrEnable(taskHandle, channel, data)
DAQmxSetCICountEdgesDigFltrEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2879
DAQmxResetCICountEdgesDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetCICountEdgesDigFltrEnable
DAQmxResetCICountEdgesDigFltrEnable.restype = int32
# DAQmxResetCICountEdgesDigFltrEnable(taskHandle, channel)
DAQmxResetCICountEdgesDigFltrEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2881
DAQmxGetCICountEdgesDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetCICountEdgesDigFltrMinPulseWidth
DAQmxGetCICountEdgesDigFltrMinPulseWidth.restype = int32
# DAQmxGetCICountEdgesDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxGetCICountEdgesDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2882
DAQmxSetCICountEdgesDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetCICountEdgesDigFltrMinPulseWidth
DAQmxSetCICountEdgesDigFltrMinPulseWidth.restype = int32
# DAQmxSetCICountEdgesDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxSetCICountEdgesDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2883
DAQmxResetCICountEdgesDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetCICountEdgesDigFltrMinPulseWidth
DAQmxResetCICountEdgesDigFltrMinPulseWidth.restype = int32
# DAQmxResetCICountEdgesDigFltrMinPulseWidth(taskHandle, channel)
DAQmxResetCICountEdgesDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2885
DAQmxGetCICountEdgesDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetCICountEdgesDigFltrTimebaseSrc
DAQmxGetCICountEdgesDigFltrTimebaseSrc.restype = int32
# DAQmxGetCICountEdgesDigFltrTimebaseSrc(taskHandle, channel, data, bufferSize)
DAQmxGetCICountEdgesDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2886
DAQmxSetCICountEdgesDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetCICountEdgesDigFltrTimebaseSrc
DAQmxSetCICountEdgesDigFltrTimebaseSrc.restype = int32
# DAQmxSetCICountEdgesDigFltrTimebaseSrc(taskHandle, channel, data)
DAQmxSetCICountEdgesDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2887
DAQmxResetCICountEdgesDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetCICountEdgesDigFltrTimebaseSrc
DAQmxResetCICountEdgesDigFltrTimebaseSrc.restype = int32
# DAQmxResetCICountEdgesDigFltrTimebaseSrc(taskHandle, channel)
DAQmxResetCICountEdgesDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2889
DAQmxGetCICountEdgesDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetCICountEdgesDigFltrTimebaseRate
DAQmxGetCICountEdgesDigFltrTimebaseRate.restype = int32
# DAQmxGetCICountEdgesDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxGetCICountEdgesDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2890
DAQmxSetCICountEdgesDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetCICountEdgesDigFltrTimebaseRate
DAQmxSetCICountEdgesDigFltrTimebaseRate.restype = int32
# DAQmxSetCICountEdgesDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxSetCICountEdgesDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2891
DAQmxResetCICountEdgesDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetCICountEdgesDigFltrTimebaseRate
DAQmxResetCICountEdgesDigFltrTimebaseRate.restype = int32
# DAQmxResetCICountEdgesDigFltrTimebaseRate(taskHandle, channel)
DAQmxResetCICountEdgesDigFltrTimebaseRate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2893
DAQmxGetCICountEdgesDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetCICountEdgesDigSyncEnable
DAQmxGetCICountEdgesDigSyncEnable.restype = int32
# DAQmxGetCICountEdgesDigSyncEnable(taskHandle, channel, data)
DAQmxGetCICountEdgesDigSyncEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2894
DAQmxSetCICountEdgesDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetCICountEdgesDigSyncEnable
DAQmxSetCICountEdgesDigSyncEnable.restype = int32
# DAQmxSetCICountEdgesDigSyncEnable(taskHandle, channel, data)
DAQmxSetCICountEdgesDigSyncEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2895
DAQmxResetCICountEdgesDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetCICountEdgesDigSyncEnable
DAQmxResetCICountEdgesDigSyncEnable.restype = int32
# DAQmxResetCICountEdgesDigSyncEnable(taskHandle, channel)
DAQmxResetCICountEdgesDigSyncEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2898
DAQmxGetCIAngEncoderUnits = _stdcall_libraries['nicaiu'].DAQmxGetCIAngEncoderUnits
DAQmxGetCIAngEncoderUnits.restype = int32
# DAQmxGetCIAngEncoderUnits(taskHandle, channel, data)
DAQmxGetCIAngEncoderUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2899
DAQmxSetCIAngEncoderUnits = _stdcall_libraries['nicaiu'].DAQmxSetCIAngEncoderUnits
DAQmxSetCIAngEncoderUnits.restype = int32
# DAQmxSetCIAngEncoderUnits(taskHandle, channel, data)
DAQmxSetCIAngEncoderUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2900
DAQmxResetCIAngEncoderUnits = _stdcall_libraries['nicaiu'].DAQmxResetCIAngEncoderUnits
DAQmxResetCIAngEncoderUnits.restype = int32
# DAQmxResetCIAngEncoderUnits(taskHandle, channel)
DAQmxResetCIAngEncoderUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2902
DAQmxGetCIAngEncoderPulsesPerRev = _stdcall_libraries['nicaiu'].DAQmxGetCIAngEncoderPulsesPerRev
DAQmxGetCIAngEncoderPulsesPerRev.restype = int32
# DAQmxGetCIAngEncoderPulsesPerRev(taskHandle, channel, data)
DAQmxGetCIAngEncoderPulsesPerRev.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 2903
DAQmxSetCIAngEncoderPulsesPerRev = _stdcall_libraries['nicaiu'].DAQmxSetCIAngEncoderPulsesPerRev
DAQmxSetCIAngEncoderPulsesPerRev.restype = int32
# DAQmxSetCIAngEncoderPulsesPerRev(taskHandle, channel, data)
DAQmxSetCIAngEncoderPulsesPerRev.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 2904
DAQmxResetCIAngEncoderPulsesPerRev = _stdcall_libraries['nicaiu'].DAQmxResetCIAngEncoderPulsesPerRev
DAQmxResetCIAngEncoderPulsesPerRev.restype = int32
# DAQmxResetCIAngEncoderPulsesPerRev(taskHandle, channel)
DAQmxResetCIAngEncoderPulsesPerRev.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2906
DAQmxGetCIAngEncoderInitialAngle = _stdcall_libraries['nicaiu'].DAQmxGetCIAngEncoderInitialAngle
DAQmxGetCIAngEncoderInitialAngle.restype = int32
# DAQmxGetCIAngEncoderInitialAngle(taskHandle, channel, data)
DAQmxGetCIAngEncoderInitialAngle.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2907
DAQmxSetCIAngEncoderInitialAngle = _stdcall_libraries['nicaiu'].DAQmxSetCIAngEncoderInitialAngle
DAQmxSetCIAngEncoderInitialAngle.restype = int32
# DAQmxSetCIAngEncoderInitialAngle(taskHandle, channel, data)
DAQmxSetCIAngEncoderInitialAngle.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2908
DAQmxResetCIAngEncoderInitialAngle = _stdcall_libraries['nicaiu'].DAQmxResetCIAngEncoderInitialAngle
DAQmxResetCIAngEncoderInitialAngle.restype = int32
# DAQmxResetCIAngEncoderInitialAngle(taskHandle, channel)
DAQmxResetCIAngEncoderInitialAngle.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2911
DAQmxGetCILinEncoderUnits = _stdcall_libraries['nicaiu'].DAQmxGetCILinEncoderUnits
DAQmxGetCILinEncoderUnits.restype = int32
# DAQmxGetCILinEncoderUnits(taskHandle, channel, data)
DAQmxGetCILinEncoderUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2912
DAQmxSetCILinEncoderUnits = _stdcall_libraries['nicaiu'].DAQmxSetCILinEncoderUnits
DAQmxSetCILinEncoderUnits.restype = int32
# DAQmxSetCILinEncoderUnits(taskHandle, channel, data)
DAQmxSetCILinEncoderUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2913
DAQmxResetCILinEncoderUnits = _stdcall_libraries['nicaiu'].DAQmxResetCILinEncoderUnits
DAQmxResetCILinEncoderUnits.restype = int32
# DAQmxResetCILinEncoderUnits(taskHandle, channel)
DAQmxResetCILinEncoderUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2915
DAQmxGetCILinEncoderDistPerPulse = _stdcall_libraries['nicaiu'].DAQmxGetCILinEncoderDistPerPulse
DAQmxGetCILinEncoderDistPerPulse.restype = int32
# DAQmxGetCILinEncoderDistPerPulse(taskHandle, channel, data)
DAQmxGetCILinEncoderDistPerPulse.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2916
DAQmxSetCILinEncoderDistPerPulse = _stdcall_libraries['nicaiu'].DAQmxSetCILinEncoderDistPerPulse
DAQmxSetCILinEncoderDistPerPulse.restype = int32
# DAQmxSetCILinEncoderDistPerPulse(taskHandle, channel, data)
DAQmxSetCILinEncoderDistPerPulse.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2917
DAQmxResetCILinEncoderDistPerPulse = _stdcall_libraries['nicaiu'].DAQmxResetCILinEncoderDistPerPulse
DAQmxResetCILinEncoderDistPerPulse.restype = int32
# DAQmxResetCILinEncoderDistPerPulse(taskHandle, channel)
DAQmxResetCILinEncoderDistPerPulse.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2919
DAQmxGetCILinEncoderInitialPos = _stdcall_libraries['nicaiu'].DAQmxGetCILinEncoderInitialPos
DAQmxGetCILinEncoderInitialPos.restype = int32
# DAQmxGetCILinEncoderInitialPos(taskHandle, channel, data)
DAQmxGetCILinEncoderInitialPos.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2920
DAQmxSetCILinEncoderInitialPos = _stdcall_libraries['nicaiu'].DAQmxSetCILinEncoderInitialPos
DAQmxSetCILinEncoderInitialPos.restype = int32
# DAQmxSetCILinEncoderInitialPos(taskHandle, channel, data)
DAQmxSetCILinEncoderInitialPos.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2921
DAQmxResetCILinEncoderInitialPos = _stdcall_libraries['nicaiu'].DAQmxResetCILinEncoderInitialPos
DAQmxResetCILinEncoderInitialPos.restype = int32
# DAQmxResetCILinEncoderInitialPos(taskHandle, channel)
DAQmxResetCILinEncoderInitialPos.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2924
DAQmxGetCIEncoderDecodingType = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderDecodingType
DAQmxGetCIEncoderDecodingType.restype = int32
# DAQmxGetCIEncoderDecodingType(taskHandle, channel, data)
DAQmxGetCIEncoderDecodingType.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 2925
DAQmxSetCIEncoderDecodingType = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderDecodingType
DAQmxSetCIEncoderDecodingType.restype = int32
# DAQmxSetCIEncoderDecodingType(taskHandle, channel, data)
DAQmxSetCIEncoderDecodingType.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 2926
DAQmxResetCIEncoderDecodingType = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderDecodingType
DAQmxResetCIEncoderDecodingType.restype = int32
# DAQmxResetCIEncoderDecodingType(taskHandle, channel)
DAQmxResetCIEncoderDecodingType.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2928
DAQmxGetCIEncoderAInputTerm = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderAInputTerm
DAQmxGetCIEncoderAInputTerm.restype = int32
# DAQmxGetCIEncoderAInputTerm(taskHandle, channel, data, bufferSize)
DAQmxGetCIEncoderAInputTerm.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2929
DAQmxSetCIEncoderAInputTerm = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderAInputTerm
DAQmxSetCIEncoderAInputTerm.restype = int32
# DAQmxSetCIEncoderAInputTerm(taskHandle, channel, data)
DAQmxSetCIEncoderAInputTerm.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2930
DAQmxResetCIEncoderAInputTerm = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderAInputTerm
DAQmxResetCIEncoderAInputTerm.restype = int32
# DAQmxResetCIEncoderAInputTerm(taskHandle, channel)
DAQmxResetCIEncoderAInputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2932
DAQmxGetCIEncoderAInputDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderAInputDigFltrEnable
DAQmxGetCIEncoderAInputDigFltrEnable.restype = int32
# DAQmxGetCIEncoderAInputDigFltrEnable(taskHandle, channel, data)
DAQmxGetCIEncoderAInputDigFltrEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2933
DAQmxSetCIEncoderAInputDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderAInputDigFltrEnable
DAQmxSetCIEncoderAInputDigFltrEnable.restype = int32
# DAQmxSetCIEncoderAInputDigFltrEnable(taskHandle, channel, data)
DAQmxSetCIEncoderAInputDigFltrEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2934
DAQmxResetCIEncoderAInputDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderAInputDigFltrEnable
DAQmxResetCIEncoderAInputDigFltrEnable.restype = int32
# DAQmxResetCIEncoderAInputDigFltrEnable(taskHandle, channel)
DAQmxResetCIEncoderAInputDigFltrEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2936
DAQmxGetCIEncoderAInputDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderAInputDigFltrMinPulseWidth
DAQmxGetCIEncoderAInputDigFltrMinPulseWidth.restype = int32
# DAQmxGetCIEncoderAInputDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxGetCIEncoderAInputDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2937
DAQmxSetCIEncoderAInputDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderAInputDigFltrMinPulseWidth
DAQmxSetCIEncoderAInputDigFltrMinPulseWidth.restype = int32
# DAQmxSetCIEncoderAInputDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxSetCIEncoderAInputDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2938
DAQmxResetCIEncoderAInputDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderAInputDigFltrMinPulseWidth
DAQmxResetCIEncoderAInputDigFltrMinPulseWidth.restype = int32
# DAQmxResetCIEncoderAInputDigFltrMinPulseWidth(taskHandle, channel)
DAQmxResetCIEncoderAInputDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2940
DAQmxGetCIEncoderAInputDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderAInputDigFltrTimebaseSrc
DAQmxGetCIEncoderAInputDigFltrTimebaseSrc.restype = int32
# DAQmxGetCIEncoderAInputDigFltrTimebaseSrc(taskHandle, channel, data, bufferSize)
DAQmxGetCIEncoderAInputDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2941
DAQmxSetCIEncoderAInputDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderAInputDigFltrTimebaseSrc
DAQmxSetCIEncoderAInputDigFltrTimebaseSrc.restype = int32
# DAQmxSetCIEncoderAInputDigFltrTimebaseSrc(taskHandle, channel, data)
DAQmxSetCIEncoderAInputDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2942
DAQmxResetCIEncoderAInputDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderAInputDigFltrTimebaseSrc
DAQmxResetCIEncoderAInputDigFltrTimebaseSrc.restype = int32
# DAQmxResetCIEncoderAInputDigFltrTimebaseSrc(taskHandle, channel)
DAQmxResetCIEncoderAInputDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2944
DAQmxGetCIEncoderAInputDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderAInputDigFltrTimebaseRate
DAQmxGetCIEncoderAInputDigFltrTimebaseRate.restype = int32
# DAQmxGetCIEncoderAInputDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxGetCIEncoderAInputDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2945
DAQmxSetCIEncoderAInputDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderAInputDigFltrTimebaseRate
DAQmxSetCIEncoderAInputDigFltrTimebaseRate.restype = int32
# DAQmxSetCIEncoderAInputDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxSetCIEncoderAInputDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2946
DAQmxResetCIEncoderAInputDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderAInputDigFltrTimebaseRate
DAQmxResetCIEncoderAInputDigFltrTimebaseRate.restype = int32
# DAQmxResetCIEncoderAInputDigFltrTimebaseRate(taskHandle, channel)
DAQmxResetCIEncoderAInputDigFltrTimebaseRate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2948
DAQmxGetCIEncoderAInputDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderAInputDigSyncEnable
DAQmxGetCIEncoderAInputDigSyncEnable.restype = int32
# DAQmxGetCIEncoderAInputDigSyncEnable(taskHandle, channel, data)
DAQmxGetCIEncoderAInputDigSyncEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2949
DAQmxSetCIEncoderAInputDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderAInputDigSyncEnable
DAQmxSetCIEncoderAInputDigSyncEnable.restype = int32
# DAQmxSetCIEncoderAInputDigSyncEnable(taskHandle, channel, data)
DAQmxSetCIEncoderAInputDigSyncEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2950
DAQmxResetCIEncoderAInputDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderAInputDigSyncEnable
DAQmxResetCIEncoderAInputDigSyncEnable.restype = int32
# DAQmxResetCIEncoderAInputDigSyncEnable(taskHandle, channel)
DAQmxResetCIEncoderAInputDigSyncEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2952
DAQmxGetCIEncoderBInputTerm = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderBInputTerm
DAQmxGetCIEncoderBInputTerm.restype = int32
# DAQmxGetCIEncoderBInputTerm(taskHandle, channel, data, bufferSize)
DAQmxGetCIEncoderBInputTerm.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2953
DAQmxSetCIEncoderBInputTerm = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderBInputTerm
DAQmxSetCIEncoderBInputTerm.restype = int32
# DAQmxSetCIEncoderBInputTerm(taskHandle, channel, data)
DAQmxSetCIEncoderBInputTerm.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2954
DAQmxResetCIEncoderBInputTerm = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderBInputTerm
DAQmxResetCIEncoderBInputTerm.restype = int32
# DAQmxResetCIEncoderBInputTerm(taskHandle, channel)
DAQmxResetCIEncoderBInputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2956
DAQmxGetCIEncoderBInputDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderBInputDigFltrEnable
DAQmxGetCIEncoderBInputDigFltrEnable.restype = int32
# DAQmxGetCIEncoderBInputDigFltrEnable(taskHandle, channel, data)
DAQmxGetCIEncoderBInputDigFltrEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2957
DAQmxSetCIEncoderBInputDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderBInputDigFltrEnable
DAQmxSetCIEncoderBInputDigFltrEnable.restype = int32
# DAQmxSetCIEncoderBInputDigFltrEnable(taskHandle, channel, data)
DAQmxSetCIEncoderBInputDigFltrEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2958
DAQmxResetCIEncoderBInputDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderBInputDigFltrEnable
DAQmxResetCIEncoderBInputDigFltrEnable.restype = int32
# DAQmxResetCIEncoderBInputDigFltrEnable(taskHandle, channel)
DAQmxResetCIEncoderBInputDigFltrEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2960
DAQmxGetCIEncoderBInputDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderBInputDigFltrMinPulseWidth
DAQmxGetCIEncoderBInputDigFltrMinPulseWidth.restype = int32
# DAQmxGetCIEncoderBInputDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxGetCIEncoderBInputDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2961
DAQmxSetCIEncoderBInputDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderBInputDigFltrMinPulseWidth
DAQmxSetCIEncoderBInputDigFltrMinPulseWidth.restype = int32
# DAQmxSetCIEncoderBInputDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxSetCIEncoderBInputDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2962
DAQmxResetCIEncoderBInputDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderBInputDigFltrMinPulseWidth
DAQmxResetCIEncoderBInputDigFltrMinPulseWidth.restype = int32
# DAQmxResetCIEncoderBInputDigFltrMinPulseWidth(taskHandle, channel)
DAQmxResetCIEncoderBInputDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2964
DAQmxGetCIEncoderBInputDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderBInputDigFltrTimebaseSrc
DAQmxGetCIEncoderBInputDigFltrTimebaseSrc.restype = int32
# DAQmxGetCIEncoderBInputDigFltrTimebaseSrc(taskHandle, channel, data, bufferSize)
DAQmxGetCIEncoderBInputDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2965
DAQmxSetCIEncoderBInputDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderBInputDigFltrTimebaseSrc
DAQmxSetCIEncoderBInputDigFltrTimebaseSrc.restype = int32
# DAQmxSetCIEncoderBInputDigFltrTimebaseSrc(taskHandle, channel, data)
DAQmxSetCIEncoderBInputDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2966
DAQmxResetCIEncoderBInputDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderBInputDigFltrTimebaseSrc
DAQmxResetCIEncoderBInputDigFltrTimebaseSrc.restype = int32
# DAQmxResetCIEncoderBInputDigFltrTimebaseSrc(taskHandle, channel)
DAQmxResetCIEncoderBInputDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2968
DAQmxGetCIEncoderBInputDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderBInputDigFltrTimebaseRate
DAQmxGetCIEncoderBInputDigFltrTimebaseRate.restype = int32
# DAQmxGetCIEncoderBInputDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxGetCIEncoderBInputDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2969
DAQmxSetCIEncoderBInputDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderBInputDigFltrTimebaseRate
DAQmxSetCIEncoderBInputDigFltrTimebaseRate.restype = int32
# DAQmxSetCIEncoderBInputDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxSetCIEncoderBInputDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2970
DAQmxResetCIEncoderBInputDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderBInputDigFltrTimebaseRate
DAQmxResetCIEncoderBInputDigFltrTimebaseRate.restype = int32
# DAQmxResetCIEncoderBInputDigFltrTimebaseRate(taskHandle, channel)
DAQmxResetCIEncoderBInputDigFltrTimebaseRate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2972
DAQmxGetCIEncoderBInputDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderBInputDigSyncEnable
DAQmxGetCIEncoderBInputDigSyncEnable.restype = int32
# DAQmxGetCIEncoderBInputDigSyncEnable(taskHandle, channel, data)
DAQmxGetCIEncoderBInputDigSyncEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2973
DAQmxSetCIEncoderBInputDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderBInputDigSyncEnable
DAQmxSetCIEncoderBInputDigSyncEnable.restype = int32
# DAQmxSetCIEncoderBInputDigSyncEnable(taskHandle, channel, data)
DAQmxSetCIEncoderBInputDigSyncEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2974
DAQmxResetCIEncoderBInputDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderBInputDigSyncEnable
DAQmxResetCIEncoderBInputDigSyncEnable.restype = int32
# DAQmxResetCIEncoderBInputDigSyncEnable(taskHandle, channel)
DAQmxResetCIEncoderBInputDigSyncEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2976
DAQmxGetCIEncoderZInputTerm = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderZInputTerm
DAQmxGetCIEncoderZInputTerm.restype = int32
# DAQmxGetCIEncoderZInputTerm(taskHandle, channel, data, bufferSize)
DAQmxGetCIEncoderZInputTerm.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2977
DAQmxSetCIEncoderZInputTerm = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderZInputTerm
DAQmxSetCIEncoderZInputTerm.restype = int32
# DAQmxSetCIEncoderZInputTerm(taskHandle, channel, data)
DAQmxSetCIEncoderZInputTerm.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2978
DAQmxResetCIEncoderZInputTerm = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderZInputTerm
DAQmxResetCIEncoderZInputTerm.restype = int32
# DAQmxResetCIEncoderZInputTerm(taskHandle, channel)
DAQmxResetCIEncoderZInputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2980
DAQmxGetCIEncoderZInputDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderZInputDigFltrEnable
DAQmxGetCIEncoderZInputDigFltrEnable.restype = int32
# DAQmxGetCIEncoderZInputDigFltrEnable(taskHandle, channel, data)
DAQmxGetCIEncoderZInputDigFltrEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2981
DAQmxSetCIEncoderZInputDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderZInputDigFltrEnable
DAQmxSetCIEncoderZInputDigFltrEnable.restype = int32
# DAQmxSetCIEncoderZInputDigFltrEnable(taskHandle, channel, data)
DAQmxSetCIEncoderZInputDigFltrEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2982
DAQmxResetCIEncoderZInputDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderZInputDigFltrEnable
DAQmxResetCIEncoderZInputDigFltrEnable.restype = int32
# DAQmxResetCIEncoderZInputDigFltrEnable(taskHandle, channel)
DAQmxResetCIEncoderZInputDigFltrEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2984
DAQmxGetCIEncoderZInputDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderZInputDigFltrMinPulseWidth
DAQmxGetCIEncoderZInputDigFltrMinPulseWidth.restype = int32
# DAQmxGetCIEncoderZInputDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxGetCIEncoderZInputDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2985
DAQmxSetCIEncoderZInputDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderZInputDigFltrMinPulseWidth
DAQmxSetCIEncoderZInputDigFltrMinPulseWidth.restype = int32
# DAQmxSetCIEncoderZInputDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxSetCIEncoderZInputDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2986
DAQmxResetCIEncoderZInputDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderZInputDigFltrMinPulseWidth
DAQmxResetCIEncoderZInputDigFltrMinPulseWidth.restype = int32
# DAQmxResetCIEncoderZInputDigFltrMinPulseWidth(taskHandle, channel)
DAQmxResetCIEncoderZInputDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2988
DAQmxGetCIEncoderZInputDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderZInputDigFltrTimebaseSrc
DAQmxGetCIEncoderZInputDigFltrTimebaseSrc.restype = int32
# DAQmxGetCIEncoderZInputDigFltrTimebaseSrc(taskHandle, channel, data, bufferSize)
DAQmxGetCIEncoderZInputDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 2989
DAQmxSetCIEncoderZInputDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderZInputDigFltrTimebaseSrc
DAQmxSetCIEncoderZInputDigFltrTimebaseSrc.restype = int32
# DAQmxSetCIEncoderZInputDigFltrTimebaseSrc(taskHandle, channel, data)
DAQmxSetCIEncoderZInputDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 2990
DAQmxResetCIEncoderZInputDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderZInputDigFltrTimebaseSrc
DAQmxResetCIEncoderZInputDigFltrTimebaseSrc.restype = int32
# DAQmxResetCIEncoderZInputDigFltrTimebaseSrc(taskHandle, channel)
DAQmxResetCIEncoderZInputDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2992
DAQmxGetCIEncoderZInputDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderZInputDigFltrTimebaseRate
DAQmxGetCIEncoderZInputDigFltrTimebaseRate.restype = int32
# DAQmxGetCIEncoderZInputDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxGetCIEncoderZInputDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 2993
DAQmxSetCIEncoderZInputDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderZInputDigFltrTimebaseRate
DAQmxSetCIEncoderZInputDigFltrTimebaseRate.restype = int32
# DAQmxSetCIEncoderZInputDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxSetCIEncoderZInputDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 2994
DAQmxResetCIEncoderZInputDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderZInputDigFltrTimebaseRate
DAQmxResetCIEncoderZInputDigFltrTimebaseRate.restype = int32
# DAQmxResetCIEncoderZInputDigFltrTimebaseRate(taskHandle, channel)
DAQmxResetCIEncoderZInputDigFltrTimebaseRate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 2996
DAQmxGetCIEncoderZInputDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderZInputDigSyncEnable
DAQmxGetCIEncoderZInputDigSyncEnable.restype = int32
# DAQmxGetCIEncoderZInputDigSyncEnable(taskHandle, channel, data)
DAQmxGetCIEncoderZInputDigSyncEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 2997
DAQmxSetCIEncoderZInputDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderZInputDigSyncEnable
DAQmxSetCIEncoderZInputDigSyncEnable.restype = int32
# DAQmxSetCIEncoderZInputDigSyncEnable(taskHandle, channel, data)
DAQmxSetCIEncoderZInputDigSyncEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 2998
DAQmxResetCIEncoderZInputDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderZInputDigSyncEnable
DAQmxResetCIEncoderZInputDigSyncEnable.restype = int32
# DAQmxResetCIEncoderZInputDigSyncEnable(taskHandle, channel)
DAQmxResetCIEncoderZInputDigSyncEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3000
DAQmxGetCIEncoderZIndexEnable = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderZIndexEnable
DAQmxGetCIEncoderZIndexEnable.restype = int32
# DAQmxGetCIEncoderZIndexEnable(taskHandle, channel, data)
DAQmxGetCIEncoderZIndexEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3001
DAQmxSetCIEncoderZIndexEnable = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderZIndexEnable
DAQmxSetCIEncoderZIndexEnable.restype = int32
# DAQmxSetCIEncoderZIndexEnable(taskHandle, channel, data)
DAQmxSetCIEncoderZIndexEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 3002
DAQmxResetCIEncoderZIndexEnable = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderZIndexEnable
DAQmxResetCIEncoderZIndexEnable.restype = int32
# DAQmxResetCIEncoderZIndexEnable(taskHandle, channel)
DAQmxResetCIEncoderZIndexEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3004
DAQmxGetCIEncoderZIndexVal = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderZIndexVal
DAQmxGetCIEncoderZIndexVal.restype = int32
# DAQmxGetCIEncoderZIndexVal(taskHandle, channel, data)
DAQmxGetCIEncoderZIndexVal.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3005
DAQmxSetCIEncoderZIndexVal = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderZIndexVal
DAQmxSetCIEncoderZIndexVal.restype = int32
# DAQmxSetCIEncoderZIndexVal(taskHandle, channel, data)
DAQmxSetCIEncoderZIndexVal.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3006
DAQmxResetCIEncoderZIndexVal = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderZIndexVal
DAQmxResetCIEncoderZIndexVal.restype = int32
# DAQmxResetCIEncoderZIndexVal(taskHandle, channel)
DAQmxResetCIEncoderZIndexVal.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3009
DAQmxGetCIEncoderZIndexPhase = _stdcall_libraries['nicaiu'].DAQmxGetCIEncoderZIndexPhase
DAQmxGetCIEncoderZIndexPhase.restype = int32
# DAQmxGetCIEncoderZIndexPhase(taskHandle, channel, data)
DAQmxGetCIEncoderZIndexPhase.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3010
DAQmxSetCIEncoderZIndexPhase = _stdcall_libraries['nicaiu'].DAQmxSetCIEncoderZIndexPhase
DAQmxSetCIEncoderZIndexPhase.restype = int32
# DAQmxSetCIEncoderZIndexPhase(taskHandle, channel, data)
DAQmxSetCIEncoderZIndexPhase.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 3011
DAQmxResetCIEncoderZIndexPhase = _stdcall_libraries['nicaiu'].DAQmxResetCIEncoderZIndexPhase
DAQmxResetCIEncoderZIndexPhase.restype = int32
# DAQmxResetCIEncoderZIndexPhase(taskHandle, channel)
DAQmxResetCIEncoderZIndexPhase.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3014
DAQmxGetCIPulseWidthUnits = _stdcall_libraries['nicaiu'].DAQmxGetCIPulseWidthUnits
DAQmxGetCIPulseWidthUnits.restype = int32
# DAQmxGetCIPulseWidthUnits(taskHandle, channel, data)
DAQmxGetCIPulseWidthUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3015
DAQmxSetCIPulseWidthUnits = _stdcall_libraries['nicaiu'].DAQmxSetCIPulseWidthUnits
DAQmxSetCIPulseWidthUnits.restype = int32
# DAQmxSetCIPulseWidthUnits(taskHandle, channel, data)
DAQmxSetCIPulseWidthUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 3016
DAQmxResetCIPulseWidthUnits = _stdcall_libraries['nicaiu'].DAQmxResetCIPulseWidthUnits
DAQmxResetCIPulseWidthUnits.restype = int32
# DAQmxResetCIPulseWidthUnits(taskHandle, channel)
DAQmxResetCIPulseWidthUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3018
DAQmxGetCIPulseWidthTerm = _stdcall_libraries['nicaiu'].DAQmxGetCIPulseWidthTerm
DAQmxGetCIPulseWidthTerm.restype = int32
# DAQmxGetCIPulseWidthTerm(taskHandle, channel, data, bufferSize)
DAQmxGetCIPulseWidthTerm.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 3019
DAQmxSetCIPulseWidthTerm = _stdcall_libraries['nicaiu'].DAQmxSetCIPulseWidthTerm
DAQmxSetCIPulseWidthTerm.restype = int32
# DAQmxSetCIPulseWidthTerm(taskHandle, channel, data)
DAQmxSetCIPulseWidthTerm.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 3020
DAQmxResetCIPulseWidthTerm = _stdcall_libraries['nicaiu'].DAQmxResetCIPulseWidthTerm
DAQmxResetCIPulseWidthTerm.restype = int32
# DAQmxResetCIPulseWidthTerm(taskHandle, channel)
DAQmxResetCIPulseWidthTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3023
DAQmxGetCIPulseWidthStartingEdge = _stdcall_libraries['nicaiu'].DAQmxGetCIPulseWidthStartingEdge
DAQmxGetCIPulseWidthStartingEdge.restype = int32
# DAQmxGetCIPulseWidthStartingEdge(taskHandle, channel, data)
DAQmxGetCIPulseWidthStartingEdge.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3024
DAQmxSetCIPulseWidthStartingEdge = _stdcall_libraries['nicaiu'].DAQmxSetCIPulseWidthStartingEdge
DAQmxSetCIPulseWidthStartingEdge.restype = int32
# DAQmxSetCIPulseWidthStartingEdge(taskHandle, channel, data)
DAQmxSetCIPulseWidthStartingEdge.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 3025
DAQmxResetCIPulseWidthStartingEdge = _stdcall_libraries['nicaiu'].DAQmxResetCIPulseWidthStartingEdge
DAQmxResetCIPulseWidthStartingEdge.restype = int32
# DAQmxResetCIPulseWidthStartingEdge(taskHandle, channel)
DAQmxResetCIPulseWidthStartingEdge.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3027
DAQmxGetCIPulseWidthDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetCIPulseWidthDigFltrEnable
DAQmxGetCIPulseWidthDigFltrEnable.restype = int32
# DAQmxGetCIPulseWidthDigFltrEnable(taskHandle, channel, data)
DAQmxGetCIPulseWidthDigFltrEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3028
DAQmxSetCIPulseWidthDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetCIPulseWidthDigFltrEnable
DAQmxSetCIPulseWidthDigFltrEnable.restype = int32
# DAQmxSetCIPulseWidthDigFltrEnable(taskHandle, channel, data)
DAQmxSetCIPulseWidthDigFltrEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 3029
DAQmxResetCIPulseWidthDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetCIPulseWidthDigFltrEnable
DAQmxResetCIPulseWidthDigFltrEnable.restype = int32
# DAQmxResetCIPulseWidthDigFltrEnable(taskHandle, channel)
DAQmxResetCIPulseWidthDigFltrEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3031
DAQmxGetCIPulseWidthDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetCIPulseWidthDigFltrMinPulseWidth
DAQmxGetCIPulseWidthDigFltrMinPulseWidth.restype = int32
# DAQmxGetCIPulseWidthDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxGetCIPulseWidthDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3032
DAQmxSetCIPulseWidthDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetCIPulseWidthDigFltrMinPulseWidth
DAQmxSetCIPulseWidthDigFltrMinPulseWidth.restype = int32
# DAQmxSetCIPulseWidthDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxSetCIPulseWidthDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3033
DAQmxResetCIPulseWidthDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetCIPulseWidthDigFltrMinPulseWidth
DAQmxResetCIPulseWidthDigFltrMinPulseWidth.restype = int32
# DAQmxResetCIPulseWidthDigFltrMinPulseWidth(taskHandle, channel)
DAQmxResetCIPulseWidthDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3035
DAQmxGetCIPulseWidthDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetCIPulseWidthDigFltrTimebaseSrc
DAQmxGetCIPulseWidthDigFltrTimebaseSrc.restype = int32
# DAQmxGetCIPulseWidthDigFltrTimebaseSrc(taskHandle, channel, data, bufferSize)
DAQmxGetCIPulseWidthDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 3036
DAQmxSetCIPulseWidthDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetCIPulseWidthDigFltrTimebaseSrc
DAQmxSetCIPulseWidthDigFltrTimebaseSrc.restype = int32
# DAQmxSetCIPulseWidthDigFltrTimebaseSrc(taskHandle, channel, data)
DAQmxSetCIPulseWidthDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 3037
DAQmxResetCIPulseWidthDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetCIPulseWidthDigFltrTimebaseSrc
DAQmxResetCIPulseWidthDigFltrTimebaseSrc.restype = int32
# DAQmxResetCIPulseWidthDigFltrTimebaseSrc(taskHandle, channel)
DAQmxResetCIPulseWidthDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3039
DAQmxGetCIPulseWidthDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetCIPulseWidthDigFltrTimebaseRate
DAQmxGetCIPulseWidthDigFltrTimebaseRate.restype = int32
# DAQmxGetCIPulseWidthDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxGetCIPulseWidthDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3040
DAQmxSetCIPulseWidthDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetCIPulseWidthDigFltrTimebaseRate
DAQmxSetCIPulseWidthDigFltrTimebaseRate.restype = int32
# DAQmxSetCIPulseWidthDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxSetCIPulseWidthDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3041
DAQmxResetCIPulseWidthDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetCIPulseWidthDigFltrTimebaseRate
DAQmxResetCIPulseWidthDigFltrTimebaseRate.restype = int32
# DAQmxResetCIPulseWidthDigFltrTimebaseRate(taskHandle, channel)
DAQmxResetCIPulseWidthDigFltrTimebaseRate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3043
DAQmxGetCIPulseWidthDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetCIPulseWidthDigSyncEnable
DAQmxGetCIPulseWidthDigSyncEnable.restype = int32
# DAQmxGetCIPulseWidthDigSyncEnable(taskHandle, channel, data)
DAQmxGetCIPulseWidthDigSyncEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3044
DAQmxSetCIPulseWidthDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetCIPulseWidthDigSyncEnable
DAQmxSetCIPulseWidthDigSyncEnable.restype = int32
# DAQmxSetCIPulseWidthDigSyncEnable(taskHandle, channel, data)
DAQmxSetCIPulseWidthDigSyncEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 3045
DAQmxResetCIPulseWidthDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetCIPulseWidthDigSyncEnable
DAQmxResetCIPulseWidthDigSyncEnable.restype = int32
# DAQmxResetCIPulseWidthDigSyncEnable(taskHandle, channel)
DAQmxResetCIPulseWidthDigSyncEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3048
DAQmxGetCITwoEdgeSepUnits = _stdcall_libraries['nicaiu'].DAQmxGetCITwoEdgeSepUnits
DAQmxGetCITwoEdgeSepUnits.restype = int32
# DAQmxGetCITwoEdgeSepUnits(taskHandle, channel, data)
DAQmxGetCITwoEdgeSepUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3049
DAQmxSetCITwoEdgeSepUnits = _stdcall_libraries['nicaiu'].DAQmxSetCITwoEdgeSepUnits
DAQmxSetCITwoEdgeSepUnits.restype = int32
# DAQmxSetCITwoEdgeSepUnits(taskHandle, channel, data)
DAQmxSetCITwoEdgeSepUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 3050
DAQmxResetCITwoEdgeSepUnits = _stdcall_libraries['nicaiu'].DAQmxResetCITwoEdgeSepUnits
DAQmxResetCITwoEdgeSepUnits.restype = int32
# DAQmxResetCITwoEdgeSepUnits(taskHandle, channel)
DAQmxResetCITwoEdgeSepUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3052
DAQmxGetCITwoEdgeSepFirstTerm = _stdcall_libraries['nicaiu'].DAQmxGetCITwoEdgeSepFirstTerm
DAQmxGetCITwoEdgeSepFirstTerm.restype = int32
# DAQmxGetCITwoEdgeSepFirstTerm(taskHandle, channel, data, bufferSize)
DAQmxGetCITwoEdgeSepFirstTerm.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 3053
DAQmxSetCITwoEdgeSepFirstTerm = _stdcall_libraries['nicaiu'].DAQmxSetCITwoEdgeSepFirstTerm
DAQmxSetCITwoEdgeSepFirstTerm.restype = int32
# DAQmxSetCITwoEdgeSepFirstTerm(taskHandle, channel, data)
DAQmxSetCITwoEdgeSepFirstTerm.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 3054
DAQmxResetCITwoEdgeSepFirstTerm = _stdcall_libraries['nicaiu'].DAQmxResetCITwoEdgeSepFirstTerm
DAQmxResetCITwoEdgeSepFirstTerm.restype = int32
# DAQmxResetCITwoEdgeSepFirstTerm(taskHandle, channel)
DAQmxResetCITwoEdgeSepFirstTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3057
DAQmxGetCITwoEdgeSepFirstEdge = _stdcall_libraries['nicaiu'].DAQmxGetCITwoEdgeSepFirstEdge
DAQmxGetCITwoEdgeSepFirstEdge.restype = int32
# DAQmxGetCITwoEdgeSepFirstEdge(taskHandle, channel, data)
DAQmxGetCITwoEdgeSepFirstEdge.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3058
DAQmxSetCITwoEdgeSepFirstEdge = _stdcall_libraries['nicaiu'].DAQmxSetCITwoEdgeSepFirstEdge
DAQmxSetCITwoEdgeSepFirstEdge.restype = int32
# DAQmxSetCITwoEdgeSepFirstEdge(taskHandle, channel, data)
DAQmxSetCITwoEdgeSepFirstEdge.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 3059
DAQmxResetCITwoEdgeSepFirstEdge = _stdcall_libraries['nicaiu'].DAQmxResetCITwoEdgeSepFirstEdge
DAQmxResetCITwoEdgeSepFirstEdge.restype = int32
# DAQmxResetCITwoEdgeSepFirstEdge(taskHandle, channel)
DAQmxResetCITwoEdgeSepFirstEdge.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3061
DAQmxGetCITwoEdgeSepFirstDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetCITwoEdgeSepFirstDigFltrEnable
DAQmxGetCITwoEdgeSepFirstDigFltrEnable.restype = int32
# DAQmxGetCITwoEdgeSepFirstDigFltrEnable(taskHandle, channel, data)
DAQmxGetCITwoEdgeSepFirstDigFltrEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3062
DAQmxSetCITwoEdgeSepFirstDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetCITwoEdgeSepFirstDigFltrEnable
DAQmxSetCITwoEdgeSepFirstDigFltrEnable.restype = int32
# DAQmxSetCITwoEdgeSepFirstDigFltrEnable(taskHandle, channel, data)
DAQmxSetCITwoEdgeSepFirstDigFltrEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 3063
DAQmxResetCITwoEdgeSepFirstDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetCITwoEdgeSepFirstDigFltrEnable
DAQmxResetCITwoEdgeSepFirstDigFltrEnable.restype = int32
# DAQmxResetCITwoEdgeSepFirstDigFltrEnable(taskHandle, channel)
DAQmxResetCITwoEdgeSepFirstDigFltrEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3065
DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth
DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth.restype = int32
# DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3066
DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth
DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth.restype = int32
# DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3067
DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth
DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth.restype = int32
# DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth(taskHandle, channel)
DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3069
DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc
DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc.restype = int32
# DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc(taskHandle, channel, data, bufferSize)
DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 3070
DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc
DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc.restype = int32
# DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc(taskHandle, channel, data)
DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 3071
DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc
DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc.restype = int32
# DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc(taskHandle, channel)
DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3073
DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate
DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate.restype = int32
# DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3074
DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate
DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate.restype = int32
# DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3075
DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate
DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate.restype = int32
# DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate(taskHandle, channel)
DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3077
DAQmxGetCITwoEdgeSepFirstDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetCITwoEdgeSepFirstDigSyncEnable
DAQmxGetCITwoEdgeSepFirstDigSyncEnable.restype = int32
# DAQmxGetCITwoEdgeSepFirstDigSyncEnable(taskHandle, channel, data)
DAQmxGetCITwoEdgeSepFirstDigSyncEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3078
DAQmxSetCITwoEdgeSepFirstDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetCITwoEdgeSepFirstDigSyncEnable
DAQmxSetCITwoEdgeSepFirstDigSyncEnable.restype = int32
# DAQmxSetCITwoEdgeSepFirstDigSyncEnable(taskHandle, channel, data)
DAQmxSetCITwoEdgeSepFirstDigSyncEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 3079
DAQmxResetCITwoEdgeSepFirstDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetCITwoEdgeSepFirstDigSyncEnable
DAQmxResetCITwoEdgeSepFirstDigSyncEnable.restype = int32
# DAQmxResetCITwoEdgeSepFirstDigSyncEnable(taskHandle, channel)
DAQmxResetCITwoEdgeSepFirstDigSyncEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3081
DAQmxGetCITwoEdgeSepSecondTerm = _stdcall_libraries['nicaiu'].DAQmxGetCITwoEdgeSepSecondTerm
DAQmxGetCITwoEdgeSepSecondTerm.restype = int32
# DAQmxGetCITwoEdgeSepSecondTerm(taskHandle, channel, data, bufferSize)
DAQmxGetCITwoEdgeSepSecondTerm.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 3082
DAQmxSetCITwoEdgeSepSecondTerm = _stdcall_libraries['nicaiu'].DAQmxSetCITwoEdgeSepSecondTerm
DAQmxSetCITwoEdgeSepSecondTerm.restype = int32
# DAQmxSetCITwoEdgeSepSecondTerm(taskHandle, channel, data)
DAQmxSetCITwoEdgeSepSecondTerm.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 3083
DAQmxResetCITwoEdgeSepSecondTerm = _stdcall_libraries['nicaiu'].DAQmxResetCITwoEdgeSepSecondTerm
DAQmxResetCITwoEdgeSepSecondTerm.restype = int32
# DAQmxResetCITwoEdgeSepSecondTerm(taskHandle, channel)
DAQmxResetCITwoEdgeSepSecondTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3086
DAQmxGetCITwoEdgeSepSecondEdge = _stdcall_libraries['nicaiu'].DAQmxGetCITwoEdgeSepSecondEdge
DAQmxGetCITwoEdgeSepSecondEdge.restype = int32
# DAQmxGetCITwoEdgeSepSecondEdge(taskHandle, channel, data)
DAQmxGetCITwoEdgeSepSecondEdge.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3087
DAQmxSetCITwoEdgeSepSecondEdge = _stdcall_libraries['nicaiu'].DAQmxSetCITwoEdgeSepSecondEdge
DAQmxSetCITwoEdgeSepSecondEdge.restype = int32
# DAQmxSetCITwoEdgeSepSecondEdge(taskHandle, channel, data)
DAQmxSetCITwoEdgeSepSecondEdge.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 3088
DAQmxResetCITwoEdgeSepSecondEdge = _stdcall_libraries['nicaiu'].DAQmxResetCITwoEdgeSepSecondEdge
DAQmxResetCITwoEdgeSepSecondEdge.restype = int32
# DAQmxResetCITwoEdgeSepSecondEdge(taskHandle, channel)
DAQmxResetCITwoEdgeSepSecondEdge.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3090
DAQmxGetCITwoEdgeSepSecondDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetCITwoEdgeSepSecondDigFltrEnable
DAQmxGetCITwoEdgeSepSecondDigFltrEnable.restype = int32
# DAQmxGetCITwoEdgeSepSecondDigFltrEnable(taskHandle, channel, data)
DAQmxGetCITwoEdgeSepSecondDigFltrEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3091
DAQmxSetCITwoEdgeSepSecondDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetCITwoEdgeSepSecondDigFltrEnable
DAQmxSetCITwoEdgeSepSecondDigFltrEnable.restype = int32
# DAQmxSetCITwoEdgeSepSecondDigFltrEnable(taskHandle, channel, data)
DAQmxSetCITwoEdgeSepSecondDigFltrEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 3092
DAQmxResetCITwoEdgeSepSecondDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetCITwoEdgeSepSecondDigFltrEnable
DAQmxResetCITwoEdgeSepSecondDigFltrEnable.restype = int32
# DAQmxResetCITwoEdgeSepSecondDigFltrEnable(taskHandle, channel)
DAQmxResetCITwoEdgeSepSecondDigFltrEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3094
DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth
DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth.restype = int32
# DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3095
DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth
DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth.restype = int32
# DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3096
DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth
DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth.restype = int32
# DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth(taskHandle, channel)
DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3098
DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc
DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc.restype = int32
# DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc(taskHandle, channel, data, bufferSize)
DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 3099
DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc
DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc.restype = int32
# DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc(taskHandle, channel, data)
DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 3100
DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc
DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc.restype = int32
# DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc(taskHandle, channel)
DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3102
DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate
DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate.restype = int32
# DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3103
DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate
DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate.restype = int32
# DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3104
DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate
DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate.restype = int32
# DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate(taskHandle, channel)
DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3106
DAQmxGetCITwoEdgeSepSecondDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetCITwoEdgeSepSecondDigSyncEnable
DAQmxGetCITwoEdgeSepSecondDigSyncEnable.restype = int32
# DAQmxGetCITwoEdgeSepSecondDigSyncEnable(taskHandle, channel, data)
DAQmxGetCITwoEdgeSepSecondDigSyncEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3107
DAQmxSetCITwoEdgeSepSecondDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetCITwoEdgeSepSecondDigSyncEnable
DAQmxSetCITwoEdgeSepSecondDigSyncEnable.restype = int32
# DAQmxSetCITwoEdgeSepSecondDigSyncEnable(taskHandle, channel, data)
DAQmxSetCITwoEdgeSepSecondDigSyncEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 3108
DAQmxResetCITwoEdgeSepSecondDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetCITwoEdgeSepSecondDigSyncEnable
DAQmxResetCITwoEdgeSepSecondDigSyncEnable.restype = int32
# DAQmxResetCITwoEdgeSepSecondDigSyncEnable(taskHandle, channel)
DAQmxResetCITwoEdgeSepSecondDigSyncEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3111
DAQmxGetCISemiPeriodUnits = _stdcall_libraries['nicaiu'].DAQmxGetCISemiPeriodUnits
DAQmxGetCISemiPeriodUnits.restype = int32
# DAQmxGetCISemiPeriodUnits(taskHandle, channel, data)
DAQmxGetCISemiPeriodUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3112
DAQmxSetCISemiPeriodUnits = _stdcall_libraries['nicaiu'].DAQmxSetCISemiPeriodUnits
DAQmxSetCISemiPeriodUnits.restype = int32
# DAQmxSetCISemiPeriodUnits(taskHandle, channel, data)
DAQmxSetCISemiPeriodUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 3113
DAQmxResetCISemiPeriodUnits = _stdcall_libraries['nicaiu'].DAQmxResetCISemiPeriodUnits
DAQmxResetCISemiPeriodUnits.restype = int32
# DAQmxResetCISemiPeriodUnits(taskHandle, channel)
DAQmxResetCISemiPeriodUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3115
DAQmxGetCISemiPeriodTerm = _stdcall_libraries['nicaiu'].DAQmxGetCISemiPeriodTerm
DAQmxGetCISemiPeriodTerm.restype = int32
# DAQmxGetCISemiPeriodTerm(taskHandle, channel, data, bufferSize)
DAQmxGetCISemiPeriodTerm.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 3116
DAQmxSetCISemiPeriodTerm = _stdcall_libraries['nicaiu'].DAQmxSetCISemiPeriodTerm
DAQmxSetCISemiPeriodTerm.restype = int32
# DAQmxSetCISemiPeriodTerm(taskHandle, channel, data)
DAQmxSetCISemiPeriodTerm.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 3117
DAQmxResetCISemiPeriodTerm = _stdcall_libraries['nicaiu'].DAQmxResetCISemiPeriodTerm
DAQmxResetCISemiPeriodTerm.restype = int32
# DAQmxResetCISemiPeriodTerm(taskHandle, channel)
DAQmxResetCISemiPeriodTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3120
DAQmxGetCISemiPeriodStartingEdge = _stdcall_libraries['nicaiu'].DAQmxGetCISemiPeriodStartingEdge
DAQmxGetCISemiPeriodStartingEdge.restype = int32
# DAQmxGetCISemiPeriodStartingEdge(taskHandle, channel, data)
DAQmxGetCISemiPeriodStartingEdge.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3121
DAQmxSetCISemiPeriodStartingEdge = _stdcall_libraries['nicaiu'].DAQmxSetCISemiPeriodStartingEdge
DAQmxSetCISemiPeriodStartingEdge.restype = int32
# DAQmxSetCISemiPeriodStartingEdge(taskHandle, channel, data)
DAQmxSetCISemiPeriodStartingEdge.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 3122
DAQmxResetCISemiPeriodStartingEdge = _stdcall_libraries['nicaiu'].DAQmxResetCISemiPeriodStartingEdge
DAQmxResetCISemiPeriodStartingEdge.restype = int32
# DAQmxResetCISemiPeriodStartingEdge(taskHandle, channel)
DAQmxResetCISemiPeriodStartingEdge.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3124
DAQmxGetCISemiPeriodDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetCISemiPeriodDigFltrEnable
DAQmxGetCISemiPeriodDigFltrEnable.restype = int32
# DAQmxGetCISemiPeriodDigFltrEnable(taskHandle, channel, data)
DAQmxGetCISemiPeriodDigFltrEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3125
DAQmxSetCISemiPeriodDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetCISemiPeriodDigFltrEnable
DAQmxSetCISemiPeriodDigFltrEnable.restype = int32
# DAQmxSetCISemiPeriodDigFltrEnable(taskHandle, channel, data)
DAQmxSetCISemiPeriodDigFltrEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 3126
DAQmxResetCISemiPeriodDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetCISemiPeriodDigFltrEnable
DAQmxResetCISemiPeriodDigFltrEnable.restype = int32
# DAQmxResetCISemiPeriodDigFltrEnable(taskHandle, channel)
DAQmxResetCISemiPeriodDigFltrEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3128
DAQmxGetCISemiPeriodDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetCISemiPeriodDigFltrMinPulseWidth
DAQmxGetCISemiPeriodDigFltrMinPulseWidth.restype = int32
# DAQmxGetCISemiPeriodDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxGetCISemiPeriodDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3129
DAQmxSetCISemiPeriodDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetCISemiPeriodDigFltrMinPulseWidth
DAQmxSetCISemiPeriodDigFltrMinPulseWidth.restype = int32
# DAQmxSetCISemiPeriodDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxSetCISemiPeriodDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3130
DAQmxResetCISemiPeriodDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetCISemiPeriodDigFltrMinPulseWidth
DAQmxResetCISemiPeriodDigFltrMinPulseWidth.restype = int32
# DAQmxResetCISemiPeriodDigFltrMinPulseWidth(taskHandle, channel)
DAQmxResetCISemiPeriodDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3132
DAQmxGetCISemiPeriodDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetCISemiPeriodDigFltrTimebaseSrc
DAQmxGetCISemiPeriodDigFltrTimebaseSrc.restype = int32
# DAQmxGetCISemiPeriodDigFltrTimebaseSrc(taskHandle, channel, data, bufferSize)
DAQmxGetCISemiPeriodDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 3133
DAQmxSetCISemiPeriodDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetCISemiPeriodDigFltrTimebaseSrc
DAQmxSetCISemiPeriodDigFltrTimebaseSrc.restype = int32
# DAQmxSetCISemiPeriodDigFltrTimebaseSrc(taskHandle, channel, data)
DAQmxSetCISemiPeriodDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 3134
DAQmxResetCISemiPeriodDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetCISemiPeriodDigFltrTimebaseSrc
DAQmxResetCISemiPeriodDigFltrTimebaseSrc.restype = int32
# DAQmxResetCISemiPeriodDigFltrTimebaseSrc(taskHandle, channel)
DAQmxResetCISemiPeriodDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3136
DAQmxGetCISemiPeriodDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetCISemiPeriodDigFltrTimebaseRate
DAQmxGetCISemiPeriodDigFltrTimebaseRate.restype = int32
# DAQmxGetCISemiPeriodDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxGetCISemiPeriodDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3137
DAQmxSetCISemiPeriodDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetCISemiPeriodDigFltrTimebaseRate
DAQmxSetCISemiPeriodDigFltrTimebaseRate.restype = int32
# DAQmxSetCISemiPeriodDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxSetCISemiPeriodDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3138
DAQmxResetCISemiPeriodDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetCISemiPeriodDigFltrTimebaseRate
DAQmxResetCISemiPeriodDigFltrTimebaseRate.restype = int32
# DAQmxResetCISemiPeriodDigFltrTimebaseRate(taskHandle, channel)
DAQmxResetCISemiPeriodDigFltrTimebaseRate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3140
DAQmxGetCISemiPeriodDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetCISemiPeriodDigSyncEnable
DAQmxGetCISemiPeriodDigSyncEnable.restype = int32
# DAQmxGetCISemiPeriodDigSyncEnable(taskHandle, channel, data)
DAQmxGetCISemiPeriodDigSyncEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3141
DAQmxSetCISemiPeriodDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetCISemiPeriodDigSyncEnable
DAQmxSetCISemiPeriodDigSyncEnable.restype = int32
# DAQmxSetCISemiPeriodDigSyncEnable(taskHandle, channel, data)
DAQmxSetCISemiPeriodDigSyncEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 3142
DAQmxResetCISemiPeriodDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetCISemiPeriodDigSyncEnable
DAQmxResetCISemiPeriodDigSyncEnable.restype = int32
# DAQmxResetCISemiPeriodDigSyncEnable(taskHandle, channel)
DAQmxResetCISemiPeriodDigSyncEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3145
DAQmxGetCITimestampUnits = _stdcall_libraries['nicaiu'].DAQmxGetCITimestampUnits
DAQmxGetCITimestampUnits.restype = int32
# DAQmxGetCITimestampUnits(taskHandle, channel, data)
DAQmxGetCITimestampUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3146
DAQmxSetCITimestampUnits = _stdcall_libraries['nicaiu'].DAQmxSetCITimestampUnits
DAQmxSetCITimestampUnits.restype = int32
# DAQmxSetCITimestampUnits(taskHandle, channel, data)
DAQmxSetCITimestampUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 3147
DAQmxResetCITimestampUnits = _stdcall_libraries['nicaiu'].DAQmxResetCITimestampUnits
DAQmxResetCITimestampUnits.restype = int32
# DAQmxResetCITimestampUnits(taskHandle, channel)
DAQmxResetCITimestampUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3149
DAQmxGetCITimestampInitialSeconds = _stdcall_libraries['nicaiu'].DAQmxGetCITimestampInitialSeconds
DAQmxGetCITimestampInitialSeconds.restype = int32
# DAQmxGetCITimestampInitialSeconds(taskHandle, channel, data)
DAQmxGetCITimestampInitialSeconds.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 3150
DAQmxSetCITimestampInitialSeconds = _stdcall_libraries['nicaiu'].DAQmxSetCITimestampInitialSeconds
DAQmxSetCITimestampInitialSeconds.restype = int32
# DAQmxSetCITimestampInitialSeconds(taskHandle, channel, data)
DAQmxSetCITimestampInitialSeconds.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3151
DAQmxResetCITimestampInitialSeconds = _stdcall_libraries['nicaiu'].DAQmxResetCITimestampInitialSeconds
DAQmxResetCITimestampInitialSeconds.restype = int32
# DAQmxResetCITimestampInitialSeconds(taskHandle, channel)
DAQmxResetCITimestampInitialSeconds.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3154
DAQmxGetCIGPSSyncMethod = _stdcall_libraries['nicaiu'].DAQmxGetCIGPSSyncMethod
DAQmxGetCIGPSSyncMethod.restype = int32
# DAQmxGetCIGPSSyncMethod(taskHandle, channel, data)
DAQmxGetCIGPSSyncMethod.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3155
DAQmxSetCIGPSSyncMethod = _stdcall_libraries['nicaiu'].DAQmxSetCIGPSSyncMethod
DAQmxSetCIGPSSyncMethod.restype = int32
# DAQmxSetCIGPSSyncMethod(taskHandle, channel, data)
DAQmxSetCIGPSSyncMethod.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 3156
DAQmxResetCIGPSSyncMethod = _stdcall_libraries['nicaiu'].DAQmxResetCIGPSSyncMethod
DAQmxResetCIGPSSyncMethod.restype = int32
# DAQmxResetCIGPSSyncMethod(taskHandle, channel)
DAQmxResetCIGPSSyncMethod.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3158
DAQmxGetCIGPSSyncSrc = _stdcall_libraries['nicaiu'].DAQmxGetCIGPSSyncSrc
DAQmxGetCIGPSSyncSrc.restype = int32
# DAQmxGetCIGPSSyncSrc(taskHandle, channel, data, bufferSize)
DAQmxGetCIGPSSyncSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 3159
DAQmxSetCIGPSSyncSrc = _stdcall_libraries['nicaiu'].DAQmxSetCIGPSSyncSrc
DAQmxSetCIGPSSyncSrc.restype = int32
# DAQmxSetCIGPSSyncSrc(taskHandle, channel, data)
DAQmxSetCIGPSSyncSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 3160
DAQmxResetCIGPSSyncSrc = _stdcall_libraries['nicaiu'].DAQmxResetCIGPSSyncSrc
DAQmxResetCIGPSSyncSrc.restype = int32
# DAQmxResetCIGPSSyncSrc(taskHandle, channel)
DAQmxResetCIGPSSyncSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3162
DAQmxGetCICtrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetCICtrTimebaseSrc
DAQmxGetCICtrTimebaseSrc.restype = int32
# DAQmxGetCICtrTimebaseSrc(taskHandle, channel, data, bufferSize)
DAQmxGetCICtrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 3163
DAQmxSetCICtrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetCICtrTimebaseSrc
DAQmxSetCICtrTimebaseSrc.restype = int32
# DAQmxSetCICtrTimebaseSrc(taskHandle, channel, data)
DAQmxSetCICtrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 3164
DAQmxResetCICtrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetCICtrTimebaseSrc
DAQmxResetCICtrTimebaseSrc.restype = int32
# DAQmxResetCICtrTimebaseSrc(taskHandle, channel)
DAQmxResetCICtrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3166
DAQmxGetCICtrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetCICtrTimebaseRate
DAQmxGetCICtrTimebaseRate.restype = int32
# DAQmxGetCICtrTimebaseRate(taskHandle, channel, data)
DAQmxGetCICtrTimebaseRate.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3167
DAQmxSetCICtrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetCICtrTimebaseRate
DAQmxSetCICtrTimebaseRate.restype = int32
# DAQmxSetCICtrTimebaseRate(taskHandle, channel, data)
DAQmxSetCICtrTimebaseRate.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3168
DAQmxResetCICtrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetCICtrTimebaseRate
DAQmxResetCICtrTimebaseRate.restype = int32
# DAQmxResetCICtrTimebaseRate(taskHandle, channel)
DAQmxResetCICtrTimebaseRate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3171
DAQmxGetCICtrTimebaseActiveEdge = _stdcall_libraries['nicaiu'].DAQmxGetCICtrTimebaseActiveEdge
DAQmxGetCICtrTimebaseActiveEdge.restype = int32
# DAQmxGetCICtrTimebaseActiveEdge(taskHandle, channel, data)
DAQmxGetCICtrTimebaseActiveEdge.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3172
DAQmxSetCICtrTimebaseActiveEdge = _stdcall_libraries['nicaiu'].DAQmxSetCICtrTimebaseActiveEdge
DAQmxSetCICtrTimebaseActiveEdge.restype = int32
# DAQmxSetCICtrTimebaseActiveEdge(taskHandle, channel, data)
DAQmxSetCICtrTimebaseActiveEdge.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 3173
DAQmxResetCICtrTimebaseActiveEdge = _stdcall_libraries['nicaiu'].DAQmxResetCICtrTimebaseActiveEdge
DAQmxResetCICtrTimebaseActiveEdge.restype = int32
# DAQmxResetCICtrTimebaseActiveEdge(taskHandle, channel)
DAQmxResetCICtrTimebaseActiveEdge.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3175
DAQmxGetCICtrTimebaseDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetCICtrTimebaseDigFltrEnable
DAQmxGetCICtrTimebaseDigFltrEnable.restype = int32
# DAQmxGetCICtrTimebaseDigFltrEnable(taskHandle, channel, data)
DAQmxGetCICtrTimebaseDigFltrEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3176
DAQmxSetCICtrTimebaseDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetCICtrTimebaseDigFltrEnable
DAQmxSetCICtrTimebaseDigFltrEnable.restype = int32
# DAQmxSetCICtrTimebaseDigFltrEnable(taskHandle, channel, data)
DAQmxSetCICtrTimebaseDigFltrEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 3177
DAQmxResetCICtrTimebaseDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetCICtrTimebaseDigFltrEnable
DAQmxResetCICtrTimebaseDigFltrEnable.restype = int32
# DAQmxResetCICtrTimebaseDigFltrEnable(taskHandle, channel)
DAQmxResetCICtrTimebaseDigFltrEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3179
DAQmxGetCICtrTimebaseDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetCICtrTimebaseDigFltrMinPulseWidth
DAQmxGetCICtrTimebaseDigFltrMinPulseWidth.restype = int32
# DAQmxGetCICtrTimebaseDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxGetCICtrTimebaseDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3180
DAQmxSetCICtrTimebaseDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetCICtrTimebaseDigFltrMinPulseWidth
DAQmxSetCICtrTimebaseDigFltrMinPulseWidth.restype = int32
# DAQmxSetCICtrTimebaseDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxSetCICtrTimebaseDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3181
DAQmxResetCICtrTimebaseDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetCICtrTimebaseDigFltrMinPulseWidth
DAQmxResetCICtrTimebaseDigFltrMinPulseWidth.restype = int32
# DAQmxResetCICtrTimebaseDigFltrMinPulseWidth(taskHandle, channel)
DAQmxResetCICtrTimebaseDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3183
DAQmxGetCICtrTimebaseDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetCICtrTimebaseDigFltrTimebaseSrc
DAQmxGetCICtrTimebaseDigFltrTimebaseSrc.restype = int32
# DAQmxGetCICtrTimebaseDigFltrTimebaseSrc(taskHandle, channel, data, bufferSize)
DAQmxGetCICtrTimebaseDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 3184
DAQmxSetCICtrTimebaseDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetCICtrTimebaseDigFltrTimebaseSrc
DAQmxSetCICtrTimebaseDigFltrTimebaseSrc.restype = int32
# DAQmxSetCICtrTimebaseDigFltrTimebaseSrc(taskHandle, channel, data)
DAQmxSetCICtrTimebaseDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 3185
DAQmxResetCICtrTimebaseDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetCICtrTimebaseDigFltrTimebaseSrc
DAQmxResetCICtrTimebaseDigFltrTimebaseSrc.restype = int32
# DAQmxResetCICtrTimebaseDigFltrTimebaseSrc(taskHandle, channel)
DAQmxResetCICtrTimebaseDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3187
DAQmxGetCICtrTimebaseDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetCICtrTimebaseDigFltrTimebaseRate
DAQmxGetCICtrTimebaseDigFltrTimebaseRate.restype = int32
# DAQmxGetCICtrTimebaseDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxGetCICtrTimebaseDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3188
DAQmxSetCICtrTimebaseDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetCICtrTimebaseDigFltrTimebaseRate
DAQmxSetCICtrTimebaseDigFltrTimebaseRate.restype = int32
# DAQmxSetCICtrTimebaseDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxSetCICtrTimebaseDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3189
DAQmxResetCICtrTimebaseDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetCICtrTimebaseDigFltrTimebaseRate
DAQmxResetCICtrTimebaseDigFltrTimebaseRate.restype = int32
# DAQmxResetCICtrTimebaseDigFltrTimebaseRate(taskHandle, channel)
DAQmxResetCICtrTimebaseDigFltrTimebaseRate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3191
DAQmxGetCICtrTimebaseDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetCICtrTimebaseDigSyncEnable
DAQmxGetCICtrTimebaseDigSyncEnable.restype = int32
# DAQmxGetCICtrTimebaseDigSyncEnable(taskHandle, channel, data)
DAQmxGetCICtrTimebaseDigSyncEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3192
DAQmxSetCICtrTimebaseDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetCICtrTimebaseDigSyncEnable
DAQmxSetCICtrTimebaseDigSyncEnable.restype = int32
# DAQmxSetCICtrTimebaseDigSyncEnable(taskHandle, channel, data)
DAQmxSetCICtrTimebaseDigSyncEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 3193
DAQmxResetCICtrTimebaseDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetCICtrTimebaseDigSyncEnable
DAQmxResetCICtrTimebaseDigSyncEnable.restype = int32
# DAQmxResetCICtrTimebaseDigSyncEnable(taskHandle, channel)
DAQmxResetCICtrTimebaseDigSyncEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3195
DAQmxGetCICount = _stdcall_libraries['nicaiu'].DAQmxGetCICount
DAQmxGetCICount.restype = int32
# DAQmxGetCICount(taskHandle, channel, data)
DAQmxGetCICount.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 3198
DAQmxGetCIOutputState = _stdcall_libraries['nicaiu'].DAQmxGetCIOutputState
DAQmxGetCIOutputState.restype = int32
# DAQmxGetCIOutputState(taskHandle, channel, data)
DAQmxGetCIOutputState.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3200
DAQmxGetCITCReached = _stdcall_libraries['nicaiu'].DAQmxGetCITCReached
DAQmxGetCITCReached.restype = int32
# DAQmxGetCITCReached(taskHandle, channel, data)
DAQmxGetCITCReached.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3203
DAQmxGetCICtrTimebaseMasterTimebaseDiv = _stdcall_libraries['nicaiu'].DAQmxGetCICtrTimebaseMasterTimebaseDiv
DAQmxGetCICtrTimebaseMasterTimebaseDiv.restype = int32
# DAQmxGetCICtrTimebaseMasterTimebaseDiv(taskHandle, channel, data)
DAQmxGetCICtrTimebaseMasterTimebaseDiv.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 3204
DAQmxSetCICtrTimebaseMasterTimebaseDiv = _stdcall_libraries['nicaiu'].DAQmxSetCICtrTimebaseMasterTimebaseDiv
DAQmxSetCICtrTimebaseMasterTimebaseDiv.restype = int32
# DAQmxSetCICtrTimebaseMasterTimebaseDiv(taskHandle, channel, data)
DAQmxSetCICtrTimebaseMasterTimebaseDiv.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3205
DAQmxResetCICtrTimebaseMasterTimebaseDiv = _stdcall_libraries['nicaiu'].DAQmxResetCICtrTimebaseMasterTimebaseDiv
DAQmxResetCICtrTimebaseMasterTimebaseDiv.restype = int32
# DAQmxResetCICtrTimebaseMasterTimebaseDiv(taskHandle, channel)
DAQmxResetCICtrTimebaseMasterTimebaseDiv.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3208
DAQmxGetCIDataXferMech = _stdcall_libraries['nicaiu'].DAQmxGetCIDataXferMech
DAQmxGetCIDataXferMech.restype = int32
# DAQmxGetCIDataXferMech(taskHandle, channel, data)
DAQmxGetCIDataXferMech.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3209
DAQmxSetCIDataXferMech = _stdcall_libraries['nicaiu'].DAQmxSetCIDataXferMech
DAQmxSetCIDataXferMech.restype = int32
# DAQmxSetCIDataXferMech(taskHandle, channel, data)
DAQmxSetCIDataXferMech.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 3210
DAQmxResetCIDataXferMech = _stdcall_libraries['nicaiu'].DAQmxResetCIDataXferMech
DAQmxResetCIDataXferMech.restype = int32
# DAQmxResetCIDataXferMech(taskHandle, channel)
DAQmxResetCIDataXferMech.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3212
DAQmxGetCINumPossiblyInvalidSamps = _stdcall_libraries['nicaiu'].DAQmxGetCINumPossiblyInvalidSamps
DAQmxGetCINumPossiblyInvalidSamps.restype = int32
# DAQmxGetCINumPossiblyInvalidSamps(taskHandle, channel, data)
DAQmxGetCINumPossiblyInvalidSamps.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 3214
DAQmxGetCIDupCountPrevent = _stdcall_libraries['nicaiu'].DAQmxGetCIDupCountPrevent
DAQmxGetCIDupCountPrevent.restype = int32
# DAQmxGetCIDupCountPrevent(taskHandle, channel, data)
DAQmxGetCIDupCountPrevent.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3215
DAQmxSetCIDupCountPrevent = _stdcall_libraries['nicaiu'].DAQmxSetCIDupCountPrevent
DAQmxSetCIDupCountPrevent.restype = int32
# DAQmxSetCIDupCountPrevent(taskHandle, channel, data)
DAQmxSetCIDupCountPrevent.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 3216
DAQmxResetCIDupCountPrevent = _stdcall_libraries['nicaiu'].DAQmxResetCIDupCountPrevent
DAQmxResetCIDupCountPrevent.restype = int32
# DAQmxResetCIDupCountPrevent(taskHandle, channel)
DAQmxResetCIDupCountPrevent.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3219
DAQmxGetCIPrescaler = _stdcall_libraries['nicaiu'].DAQmxGetCIPrescaler
DAQmxGetCIPrescaler.restype = int32
# DAQmxGetCIPrescaler(taskHandle, channel, data)
DAQmxGetCIPrescaler.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 3220
DAQmxSetCIPrescaler = _stdcall_libraries['nicaiu'].DAQmxSetCIPrescaler
DAQmxSetCIPrescaler.restype = int32
# DAQmxSetCIPrescaler(taskHandle, channel, data)
DAQmxSetCIPrescaler.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3221
DAQmxResetCIPrescaler = _stdcall_libraries['nicaiu'].DAQmxResetCIPrescaler
DAQmxResetCIPrescaler.restype = int32
# DAQmxResetCIPrescaler(taskHandle, channel)
DAQmxResetCIPrescaler.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3224
DAQmxGetCOOutputType = _stdcall_libraries['nicaiu'].DAQmxGetCOOutputType
DAQmxGetCOOutputType.restype = int32
# DAQmxGetCOOutputType(taskHandle, channel, data)
DAQmxGetCOOutputType.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3227
DAQmxGetCOPulseIdleState = _stdcall_libraries['nicaiu'].DAQmxGetCOPulseIdleState
DAQmxGetCOPulseIdleState.restype = int32
# DAQmxGetCOPulseIdleState(taskHandle, channel, data)
DAQmxGetCOPulseIdleState.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3228
DAQmxSetCOPulseIdleState = _stdcall_libraries['nicaiu'].DAQmxSetCOPulseIdleState
DAQmxSetCOPulseIdleState.restype = int32
# DAQmxSetCOPulseIdleState(taskHandle, channel, data)
DAQmxSetCOPulseIdleState.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 3229
DAQmxResetCOPulseIdleState = _stdcall_libraries['nicaiu'].DAQmxResetCOPulseIdleState
DAQmxResetCOPulseIdleState.restype = int32
# DAQmxResetCOPulseIdleState(taskHandle, channel)
DAQmxResetCOPulseIdleState.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3231
DAQmxGetCOPulseTerm = _stdcall_libraries['nicaiu'].DAQmxGetCOPulseTerm
DAQmxGetCOPulseTerm.restype = int32
# DAQmxGetCOPulseTerm(taskHandle, channel, data, bufferSize)
DAQmxGetCOPulseTerm.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 3232
DAQmxSetCOPulseTerm = _stdcall_libraries['nicaiu'].DAQmxSetCOPulseTerm
DAQmxSetCOPulseTerm.restype = int32
# DAQmxSetCOPulseTerm(taskHandle, channel, data)
DAQmxSetCOPulseTerm.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 3233
DAQmxResetCOPulseTerm = _stdcall_libraries['nicaiu'].DAQmxResetCOPulseTerm
DAQmxResetCOPulseTerm.restype = int32
# DAQmxResetCOPulseTerm(taskHandle, channel)
DAQmxResetCOPulseTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3236
DAQmxGetCOPulseTimeUnits = _stdcall_libraries['nicaiu'].DAQmxGetCOPulseTimeUnits
DAQmxGetCOPulseTimeUnits.restype = int32
# DAQmxGetCOPulseTimeUnits(taskHandle, channel, data)
DAQmxGetCOPulseTimeUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3237
DAQmxSetCOPulseTimeUnits = _stdcall_libraries['nicaiu'].DAQmxSetCOPulseTimeUnits
DAQmxSetCOPulseTimeUnits.restype = int32
# DAQmxSetCOPulseTimeUnits(taskHandle, channel, data)
DAQmxSetCOPulseTimeUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 3238
DAQmxResetCOPulseTimeUnits = _stdcall_libraries['nicaiu'].DAQmxResetCOPulseTimeUnits
DAQmxResetCOPulseTimeUnits.restype = int32
# DAQmxResetCOPulseTimeUnits(taskHandle, channel)
DAQmxResetCOPulseTimeUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3240
DAQmxGetCOPulseHighTime = _stdcall_libraries['nicaiu'].DAQmxGetCOPulseHighTime
DAQmxGetCOPulseHighTime.restype = int32
# DAQmxGetCOPulseHighTime(taskHandle, channel, data)
DAQmxGetCOPulseHighTime.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3241
DAQmxSetCOPulseHighTime = _stdcall_libraries['nicaiu'].DAQmxSetCOPulseHighTime
DAQmxSetCOPulseHighTime.restype = int32
# DAQmxSetCOPulseHighTime(taskHandle, channel, data)
DAQmxSetCOPulseHighTime.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3242
DAQmxResetCOPulseHighTime = _stdcall_libraries['nicaiu'].DAQmxResetCOPulseHighTime
DAQmxResetCOPulseHighTime.restype = int32
# DAQmxResetCOPulseHighTime(taskHandle, channel)
DAQmxResetCOPulseHighTime.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3244
DAQmxGetCOPulseLowTime = _stdcall_libraries['nicaiu'].DAQmxGetCOPulseLowTime
DAQmxGetCOPulseLowTime.restype = int32
# DAQmxGetCOPulseLowTime(taskHandle, channel, data)
DAQmxGetCOPulseLowTime.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3245
DAQmxSetCOPulseLowTime = _stdcall_libraries['nicaiu'].DAQmxSetCOPulseLowTime
DAQmxSetCOPulseLowTime.restype = int32
# DAQmxSetCOPulseLowTime(taskHandle, channel, data)
DAQmxSetCOPulseLowTime.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3246
DAQmxResetCOPulseLowTime = _stdcall_libraries['nicaiu'].DAQmxResetCOPulseLowTime
DAQmxResetCOPulseLowTime.restype = int32
# DAQmxResetCOPulseLowTime(taskHandle, channel)
DAQmxResetCOPulseLowTime.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3248
DAQmxGetCOPulseTimeInitialDelay = _stdcall_libraries['nicaiu'].DAQmxGetCOPulseTimeInitialDelay
DAQmxGetCOPulseTimeInitialDelay.restype = int32
# DAQmxGetCOPulseTimeInitialDelay(taskHandle, channel, data)
DAQmxGetCOPulseTimeInitialDelay.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3249
DAQmxSetCOPulseTimeInitialDelay = _stdcall_libraries['nicaiu'].DAQmxSetCOPulseTimeInitialDelay
DAQmxSetCOPulseTimeInitialDelay.restype = int32
# DAQmxSetCOPulseTimeInitialDelay(taskHandle, channel, data)
DAQmxSetCOPulseTimeInitialDelay.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3250
DAQmxResetCOPulseTimeInitialDelay = _stdcall_libraries['nicaiu'].DAQmxResetCOPulseTimeInitialDelay
DAQmxResetCOPulseTimeInitialDelay.restype = int32
# DAQmxResetCOPulseTimeInitialDelay(taskHandle, channel)
DAQmxResetCOPulseTimeInitialDelay.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3252
DAQmxGetCOPulseDutyCyc = _stdcall_libraries['nicaiu'].DAQmxGetCOPulseDutyCyc
DAQmxGetCOPulseDutyCyc.restype = int32
# DAQmxGetCOPulseDutyCyc(taskHandle, channel, data)
DAQmxGetCOPulseDutyCyc.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3253
DAQmxSetCOPulseDutyCyc = _stdcall_libraries['nicaiu'].DAQmxSetCOPulseDutyCyc
DAQmxSetCOPulseDutyCyc.restype = int32
# DAQmxSetCOPulseDutyCyc(taskHandle, channel, data)
DAQmxSetCOPulseDutyCyc.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3254
DAQmxResetCOPulseDutyCyc = _stdcall_libraries['nicaiu'].DAQmxResetCOPulseDutyCyc
DAQmxResetCOPulseDutyCyc.restype = int32
# DAQmxResetCOPulseDutyCyc(taskHandle, channel)
DAQmxResetCOPulseDutyCyc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3257
DAQmxGetCOPulseFreqUnits = _stdcall_libraries['nicaiu'].DAQmxGetCOPulseFreqUnits
DAQmxGetCOPulseFreqUnits.restype = int32
# DAQmxGetCOPulseFreqUnits(taskHandle, channel, data)
DAQmxGetCOPulseFreqUnits.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3258
DAQmxSetCOPulseFreqUnits = _stdcall_libraries['nicaiu'].DAQmxSetCOPulseFreqUnits
DAQmxSetCOPulseFreqUnits.restype = int32
# DAQmxSetCOPulseFreqUnits(taskHandle, channel, data)
DAQmxSetCOPulseFreqUnits.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 3259
DAQmxResetCOPulseFreqUnits = _stdcall_libraries['nicaiu'].DAQmxResetCOPulseFreqUnits
DAQmxResetCOPulseFreqUnits.restype = int32
# DAQmxResetCOPulseFreqUnits(taskHandle, channel)
DAQmxResetCOPulseFreqUnits.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3261
DAQmxGetCOPulseFreq = _stdcall_libraries['nicaiu'].DAQmxGetCOPulseFreq
DAQmxGetCOPulseFreq.restype = int32
# DAQmxGetCOPulseFreq(taskHandle, channel, data)
DAQmxGetCOPulseFreq.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3262
DAQmxSetCOPulseFreq = _stdcall_libraries['nicaiu'].DAQmxSetCOPulseFreq
DAQmxSetCOPulseFreq.restype = int32
# DAQmxSetCOPulseFreq(taskHandle, channel, data)
DAQmxSetCOPulseFreq.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3263
DAQmxResetCOPulseFreq = _stdcall_libraries['nicaiu'].DAQmxResetCOPulseFreq
DAQmxResetCOPulseFreq.restype = int32
# DAQmxResetCOPulseFreq(taskHandle, channel)
DAQmxResetCOPulseFreq.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3265
DAQmxGetCOPulseFreqInitialDelay = _stdcall_libraries['nicaiu'].DAQmxGetCOPulseFreqInitialDelay
DAQmxGetCOPulseFreqInitialDelay.restype = int32
# DAQmxGetCOPulseFreqInitialDelay(taskHandle, channel, data)
DAQmxGetCOPulseFreqInitialDelay.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3266
DAQmxSetCOPulseFreqInitialDelay = _stdcall_libraries['nicaiu'].DAQmxSetCOPulseFreqInitialDelay
DAQmxSetCOPulseFreqInitialDelay.restype = int32
# DAQmxSetCOPulseFreqInitialDelay(taskHandle, channel, data)
DAQmxSetCOPulseFreqInitialDelay.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3267
DAQmxResetCOPulseFreqInitialDelay = _stdcall_libraries['nicaiu'].DAQmxResetCOPulseFreqInitialDelay
DAQmxResetCOPulseFreqInitialDelay.restype = int32
# DAQmxResetCOPulseFreqInitialDelay(taskHandle, channel)
DAQmxResetCOPulseFreqInitialDelay.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3269
DAQmxGetCOPulseHighTicks = _stdcall_libraries['nicaiu'].DAQmxGetCOPulseHighTicks
DAQmxGetCOPulseHighTicks.restype = int32
# DAQmxGetCOPulseHighTicks(taskHandle, channel, data)
DAQmxGetCOPulseHighTicks.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 3270
DAQmxSetCOPulseHighTicks = _stdcall_libraries['nicaiu'].DAQmxSetCOPulseHighTicks
DAQmxSetCOPulseHighTicks.restype = int32
# DAQmxSetCOPulseHighTicks(taskHandle, channel, data)
DAQmxSetCOPulseHighTicks.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3271
DAQmxResetCOPulseHighTicks = _stdcall_libraries['nicaiu'].DAQmxResetCOPulseHighTicks
DAQmxResetCOPulseHighTicks.restype = int32
# DAQmxResetCOPulseHighTicks(taskHandle, channel)
DAQmxResetCOPulseHighTicks.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3273
DAQmxGetCOPulseLowTicks = _stdcall_libraries['nicaiu'].DAQmxGetCOPulseLowTicks
DAQmxGetCOPulseLowTicks.restype = int32
# DAQmxGetCOPulseLowTicks(taskHandle, channel, data)
DAQmxGetCOPulseLowTicks.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 3274
DAQmxSetCOPulseLowTicks = _stdcall_libraries['nicaiu'].DAQmxSetCOPulseLowTicks
DAQmxSetCOPulseLowTicks.restype = int32
# DAQmxSetCOPulseLowTicks(taskHandle, channel, data)
DAQmxSetCOPulseLowTicks.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3275
DAQmxResetCOPulseLowTicks = _stdcall_libraries['nicaiu'].DAQmxResetCOPulseLowTicks
DAQmxResetCOPulseLowTicks.restype = int32
# DAQmxResetCOPulseLowTicks(taskHandle, channel)
DAQmxResetCOPulseLowTicks.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3277
DAQmxGetCOPulseTicksInitialDelay = _stdcall_libraries['nicaiu'].DAQmxGetCOPulseTicksInitialDelay
DAQmxGetCOPulseTicksInitialDelay.restype = int32
# DAQmxGetCOPulseTicksInitialDelay(taskHandle, channel, data)
DAQmxGetCOPulseTicksInitialDelay.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 3278
DAQmxSetCOPulseTicksInitialDelay = _stdcall_libraries['nicaiu'].DAQmxSetCOPulseTicksInitialDelay
DAQmxSetCOPulseTicksInitialDelay.restype = int32
# DAQmxSetCOPulseTicksInitialDelay(taskHandle, channel, data)
DAQmxSetCOPulseTicksInitialDelay.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3279
DAQmxResetCOPulseTicksInitialDelay = _stdcall_libraries['nicaiu'].DAQmxResetCOPulseTicksInitialDelay
DAQmxResetCOPulseTicksInitialDelay.restype = int32
# DAQmxResetCOPulseTicksInitialDelay(taskHandle, channel)
DAQmxResetCOPulseTicksInitialDelay.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3281
DAQmxGetCOCtrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetCOCtrTimebaseSrc
DAQmxGetCOCtrTimebaseSrc.restype = int32
# DAQmxGetCOCtrTimebaseSrc(taskHandle, channel, data, bufferSize)
DAQmxGetCOCtrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 3282
DAQmxSetCOCtrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetCOCtrTimebaseSrc
DAQmxSetCOCtrTimebaseSrc.restype = int32
# DAQmxSetCOCtrTimebaseSrc(taskHandle, channel, data)
DAQmxSetCOCtrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 3283
DAQmxResetCOCtrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetCOCtrTimebaseSrc
DAQmxResetCOCtrTimebaseSrc.restype = int32
# DAQmxResetCOCtrTimebaseSrc(taskHandle, channel)
DAQmxResetCOCtrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3285
DAQmxGetCOCtrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetCOCtrTimebaseRate
DAQmxGetCOCtrTimebaseRate.restype = int32
# DAQmxGetCOCtrTimebaseRate(taskHandle, channel, data)
DAQmxGetCOCtrTimebaseRate.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3286
DAQmxSetCOCtrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetCOCtrTimebaseRate
DAQmxSetCOCtrTimebaseRate.restype = int32
# DAQmxSetCOCtrTimebaseRate(taskHandle, channel, data)
DAQmxSetCOCtrTimebaseRate.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3287
DAQmxResetCOCtrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetCOCtrTimebaseRate
DAQmxResetCOCtrTimebaseRate.restype = int32
# DAQmxResetCOCtrTimebaseRate(taskHandle, channel)
DAQmxResetCOCtrTimebaseRate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3290
DAQmxGetCOCtrTimebaseActiveEdge = _stdcall_libraries['nicaiu'].DAQmxGetCOCtrTimebaseActiveEdge
DAQmxGetCOCtrTimebaseActiveEdge.restype = int32
# DAQmxGetCOCtrTimebaseActiveEdge(taskHandle, channel, data)
DAQmxGetCOCtrTimebaseActiveEdge.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3291
DAQmxSetCOCtrTimebaseActiveEdge = _stdcall_libraries['nicaiu'].DAQmxSetCOCtrTimebaseActiveEdge
DAQmxSetCOCtrTimebaseActiveEdge.restype = int32
# DAQmxSetCOCtrTimebaseActiveEdge(taskHandle, channel, data)
DAQmxSetCOCtrTimebaseActiveEdge.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 3292
DAQmxResetCOCtrTimebaseActiveEdge = _stdcall_libraries['nicaiu'].DAQmxResetCOCtrTimebaseActiveEdge
DAQmxResetCOCtrTimebaseActiveEdge.restype = int32
# DAQmxResetCOCtrTimebaseActiveEdge(taskHandle, channel)
DAQmxResetCOCtrTimebaseActiveEdge.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3294
DAQmxGetCOCtrTimebaseDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetCOCtrTimebaseDigFltrEnable
DAQmxGetCOCtrTimebaseDigFltrEnable.restype = int32
# DAQmxGetCOCtrTimebaseDigFltrEnable(taskHandle, channel, data)
DAQmxGetCOCtrTimebaseDigFltrEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3295
DAQmxSetCOCtrTimebaseDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetCOCtrTimebaseDigFltrEnable
DAQmxSetCOCtrTimebaseDigFltrEnable.restype = int32
# DAQmxSetCOCtrTimebaseDigFltrEnable(taskHandle, channel, data)
DAQmxSetCOCtrTimebaseDigFltrEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 3296
DAQmxResetCOCtrTimebaseDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetCOCtrTimebaseDigFltrEnable
DAQmxResetCOCtrTimebaseDigFltrEnable.restype = int32
# DAQmxResetCOCtrTimebaseDigFltrEnable(taskHandle, channel)
DAQmxResetCOCtrTimebaseDigFltrEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3298
DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth
DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth.restype = int32
# DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3299
DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth
DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth.restype = int32
# DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth(taskHandle, channel, data)
DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3300
DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth
DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth.restype = int32
# DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth(taskHandle, channel)
DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3302
DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc
DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc.restype = int32
# DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc(taskHandle, channel, data, bufferSize)
DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 3303
DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc
DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc.restype = int32
# DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc(taskHandle, channel, data)
DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 3304
DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc
DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc.restype = int32
# DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc(taskHandle, channel)
DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3306
DAQmxGetCOCtrTimebaseDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetCOCtrTimebaseDigFltrTimebaseRate
DAQmxGetCOCtrTimebaseDigFltrTimebaseRate.restype = int32
# DAQmxGetCOCtrTimebaseDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxGetCOCtrTimebaseDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, POINTER(float64)]
# NIDAQmx.h 3307
DAQmxSetCOCtrTimebaseDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetCOCtrTimebaseDigFltrTimebaseRate
DAQmxSetCOCtrTimebaseDigFltrTimebaseRate.restype = int32
# DAQmxSetCOCtrTimebaseDigFltrTimebaseRate(taskHandle, channel, data)
DAQmxSetCOCtrTimebaseDigFltrTimebaseRate.argtypes = [TaskHandle, STRING, float64]
# NIDAQmx.h 3308
DAQmxResetCOCtrTimebaseDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetCOCtrTimebaseDigFltrTimebaseRate
DAQmxResetCOCtrTimebaseDigFltrTimebaseRate.restype = int32
# DAQmxResetCOCtrTimebaseDigFltrTimebaseRate(taskHandle, channel)
DAQmxResetCOCtrTimebaseDigFltrTimebaseRate.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3310
DAQmxGetCOCtrTimebaseDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetCOCtrTimebaseDigSyncEnable
DAQmxGetCOCtrTimebaseDigSyncEnable.restype = int32
# DAQmxGetCOCtrTimebaseDigSyncEnable(taskHandle, channel, data)
DAQmxGetCOCtrTimebaseDigSyncEnable.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3311
DAQmxSetCOCtrTimebaseDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetCOCtrTimebaseDigSyncEnable
DAQmxSetCOCtrTimebaseDigSyncEnable.restype = int32
# DAQmxSetCOCtrTimebaseDigSyncEnable(taskHandle, channel, data)
DAQmxSetCOCtrTimebaseDigSyncEnable.argtypes = [TaskHandle, STRING, bool32]
# NIDAQmx.h 3312
DAQmxResetCOCtrTimebaseDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetCOCtrTimebaseDigSyncEnable
DAQmxResetCOCtrTimebaseDigSyncEnable.restype = int32
# DAQmxResetCOCtrTimebaseDigSyncEnable(taskHandle, channel)
DAQmxResetCOCtrTimebaseDigSyncEnable.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3314
DAQmxGetCOCount = _stdcall_libraries['nicaiu'].DAQmxGetCOCount
DAQmxGetCOCount.restype = int32
# DAQmxGetCOCount(taskHandle, channel, data)
DAQmxGetCOCount.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 3317
DAQmxGetCOOutputState = _stdcall_libraries['nicaiu'].DAQmxGetCOOutputState
DAQmxGetCOOutputState.restype = int32
# DAQmxGetCOOutputState(taskHandle, channel, data)
DAQmxGetCOOutputState.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3319
DAQmxGetCOAutoIncrCnt = _stdcall_libraries['nicaiu'].DAQmxGetCOAutoIncrCnt
DAQmxGetCOAutoIncrCnt.restype = int32
# DAQmxGetCOAutoIncrCnt(taskHandle, channel, data)
DAQmxGetCOAutoIncrCnt.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 3320
DAQmxSetCOAutoIncrCnt = _stdcall_libraries['nicaiu'].DAQmxSetCOAutoIncrCnt
DAQmxSetCOAutoIncrCnt.restype = int32
# DAQmxSetCOAutoIncrCnt(taskHandle, channel, data)
DAQmxSetCOAutoIncrCnt.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3321
DAQmxResetCOAutoIncrCnt = _stdcall_libraries['nicaiu'].DAQmxResetCOAutoIncrCnt
DAQmxResetCOAutoIncrCnt.restype = int32
# DAQmxResetCOAutoIncrCnt(taskHandle, channel)
DAQmxResetCOAutoIncrCnt.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3324
DAQmxGetCOCtrTimebaseMasterTimebaseDiv = _stdcall_libraries['nicaiu'].DAQmxGetCOCtrTimebaseMasterTimebaseDiv
DAQmxGetCOCtrTimebaseMasterTimebaseDiv.restype = int32
# DAQmxGetCOCtrTimebaseMasterTimebaseDiv(taskHandle, channel, data)
DAQmxGetCOCtrTimebaseMasterTimebaseDiv.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 3325
DAQmxSetCOCtrTimebaseMasterTimebaseDiv = _stdcall_libraries['nicaiu'].DAQmxSetCOCtrTimebaseMasterTimebaseDiv
DAQmxSetCOCtrTimebaseMasterTimebaseDiv.restype = int32
# DAQmxSetCOCtrTimebaseMasterTimebaseDiv(taskHandle, channel, data)
DAQmxSetCOCtrTimebaseMasterTimebaseDiv.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3326
DAQmxResetCOCtrTimebaseMasterTimebaseDiv = _stdcall_libraries['nicaiu'].DAQmxResetCOCtrTimebaseMasterTimebaseDiv
DAQmxResetCOCtrTimebaseMasterTimebaseDiv.restype = int32
# DAQmxResetCOCtrTimebaseMasterTimebaseDiv(taskHandle, channel)
DAQmxResetCOCtrTimebaseMasterTimebaseDiv.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3328
DAQmxGetCOPulseDone = _stdcall_libraries['nicaiu'].DAQmxGetCOPulseDone
DAQmxGetCOPulseDone.restype = int32
# DAQmxGetCOPulseDone(taskHandle, channel, data)
DAQmxGetCOPulseDone.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3331
DAQmxGetCOPrescaler = _stdcall_libraries['nicaiu'].DAQmxGetCOPrescaler
DAQmxGetCOPrescaler.restype = int32
# DAQmxGetCOPrescaler(taskHandle, channel, data)
DAQmxGetCOPrescaler.argtypes = [TaskHandle, STRING, POINTER(uInt32)]
# NIDAQmx.h 3332
DAQmxSetCOPrescaler = _stdcall_libraries['nicaiu'].DAQmxSetCOPrescaler
DAQmxSetCOPrescaler.restype = int32
# DAQmxSetCOPrescaler(taskHandle, channel, data)
DAQmxSetCOPrescaler.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3333
DAQmxResetCOPrescaler = _stdcall_libraries['nicaiu'].DAQmxResetCOPrescaler
DAQmxResetCOPrescaler.restype = int32
# DAQmxResetCOPrescaler(taskHandle, channel)
DAQmxResetCOPrescaler.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3335
DAQmxGetCORdyForNewVal = _stdcall_libraries['nicaiu'].DAQmxGetCORdyForNewVal
DAQmxGetCORdyForNewVal.restype = int32
# DAQmxGetCORdyForNewVal(taskHandle, channel, data)
DAQmxGetCORdyForNewVal.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3338
DAQmxGetChanType = _stdcall_libraries['nicaiu'].DAQmxGetChanType
DAQmxGetChanType.restype = int32
# DAQmxGetChanType(taskHandle, channel, data)
DAQmxGetChanType.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 3340
DAQmxGetPhysicalChanName = _stdcall_libraries['nicaiu'].DAQmxGetPhysicalChanName
DAQmxGetPhysicalChanName.restype = int32
# DAQmxGetPhysicalChanName(taskHandle, channel, data, bufferSize)
DAQmxGetPhysicalChanName.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 3342
DAQmxGetChanDescr = _stdcall_libraries['nicaiu'].DAQmxGetChanDescr
DAQmxGetChanDescr.restype = int32
# DAQmxGetChanDescr(taskHandle, channel, data, bufferSize)
DAQmxGetChanDescr.argtypes = [TaskHandle, STRING, STRING, uInt32]
# NIDAQmx.h 3343
DAQmxSetChanDescr = _stdcall_libraries['nicaiu'].DAQmxSetChanDescr
DAQmxSetChanDescr.restype = int32
# DAQmxSetChanDescr(taskHandle, channel, data)
DAQmxSetChanDescr.argtypes = [TaskHandle, STRING, STRING]
# NIDAQmx.h 3344
DAQmxResetChanDescr = _stdcall_libraries['nicaiu'].DAQmxResetChanDescr
DAQmxResetChanDescr.restype = int32
# DAQmxResetChanDescr(taskHandle, channel)
DAQmxResetChanDescr.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3346
DAQmxGetChanIsGlobal = _stdcall_libraries['nicaiu'].DAQmxGetChanIsGlobal
DAQmxGetChanIsGlobal.restype = int32
# DAQmxGetChanIsGlobal(taskHandle, channel, data)
DAQmxGetChanIsGlobal.argtypes = [TaskHandle, STRING, POINTER(bool32)]
# NIDAQmx.h 3350
DAQmxGetExportedAIConvClkOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExportedAIConvClkOutputTerm
DAQmxGetExportedAIConvClkOutputTerm.restype = int32
# DAQmxGetExportedAIConvClkOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExportedAIConvClkOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3351
DAQmxSetExportedAIConvClkOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExportedAIConvClkOutputTerm
DAQmxSetExportedAIConvClkOutputTerm.restype = int32
# DAQmxSetExportedAIConvClkOutputTerm(taskHandle, data)
DAQmxSetExportedAIConvClkOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3352
DAQmxResetExportedAIConvClkOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExportedAIConvClkOutputTerm
DAQmxResetExportedAIConvClkOutputTerm.restype = int32
# DAQmxResetExportedAIConvClkOutputTerm(taskHandle)
DAQmxResetExportedAIConvClkOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3355
DAQmxGetExportedAIConvClkPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxGetExportedAIConvClkPulsePolarity
DAQmxGetExportedAIConvClkPulsePolarity.restype = int32
# DAQmxGetExportedAIConvClkPulsePolarity(taskHandle, data)
DAQmxGetExportedAIConvClkPulsePolarity.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3357
DAQmxGetExported10MHzRefClkOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExported10MHzRefClkOutputTerm
DAQmxGetExported10MHzRefClkOutputTerm.restype = int32
# DAQmxGetExported10MHzRefClkOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExported10MHzRefClkOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3358
DAQmxSetExported10MHzRefClkOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExported10MHzRefClkOutputTerm
DAQmxSetExported10MHzRefClkOutputTerm.restype = int32
# DAQmxSetExported10MHzRefClkOutputTerm(taskHandle, data)
DAQmxSetExported10MHzRefClkOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3359
DAQmxResetExported10MHzRefClkOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExported10MHzRefClkOutputTerm
DAQmxResetExported10MHzRefClkOutputTerm.restype = int32
# DAQmxResetExported10MHzRefClkOutputTerm(taskHandle)
DAQmxResetExported10MHzRefClkOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3361
DAQmxGetExported20MHzTimebaseOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExported20MHzTimebaseOutputTerm
DAQmxGetExported20MHzTimebaseOutputTerm.restype = int32
# DAQmxGetExported20MHzTimebaseOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExported20MHzTimebaseOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3362
DAQmxSetExported20MHzTimebaseOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExported20MHzTimebaseOutputTerm
DAQmxSetExported20MHzTimebaseOutputTerm.restype = int32
# DAQmxSetExported20MHzTimebaseOutputTerm(taskHandle, data)
DAQmxSetExported20MHzTimebaseOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3363
DAQmxResetExported20MHzTimebaseOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExported20MHzTimebaseOutputTerm
DAQmxResetExported20MHzTimebaseOutputTerm.restype = int32
# DAQmxResetExported20MHzTimebaseOutputTerm(taskHandle)
DAQmxResetExported20MHzTimebaseOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3366
DAQmxGetExportedSampClkOutputBehavior = _stdcall_libraries['nicaiu'].DAQmxGetExportedSampClkOutputBehavior
DAQmxGetExportedSampClkOutputBehavior.restype = int32
# DAQmxGetExportedSampClkOutputBehavior(taskHandle, data)
DAQmxGetExportedSampClkOutputBehavior.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3367
DAQmxSetExportedSampClkOutputBehavior = _stdcall_libraries['nicaiu'].DAQmxSetExportedSampClkOutputBehavior
DAQmxSetExportedSampClkOutputBehavior.restype = int32
# DAQmxSetExportedSampClkOutputBehavior(taskHandle, data)
DAQmxSetExportedSampClkOutputBehavior.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3368
DAQmxResetExportedSampClkOutputBehavior = _stdcall_libraries['nicaiu'].DAQmxResetExportedSampClkOutputBehavior
DAQmxResetExportedSampClkOutputBehavior.restype = int32
# DAQmxResetExportedSampClkOutputBehavior(taskHandle)
DAQmxResetExportedSampClkOutputBehavior.argtypes = [TaskHandle]
# NIDAQmx.h 3370
DAQmxGetExportedSampClkOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExportedSampClkOutputTerm
DAQmxGetExportedSampClkOutputTerm.restype = int32
# DAQmxGetExportedSampClkOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExportedSampClkOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3371
DAQmxSetExportedSampClkOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExportedSampClkOutputTerm
DAQmxSetExportedSampClkOutputTerm.restype = int32
# DAQmxSetExportedSampClkOutputTerm(taskHandle, data)
DAQmxSetExportedSampClkOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3372
DAQmxResetExportedSampClkOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExportedSampClkOutputTerm
DAQmxResetExportedSampClkOutputTerm.restype = int32
# DAQmxResetExportedSampClkOutputTerm(taskHandle)
DAQmxResetExportedSampClkOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3375
DAQmxGetExportedSampClkPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxGetExportedSampClkPulsePolarity
DAQmxGetExportedSampClkPulsePolarity.restype = int32
# DAQmxGetExportedSampClkPulsePolarity(taskHandle, data)
DAQmxGetExportedSampClkPulsePolarity.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3376
DAQmxSetExportedSampClkPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxSetExportedSampClkPulsePolarity
DAQmxSetExportedSampClkPulsePolarity.restype = int32
# DAQmxSetExportedSampClkPulsePolarity(taskHandle, data)
DAQmxSetExportedSampClkPulsePolarity.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3377
DAQmxResetExportedSampClkPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxResetExportedSampClkPulsePolarity
DAQmxResetExportedSampClkPulsePolarity.restype = int32
# DAQmxResetExportedSampClkPulsePolarity(taskHandle)
DAQmxResetExportedSampClkPulsePolarity.argtypes = [TaskHandle]
# NIDAQmx.h 3379
DAQmxGetExportedSampClkTimebaseOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExportedSampClkTimebaseOutputTerm
DAQmxGetExportedSampClkTimebaseOutputTerm.restype = int32
# DAQmxGetExportedSampClkTimebaseOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExportedSampClkTimebaseOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3380
DAQmxSetExportedSampClkTimebaseOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExportedSampClkTimebaseOutputTerm
DAQmxSetExportedSampClkTimebaseOutputTerm.restype = int32
# DAQmxSetExportedSampClkTimebaseOutputTerm(taskHandle, data)
DAQmxSetExportedSampClkTimebaseOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3381
DAQmxResetExportedSampClkTimebaseOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExportedSampClkTimebaseOutputTerm
DAQmxResetExportedSampClkTimebaseOutputTerm.restype = int32
# DAQmxResetExportedSampClkTimebaseOutputTerm(taskHandle)
DAQmxResetExportedSampClkTimebaseOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3383
DAQmxGetExportedDividedSampClkTimebaseOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExportedDividedSampClkTimebaseOutputTerm
DAQmxGetExportedDividedSampClkTimebaseOutputTerm.restype = int32
# DAQmxGetExportedDividedSampClkTimebaseOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExportedDividedSampClkTimebaseOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3384
DAQmxSetExportedDividedSampClkTimebaseOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExportedDividedSampClkTimebaseOutputTerm
DAQmxSetExportedDividedSampClkTimebaseOutputTerm.restype = int32
# DAQmxSetExportedDividedSampClkTimebaseOutputTerm(taskHandle, data)
DAQmxSetExportedDividedSampClkTimebaseOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3385
DAQmxResetExportedDividedSampClkTimebaseOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExportedDividedSampClkTimebaseOutputTerm
DAQmxResetExportedDividedSampClkTimebaseOutputTerm.restype = int32
# DAQmxResetExportedDividedSampClkTimebaseOutputTerm(taskHandle)
DAQmxResetExportedDividedSampClkTimebaseOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3387
DAQmxGetExportedAdvTrigOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExportedAdvTrigOutputTerm
DAQmxGetExportedAdvTrigOutputTerm.restype = int32
# DAQmxGetExportedAdvTrigOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExportedAdvTrigOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3388
DAQmxSetExportedAdvTrigOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExportedAdvTrigOutputTerm
DAQmxSetExportedAdvTrigOutputTerm.restype = int32
# DAQmxSetExportedAdvTrigOutputTerm(taskHandle, data)
DAQmxSetExportedAdvTrigOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3389
DAQmxResetExportedAdvTrigOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExportedAdvTrigOutputTerm
DAQmxResetExportedAdvTrigOutputTerm.restype = int32
# DAQmxResetExportedAdvTrigOutputTerm(taskHandle)
DAQmxResetExportedAdvTrigOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3392
DAQmxGetExportedAdvTrigPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxGetExportedAdvTrigPulsePolarity
DAQmxGetExportedAdvTrigPulsePolarity.restype = int32
# DAQmxGetExportedAdvTrigPulsePolarity(taskHandle, data)
DAQmxGetExportedAdvTrigPulsePolarity.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3395
DAQmxGetExportedAdvTrigPulseWidthUnits = _stdcall_libraries['nicaiu'].DAQmxGetExportedAdvTrigPulseWidthUnits
DAQmxGetExportedAdvTrigPulseWidthUnits.restype = int32
# DAQmxGetExportedAdvTrigPulseWidthUnits(taskHandle, data)
DAQmxGetExportedAdvTrigPulseWidthUnits.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3396
DAQmxSetExportedAdvTrigPulseWidthUnits = _stdcall_libraries['nicaiu'].DAQmxSetExportedAdvTrigPulseWidthUnits
DAQmxSetExportedAdvTrigPulseWidthUnits.restype = int32
# DAQmxSetExportedAdvTrigPulseWidthUnits(taskHandle, data)
DAQmxSetExportedAdvTrigPulseWidthUnits.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3397
DAQmxResetExportedAdvTrigPulseWidthUnits = _stdcall_libraries['nicaiu'].DAQmxResetExportedAdvTrigPulseWidthUnits
DAQmxResetExportedAdvTrigPulseWidthUnits.restype = int32
# DAQmxResetExportedAdvTrigPulseWidthUnits(taskHandle)
DAQmxResetExportedAdvTrigPulseWidthUnits.argtypes = [TaskHandle]
# NIDAQmx.h 3399
DAQmxGetExportedAdvTrigPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetExportedAdvTrigPulseWidth
DAQmxGetExportedAdvTrigPulseWidth.restype = int32
# DAQmxGetExportedAdvTrigPulseWidth(taskHandle, data)
DAQmxGetExportedAdvTrigPulseWidth.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3400
DAQmxSetExportedAdvTrigPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetExportedAdvTrigPulseWidth
DAQmxSetExportedAdvTrigPulseWidth.restype = int32
# DAQmxSetExportedAdvTrigPulseWidth(taskHandle, data)
DAQmxSetExportedAdvTrigPulseWidth.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3401
DAQmxResetExportedAdvTrigPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetExportedAdvTrigPulseWidth
DAQmxResetExportedAdvTrigPulseWidth.restype = int32
# DAQmxResetExportedAdvTrigPulseWidth(taskHandle)
DAQmxResetExportedAdvTrigPulseWidth.argtypes = [TaskHandle]
# NIDAQmx.h 3403
DAQmxGetExportedRefTrigOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExportedRefTrigOutputTerm
DAQmxGetExportedRefTrigOutputTerm.restype = int32
# DAQmxGetExportedRefTrigOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExportedRefTrigOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3404
DAQmxSetExportedRefTrigOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExportedRefTrigOutputTerm
DAQmxSetExportedRefTrigOutputTerm.restype = int32
# DAQmxSetExportedRefTrigOutputTerm(taskHandle, data)
DAQmxSetExportedRefTrigOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3405
DAQmxResetExportedRefTrigOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExportedRefTrigOutputTerm
DAQmxResetExportedRefTrigOutputTerm.restype = int32
# DAQmxResetExportedRefTrigOutputTerm(taskHandle)
DAQmxResetExportedRefTrigOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3407
DAQmxGetExportedStartTrigOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExportedStartTrigOutputTerm
DAQmxGetExportedStartTrigOutputTerm.restype = int32
# DAQmxGetExportedStartTrigOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExportedStartTrigOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3408
DAQmxSetExportedStartTrigOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExportedStartTrigOutputTerm
DAQmxSetExportedStartTrigOutputTerm.restype = int32
# DAQmxSetExportedStartTrigOutputTerm(taskHandle, data)
DAQmxSetExportedStartTrigOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3409
DAQmxResetExportedStartTrigOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExportedStartTrigOutputTerm
DAQmxResetExportedStartTrigOutputTerm.restype = int32
# DAQmxResetExportedStartTrigOutputTerm(taskHandle)
DAQmxResetExportedStartTrigOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3411
DAQmxGetExportedAdvCmpltEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExportedAdvCmpltEventOutputTerm
DAQmxGetExportedAdvCmpltEventOutputTerm.restype = int32
# DAQmxGetExportedAdvCmpltEventOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExportedAdvCmpltEventOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3412
DAQmxSetExportedAdvCmpltEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExportedAdvCmpltEventOutputTerm
DAQmxSetExportedAdvCmpltEventOutputTerm.restype = int32
# DAQmxSetExportedAdvCmpltEventOutputTerm(taskHandle, data)
DAQmxSetExportedAdvCmpltEventOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3413
DAQmxResetExportedAdvCmpltEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExportedAdvCmpltEventOutputTerm
DAQmxResetExportedAdvCmpltEventOutputTerm.restype = int32
# DAQmxResetExportedAdvCmpltEventOutputTerm(taskHandle)
DAQmxResetExportedAdvCmpltEventOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3415
DAQmxGetExportedAdvCmpltEventDelay = _stdcall_libraries['nicaiu'].DAQmxGetExportedAdvCmpltEventDelay
DAQmxGetExportedAdvCmpltEventDelay.restype = int32
# DAQmxGetExportedAdvCmpltEventDelay(taskHandle, data)
DAQmxGetExportedAdvCmpltEventDelay.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3416
DAQmxSetExportedAdvCmpltEventDelay = _stdcall_libraries['nicaiu'].DAQmxSetExportedAdvCmpltEventDelay
DAQmxSetExportedAdvCmpltEventDelay.restype = int32
# DAQmxSetExportedAdvCmpltEventDelay(taskHandle, data)
DAQmxSetExportedAdvCmpltEventDelay.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3417
DAQmxResetExportedAdvCmpltEventDelay = _stdcall_libraries['nicaiu'].DAQmxResetExportedAdvCmpltEventDelay
DAQmxResetExportedAdvCmpltEventDelay.restype = int32
# DAQmxResetExportedAdvCmpltEventDelay(taskHandle)
DAQmxResetExportedAdvCmpltEventDelay.argtypes = [TaskHandle]
# NIDAQmx.h 3420
DAQmxGetExportedAdvCmpltEventPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxGetExportedAdvCmpltEventPulsePolarity
DAQmxGetExportedAdvCmpltEventPulsePolarity.restype = int32
# DAQmxGetExportedAdvCmpltEventPulsePolarity(taskHandle, data)
DAQmxGetExportedAdvCmpltEventPulsePolarity.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3421
DAQmxSetExportedAdvCmpltEventPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxSetExportedAdvCmpltEventPulsePolarity
DAQmxSetExportedAdvCmpltEventPulsePolarity.restype = int32
# DAQmxSetExportedAdvCmpltEventPulsePolarity(taskHandle, data)
DAQmxSetExportedAdvCmpltEventPulsePolarity.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3422
DAQmxResetExportedAdvCmpltEventPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxResetExportedAdvCmpltEventPulsePolarity
DAQmxResetExportedAdvCmpltEventPulsePolarity.restype = int32
# DAQmxResetExportedAdvCmpltEventPulsePolarity(taskHandle)
DAQmxResetExportedAdvCmpltEventPulsePolarity.argtypes = [TaskHandle]
# NIDAQmx.h 3424
DAQmxGetExportedAdvCmpltEventPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetExportedAdvCmpltEventPulseWidth
DAQmxGetExportedAdvCmpltEventPulseWidth.restype = int32
# DAQmxGetExportedAdvCmpltEventPulseWidth(taskHandle, data)
DAQmxGetExportedAdvCmpltEventPulseWidth.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3425
DAQmxSetExportedAdvCmpltEventPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetExportedAdvCmpltEventPulseWidth
DAQmxSetExportedAdvCmpltEventPulseWidth.restype = int32
# DAQmxSetExportedAdvCmpltEventPulseWidth(taskHandle, data)
DAQmxSetExportedAdvCmpltEventPulseWidth.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3426
DAQmxResetExportedAdvCmpltEventPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetExportedAdvCmpltEventPulseWidth
DAQmxResetExportedAdvCmpltEventPulseWidth.restype = int32
# DAQmxResetExportedAdvCmpltEventPulseWidth(taskHandle)
DAQmxResetExportedAdvCmpltEventPulseWidth.argtypes = [TaskHandle]
# NIDAQmx.h 3428
DAQmxGetExportedAIHoldCmpltEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExportedAIHoldCmpltEventOutputTerm
DAQmxGetExportedAIHoldCmpltEventOutputTerm.restype = int32
# DAQmxGetExportedAIHoldCmpltEventOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExportedAIHoldCmpltEventOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3429
DAQmxSetExportedAIHoldCmpltEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExportedAIHoldCmpltEventOutputTerm
DAQmxSetExportedAIHoldCmpltEventOutputTerm.restype = int32
# DAQmxSetExportedAIHoldCmpltEventOutputTerm(taskHandle, data)
DAQmxSetExportedAIHoldCmpltEventOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3430
DAQmxResetExportedAIHoldCmpltEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExportedAIHoldCmpltEventOutputTerm
DAQmxResetExportedAIHoldCmpltEventOutputTerm.restype = int32
# DAQmxResetExportedAIHoldCmpltEventOutputTerm(taskHandle)
DAQmxResetExportedAIHoldCmpltEventOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3433
DAQmxGetExportedAIHoldCmpltEventPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxGetExportedAIHoldCmpltEventPulsePolarity
DAQmxGetExportedAIHoldCmpltEventPulsePolarity.restype = int32
# DAQmxGetExportedAIHoldCmpltEventPulsePolarity(taskHandle, data)
DAQmxGetExportedAIHoldCmpltEventPulsePolarity.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3434
DAQmxSetExportedAIHoldCmpltEventPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxSetExportedAIHoldCmpltEventPulsePolarity
DAQmxSetExportedAIHoldCmpltEventPulsePolarity.restype = int32
# DAQmxSetExportedAIHoldCmpltEventPulsePolarity(taskHandle, data)
DAQmxSetExportedAIHoldCmpltEventPulsePolarity.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3435
DAQmxResetExportedAIHoldCmpltEventPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxResetExportedAIHoldCmpltEventPulsePolarity
DAQmxResetExportedAIHoldCmpltEventPulsePolarity.restype = int32
# DAQmxResetExportedAIHoldCmpltEventPulsePolarity(taskHandle)
DAQmxResetExportedAIHoldCmpltEventPulsePolarity.argtypes = [TaskHandle]
# NIDAQmx.h 3437
DAQmxGetExportedChangeDetectEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExportedChangeDetectEventOutputTerm
DAQmxGetExportedChangeDetectEventOutputTerm.restype = int32
# DAQmxGetExportedChangeDetectEventOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExportedChangeDetectEventOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3438
DAQmxSetExportedChangeDetectEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExportedChangeDetectEventOutputTerm
DAQmxSetExportedChangeDetectEventOutputTerm.restype = int32
# DAQmxSetExportedChangeDetectEventOutputTerm(taskHandle, data)
DAQmxSetExportedChangeDetectEventOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3439
DAQmxResetExportedChangeDetectEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExportedChangeDetectEventOutputTerm
DAQmxResetExportedChangeDetectEventOutputTerm.restype = int32
# DAQmxResetExportedChangeDetectEventOutputTerm(taskHandle)
DAQmxResetExportedChangeDetectEventOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3442
DAQmxGetExportedChangeDetectEventPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxGetExportedChangeDetectEventPulsePolarity
DAQmxGetExportedChangeDetectEventPulsePolarity.restype = int32
# DAQmxGetExportedChangeDetectEventPulsePolarity(taskHandle, data)
DAQmxGetExportedChangeDetectEventPulsePolarity.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3443
DAQmxSetExportedChangeDetectEventPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxSetExportedChangeDetectEventPulsePolarity
DAQmxSetExportedChangeDetectEventPulsePolarity.restype = int32
# DAQmxSetExportedChangeDetectEventPulsePolarity(taskHandle, data)
DAQmxSetExportedChangeDetectEventPulsePolarity.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3444
DAQmxResetExportedChangeDetectEventPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxResetExportedChangeDetectEventPulsePolarity
DAQmxResetExportedChangeDetectEventPulsePolarity.restype = int32
# DAQmxResetExportedChangeDetectEventPulsePolarity(taskHandle)
DAQmxResetExportedChangeDetectEventPulsePolarity.argtypes = [TaskHandle]
# NIDAQmx.h 3446
DAQmxGetExportedCtrOutEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExportedCtrOutEventOutputTerm
DAQmxGetExportedCtrOutEventOutputTerm.restype = int32
# DAQmxGetExportedCtrOutEventOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExportedCtrOutEventOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3447
DAQmxSetExportedCtrOutEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExportedCtrOutEventOutputTerm
DAQmxSetExportedCtrOutEventOutputTerm.restype = int32
# DAQmxSetExportedCtrOutEventOutputTerm(taskHandle, data)
DAQmxSetExportedCtrOutEventOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3448
DAQmxResetExportedCtrOutEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExportedCtrOutEventOutputTerm
DAQmxResetExportedCtrOutEventOutputTerm.restype = int32
# DAQmxResetExportedCtrOutEventOutputTerm(taskHandle)
DAQmxResetExportedCtrOutEventOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3451
DAQmxGetExportedCtrOutEventOutputBehavior = _stdcall_libraries['nicaiu'].DAQmxGetExportedCtrOutEventOutputBehavior
DAQmxGetExportedCtrOutEventOutputBehavior.restype = int32
# DAQmxGetExportedCtrOutEventOutputBehavior(taskHandle, data)
DAQmxGetExportedCtrOutEventOutputBehavior.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3452
DAQmxSetExportedCtrOutEventOutputBehavior = _stdcall_libraries['nicaiu'].DAQmxSetExportedCtrOutEventOutputBehavior
DAQmxSetExportedCtrOutEventOutputBehavior.restype = int32
# DAQmxSetExportedCtrOutEventOutputBehavior(taskHandle, data)
DAQmxSetExportedCtrOutEventOutputBehavior.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3453
DAQmxResetExportedCtrOutEventOutputBehavior = _stdcall_libraries['nicaiu'].DAQmxResetExportedCtrOutEventOutputBehavior
DAQmxResetExportedCtrOutEventOutputBehavior.restype = int32
# DAQmxResetExportedCtrOutEventOutputBehavior(taskHandle)
DAQmxResetExportedCtrOutEventOutputBehavior.argtypes = [TaskHandle]
# NIDAQmx.h 3456
DAQmxGetExportedCtrOutEventPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxGetExportedCtrOutEventPulsePolarity
DAQmxGetExportedCtrOutEventPulsePolarity.restype = int32
# DAQmxGetExportedCtrOutEventPulsePolarity(taskHandle, data)
DAQmxGetExportedCtrOutEventPulsePolarity.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3457
DAQmxSetExportedCtrOutEventPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxSetExportedCtrOutEventPulsePolarity
DAQmxSetExportedCtrOutEventPulsePolarity.restype = int32
# DAQmxSetExportedCtrOutEventPulsePolarity(taskHandle, data)
DAQmxSetExportedCtrOutEventPulsePolarity.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3458
DAQmxResetExportedCtrOutEventPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxResetExportedCtrOutEventPulsePolarity
DAQmxResetExportedCtrOutEventPulsePolarity.restype = int32
# DAQmxResetExportedCtrOutEventPulsePolarity(taskHandle)
DAQmxResetExportedCtrOutEventPulsePolarity.argtypes = [TaskHandle]
# NIDAQmx.h 3461
DAQmxGetExportedCtrOutEventToggleIdleState = _stdcall_libraries['nicaiu'].DAQmxGetExportedCtrOutEventToggleIdleState
DAQmxGetExportedCtrOutEventToggleIdleState.restype = int32
# DAQmxGetExportedCtrOutEventToggleIdleState(taskHandle, data)
DAQmxGetExportedCtrOutEventToggleIdleState.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3462
DAQmxSetExportedCtrOutEventToggleIdleState = _stdcall_libraries['nicaiu'].DAQmxSetExportedCtrOutEventToggleIdleState
DAQmxSetExportedCtrOutEventToggleIdleState.restype = int32
# DAQmxSetExportedCtrOutEventToggleIdleState(taskHandle, data)
DAQmxSetExportedCtrOutEventToggleIdleState.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3463
DAQmxResetExportedCtrOutEventToggleIdleState = _stdcall_libraries['nicaiu'].DAQmxResetExportedCtrOutEventToggleIdleState
DAQmxResetExportedCtrOutEventToggleIdleState.restype = int32
# DAQmxResetExportedCtrOutEventToggleIdleState(taskHandle)
DAQmxResetExportedCtrOutEventToggleIdleState.argtypes = [TaskHandle]
# NIDAQmx.h 3465
DAQmxGetExportedHshkEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExportedHshkEventOutputTerm
DAQmxGetExportedHshkEventOutputTerm.restype = int32
# DAQmxGetExportedHshkEventOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExportedHshkEventOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3466
DAQmxSetExportedHshkEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExportedHshkEventOutputTerm
DAQmxSetExportedHshkEventOutputTerm.restype = int32
# DAQmxSetExportedHshkEventOutputTerm(taskHandle, data)
DAQmxSetExportedHshkEventOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3467
DAQmxResetExportedHshkEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExportedHshkEventOutputTerm
DAQmxResetExportedHshkEventOutputTerm.restype = int32
# DAQmxResetExportedHshkEventOutputTerm(taskHandle)
DAQmxResetExportedHshkEventOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3470
DAQmxGetExportedHshkEventOutputBehavior = _stdcall_libraries['nicaiu'].DAQmxGetExportedHshkEventOutputBehavior
DAQmxGetExportedHshkEventOutputBehavior.restype = int32
# DAQmxGetExportedHshkEventOutputBehavior(taskHandle, data)
DAQmxGetExportedHshkEventOutputBehavior.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3471
DAQmxSetExportedHshkEventOutputBehavior = _stdcall_libraries['nicaiu'].DAQmxSetExportedHshkEventOutputBehavior
DAQmxSetExportedHshkEventOutputBehavior.restype = int32
# DAQmxSetExportedHshkEventOutputBehavior(taskHandle, data)
DAQmxSetExportedHshkEventOutputBehavior.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3472
DAQmxResetExportedHshkEventOutputBehavior = _stdcall_libraries['nicaiu'].DAQmxResetExportedHshkEventOutputBehavior
DAQmxResetExportedHshkEventOutputBehavior.restype = int32
# DAQmxResetExportedHshkEventOutputBehavior(taskHandle)
DAQmxResetExportedHshkEventOutputBehavior.argtypes = [TaskHandle]
# NIDAQmx.h 3474
DAQmxGetExportedHshkEventDelay = _stdcall_libraries['nicaiu'].DAQmxGetExportedHshkEventDelay
DAQmxGetExportedHshkEventDelay.restype = int32
# DAQmxGetExportedHshkEventDelay(taskHandle, data)
DAQmxGetExportedHshkEventDelay.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3475
DAQmxSetExportedHshkEventDelay = _stdcall_libraries['nicaiu'].DAQmxSetExportedHshkEventDelay
DAQmxSetExportedHshkEventDelay.restype = int32
# DAQmxSetExportedHshkEventDelay(taskHandle, data)
DAQmxSetExportedHshkEventDelay.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3476
DAQmxResetExportedHshkEventDelay = _stdcall_libraries['nicaiu'].DAQmxResetExportedHshkEventDelay
DAQmxResetExportedHshkEventDelay.restype = int32
# DAQmxResetExportedHshkEventDelay(taskHandle)
DAQmxResetExportedHshkEventDelay.argtypes = [TaskHandle]
# NIDAQmx.h 3479
DAQmxGetExportedHshkEventInterlockedAssertedLvl = _stdcall_libraries['nicaiu'].DAQmxGetExportedHshkEventInterlockedAssertedLvl
DAQmxGetExportedHshkEventInterlockedAssertedLvl.restype = int32
# DAQmxGetExportedHshkEventInterlockedAssertedLvl(taskHandle, data)
DAQmxGetExportedHshkEventInterlockedAssertedLvl.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3480
DAQmxSetExportedHshkEventInterlockedAssertedLvl = _stdcall_libraries['nicaiu'].DAQmxSetExportedHshkEventInterlockedAssertedLvl
DAQmxSetExportedHshkEventInterlockedAssertedLvl.restype = int32
# DAQmxSetExportedHshkEventInterlockedAssertedLvl(taskHandle, data)
DAQmxSetExportedHshkEventInterlockedAssertedLvl.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3481
DAQmxResetExportedHshkEventInterlockedAssertedLvl = _stdcall_libraries['nicaiu'].DAQmxResetExportedHshkEventInterlockedAssertedLvl
DAQmxResetExportedHshkEventInterlockedAssertedLvl.restype = int32
# DAQmxResetExportedHshkEventInterlockedAssertedLvl(taskHandle)
DAQmxResetExportedHshkEventInterlockedAssertedLvl.argtypes = [TaskHandle]
# NIDAQmx.h 3483
DAQmxGetExportedHshkEventInterlockedAssertOnStart = _stdcall_libraries['nicaiu'].DAQmxGetExportedHshkEventInterlockedAssertOnStart
DAQmxGetExportedHshkEventInterlockedAssertOnStart.restype = int32
# DAQmxGetExportedHshkEventInterlockedAssertOnStart(taskHandle, data)
DAQmxGetExportedHshkEventInterlockedAssertOnStart.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 3484
DAQmxSetExportedHshkEventInterlockedAssertOnStart = _stdcall_libraries['nicaiu'].DAQmxSetExportedHshkEventInterlockedAssertOnStart
DAQmxSetExportedHshkEventInterlockedAssertOnStart.restype = int32
# DAQmxSetExportedHshkEventInterlockedAssertOnStart(taskHandle, data)
DAQmxSetExportedHshkEventInterlockedAssertOnStart.argtypes = [TaskHandle, bool32]
# NIDAQmx.h 3485
DAQmxResetExportedHshkEventInterlockedAssertOnStart = _stdcall_libraries['nicaiu'].DAQmxResetExportedHshkEventInterlockedAssertOnStart
DAQmxResetExportedHshkEventInterlockedAssertOnStart.restype = int32
# DAQmxResetExportedHshkEventInterlockedAssertOnStart(taskHandle)
DAQmxResetExportedHshkEventInterlockedAssertOnStart.argtypes = [TaskHandle]
# NIDAQmx.h 3487
DAQmxGetExportedHshkEventInterlockedDeassertDelay = _stdcall_libraries['nicaiu'].DAQmxGetExportedHshkEventInterlockedDeassertDelay
DAQmxGetExportedHshkEventInterlockedDeassertDelay.restype = int32
# DAQmxGetExportedHshkEventInterlockedDeassertDelay(taskHandle, data)
DAQmxGetExportedHshkEventInterlockedDeassertDelay.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3488
DAQmxSetExportedHshkEventInterlockedDeassertDelay = _stdcall_libraries['nicaiu'].DAQmxSetExportedHshkEventInterlockedDeassertDelay
DAQmxSetExportedHshkEventInterlockedDeassertDelay.restype = int32
# DAQmxSetExportedHshkEventInterlockedDeassertDelay(taskHandle, data)
DAQmxSetExportedHshkEventInterlockedDeassertDelay.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3489
DAQmxResetExportedHshkEventInterlockedDeassertDelay = _stdcall_libraries['nicaiu'].DAQmxResetExportedHshkEventInterlockedDeassertDelay
DAQmxResetExportedHshkEventInterlockedDeassertDelay.restype = int32
# DAQmxResetExportedHshkEventInterlockedDeassertDelay(taskHandle)
DAQmxResetExportedHshkEventInterlockedDeassertDelay.argtypes = [TaskHandle]
# NIDAQmx.h 3492
DAQmxGetExportedHshkEventPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxGetExportedHshkEventPulsePolarity
DAQmxGetExportedHshkEventPulsePolarity.restype = int32
# DAQmxGetExportedHshkEventPulsePolarity(taskHandle, data)
DAQmxGetExportedHshkEventPulsePolarity.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3493
DAQmxSetExportedHshkEventPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxSetExportedHshkEventPulsePolarity
DAQmxSetExportedHshkEventPulsePolarity.restype = int32
# DAQmxSetExportedHshkEventPulsePolarity(taskHandle, data)
DAQmxSetExportedHshkEventPulsePolarity.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3494
DAQmxResetExportedHshkEventPulsePolarity = _stdcall_libraries['nicaiu'].DAQmxResetExportedHshkEventPulsePolarity
DAQmxResetExportedHshkEventPulsePolarity.restype = int32
# DAQmxResetExportedHshkEventPulsePolarity(taskHandle)
DAQmxResetExportedHshkEventPulsePolarity.argtypes = [TaskHandle]
# NIDAQmx.h 3496
DAQmxGetExportedHshkEventPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetExportedHshkEventPulseWidth
DAQmxGetExportedHshkEventPulseWidth.restype = int32
# DAQmxGetExportedHshkEventPulseWidth(taskHandle, data)
DAQmxGetExportedHshkEventPulseWidth.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3497
DAQmxSetExportedHshkEventPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetExportedHshkEventPulseWidth
DAQmxSetExportedHshkEventPulseWidth.restype = int32
# DAQmxSetExportedHshkEventPulseWidth(taskHandle, data)
DAQmxSetExportedHshkEventPulseWidth.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3498
DAQmxResetExportedHshkEventPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetExportedHshkEventPulseWidth
DAQmxResetExportedHshkEventPulseWidth.restype = int32
# DAQmxResetExportedHshkEventPulseWidth(taskHandle)
DAQmxResetExportedHshkEventPulseWidth.argtypes = [TaskHandle]
# NIDAQmx.h 3500
DAQmxGetExportedRdyForXferEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExportedRdyForXferEventOutputTerm
DAQmxGetExportedRdyForXferEventOutputTerm.restype = int32
# DAQmxGetExportedRdyForXferEventOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExportedRdyForXferEventOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3501
DAQmxSetExportedRdyForXferEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExportedRdyForXferEventOutputTerm
DAQmxSetExportedRdyForXferEventOutputTerm.restype = int32
# DAQmxSetExportedRdyForXferEventOutputTerm(taskHandle, data)
DAQmxSetExportedRdyForXferEventOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3502
DAQmxResetExportedRdyForXferEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExportedRdyForXferEventOutputTerm
DAQmxResetExportedRdyForXferEventOutputTerm.restype = int32
# DAQmxResetExportedRdyForXferEventOutputTerm(taskHandle)
DAQmxResetExportedRdyForXferEventOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3505
DAQmxGetExportedRdyForXferEventLvlActiveLvl = _stdcall_libraries['nicaiu'].DAQmxGetExportedRdyForXferEventLvlActiveLvl
DAQmxGetExportedRdyForXferEventLvlActiveLvl.restype = int32
# DAQmxGetExportedRdyForXferEventLvlActiveLvl(taskHandle, data)
DAQmxGetExportedRdyForXferEventLvlActiveLvl.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3506
DAQmxSetExportedRdyForXferEventLvlActiveLvl = _stdcall_libraries['nicaiu'].DAQmxSetExportedRdyForXferEventLvlActiveLvl
DAQmxSetExportedRdyForXferEventLvlActiveLvl.restype = int32
# DAQmxSetExportedRdyForXferEventLvlActiveLvl(taskHandle, data)
DAQmxSetExportedRdyForXferEventLvlActiveLvl.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3507
DAQmxResetExportedRdyForXferEventLvlActiveLvl = _stdcall_libraries['nicaiu'].DAQmxResetExportedRdyForXferEventLvlActiveLvl
DAQmxResetExportedRdyForXferEventLvlActiveLvl.restype = int32
# DAQmxResetExportedRdyForXferEventLvlActiveLvl(taskHandle)
DAQmxResetExportedRdyForXferEventLvlActiveLvl.argtypes = [TaskHandle]
# NIDAQmx.h 3509
DAQmxGetExportedSyncPulseEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExportedSyncPulseEventOutputTerm
DAQmxGetExportedSyncPulseEventOutputTerm.restype = int32
# DAQmxGetExportedSyncPulseEventOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExportedSyncPulseEventOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3510
DAQmxSetExportedSyncPulseEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExportedSyncPulseEventOutputTerm
DAQmxSetExportedSyncPulseEventOutputTerm.restype = int32
# DAQmxSetExportedSyncPulseEventOutputTerm(taskHandle, data)
DAQmxSetExportedSyncPulseEventOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3511
DAQmxResetExportedSyncPulseEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExportedSyncPulseEventOutputTerm
DAQmxResetExportedSyncPulseEventOutputTerm.restype = int32
# DAQmxResetExportedSyncPulseEventOutputTerm(taskHandle)
DAQmxResetExportedSyncPulseEventOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3513
DAQmxGetExportedWatchdogExpiredEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxGetExportedWatchdogExpiredEventOutputTerm
DAQmxGetExportedWatchdogExpiredEventOutputTerm.restype = int32
# DAQmxGetExportedWatchdogExpiredEventOutputTerm(taskHandle, data, bufferSize)
DAQmxGetExportedWatchdogExpiredEventOutputTerm.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3514
DAQmxSetExportedWatchdogExpiredEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxSetExportedWatchdogExpiredEventOutputTerm
DAQmxSetExportedWatchdogExpiredEventOutputTerm.restype = int32
# DAQmxSetExportedWatchdogExpiredEventOutputTerm(taskHandle, data)
DAQmxSetExportedWatchdogExpiredEventOutputTerm.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3515
DAQmxResetExportedWatchdogExpiredEventOutputTerm = _stdcall_libraries['nicaiu'].DAQmxResetExportedWatchdogExpiredEventOutputTerm
DAQmxResetExportedWatchdogExpiredEventOutputTerm.restype = int32
# DAQmxResetExportedWatchdogExpiredEventOutputTerm(taskHandle)
DAQmxResetExportedWatchdogExpiredEventOutputTerm.argtypes = [TaskHandle]
# NIDAQmx.h 3519
DAQmxGetDevProductType = _stdcall_libraries['nicaiu'].DAQmxGetDevProductType
DAQmxGetDevProductType.restype = int32
# DAQmxGetDevProductType(device, data, bufferSize)
DAQmxGetDevProductType.argtypes = [STRING, STRING, uInt32]
# NIDAQmx.h 3521
DAQmxGetDevSerialNum = _stdcall_libraries['nicaiu'].DAQmxGetDevSerialNum
DAQmxGetDevSerialNum.restype = int32
# DAQmxGetDevSerialNum(device, data)
DAQmxGetDevSerialNum.argtypes = [STRING, POINTER(uInt32)]
# NIDAQmx.h 3523
DAQmxGetDevIsSimulated = _stdcall_libraries['nicaiu'].DAQmxGetDevIsSimulated
DAQmxGetDevIsSimulated.restype = int32
# DAQmxGetDevIsSimulated(device, data)
DAQmxGetDevIsSimulated.argtypes = [STRING, POINTER(bool32)]
# NIDAQmx.h 3528
DAQmxGetReadRelativeTo = _stdcall_libraries['nicaiu'].DAQmxGetReadRelativeTo
DAQmxGetReadRelativeTo.restype = int32
# DAQmxGetReadRelativeTo(taskHandle, data)
DAQmxGetReadRelativeTo.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3529
DAQmxSetReadRelativeTo = _stdcall_libraries['nicaiu'].DAQmxSetReadRelativeTo
DAQmxSetReadRelativeTo.restype = int32
# DAQmxSetReadRelativeTo(taskHandle, data)
DAQmxSetReadRelativeTo.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3530
DAQmxResetReadRelativeTo = _stdcall_libraries['nicaiu'].DAQmxResetReadRelativeTo
DAQmxResetReadRelativeTo.restype = int32
# DAQmxResetReadRelativeTo(taskHandle)
DAQmxResetReadRelativeTo.argtypes = [TaskHandle]
# NIDAQmx.h 3532
DAQmxGetReadOffset = _stdcall_libraries['nicaiu'].DAQmxGetReadOffset
DAQmxGetReadOffset.restype = int32
# DAQmxGetReadOffset(taskHandle, data)
DAQmxGetReadOffset.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3533
DAQmxSetReadOffset = _stdcall_libraries['nicaiu'].DAQmxSetReadOffset
DAQmxSetReadOffset.restype = int32
# DAQmxSetReadOffset(taskHandle, data)
DAQmxSetReadOffset.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3534
DAQmxResetReadOffset = _stdcall_libraries['nicaiu'].DAQmxResetReadOffset
DAQmxResetReadOffset.restype = int32
# DAQmxResetReadOffset(taskHandle)
DAQmxResetReadOffset.argtypes = [TaskHandle]
# NIDAQmx.h 3536
DAQmxGetReadChannelsToRead = _stdcall_libraries['nicaiu'].DAQmxGetReadChannelsToRead
DAQmxGetReadChannelsToRead.restype = int32
# DAQmxGetReadChannelsToRead(taskHandle, data, bufferSize)
DAQmxGetReadChannelsToRead.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3537
DAQmxSetReadChannelsToRead = _stdcall_libraries['nicaiu'].DAQmxSetReadChannelsToRead
DAQmxSetReadChannelsToRead.restype = int32
# DAQmxSetReadChannelsToRead(taskHandle, data)
DAQmxSetReadChannelsToRead.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3538
DAQmxResetReadChannelsToRead = _stdcall_libraries['nicaiu'].DAQmxResetReadChannelsToRead
DAQmxResetReadChannelsToRead.restype = int32
# DAQmxResetReadChannelsToRead(taskHandle)
DAQmxResetReadChannelsToRead.argtypes = [TaskHandle]
# NIDAQmx.h 3540
DAQmxGetReadReadAllAvailSamp = _stdcall_libraries['nicaiu'].DAQmxGetReadReadAllAvailSamp
DAQmxGetReadReadAllAvailSamp.restype = int32
# DAQmxGetReadReadAllAvailSamp(taskHandle, data)
DAQmxGetReadReadAllAvailSamp.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 3541
DAQmxSetReadReadAllAvailSamp = _stdcall_libraries['nicaiu'].DAQmxSetReadReadAllAvailSamp
DAQmxSetReadReadAllAvailSamp.restype = int32
# DAQmxSetReadReadAllAvailSamp(taskHandle, data)
DAQmxSetReadReadAllAvailSamp.argtypes = [TaskHandle, bool32]
# NIDAQmx.h 3542
DAQmxResetReadReadAllAvailSamp = _stdcall_libraries['nicaiu'].DAQmxResetReadReadAllAvailSamp
DAQmxResetReadReadAllAvailSamp.restype = int32
# DAQmxResetReadReadAllAvailSamp(taskHandle)
DAQmxResetReadReadAllAvailSamp.argtypes = [TaskHandle]
# NIDAQmx.h 3544
DAQmxGetReadAutoStart = _stdcall_libraries['nicaiu'].DAQmxGetReadAutoStart
DAQmxGetReadAutoStart.restype = int32
# DAQmxGetReadAutoStart(taskHandle, data)
DAQmxGetReadAutoStart.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 3545
DAQmxSetReadAutoStart = _stdcall_libraries['nicaiu'].DAQmxSetReadAutoStart
DAQmxSetReadAutoStart.restype = int32
# DAQmxSetReadAutoStart(taskHandle, data)
DAQmxSetReadAutoStart.argtypes = [TaskHandle, bool32]
# NIDAQmx.h 3546
DAQmxResetReadAutoStart = _stdcall_libraries['nicaiu'].DAQmxResetReadAutoStart
DAQmxResetReadAutoStart.restype = int32
# DAQmxResetReadAutoStart(taskHandle)
DAQmxResetReadAutoStart.argtypes = [TaskHandle]
# NIDAQmx.h 3549
DAQmxGetReadOverWrite = _stdcall_libraries['nicaiu'].DAQmxGetReadOverWrite
DAQmxGetReadOverWrite.restype = int32
# DAQmxGetReadOverWrite(taskHandle, data)
DAQmxGetReadOverWrite.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3550
DAQmxSetReadOverWrite = _stdcall_libraries['nicaiu'].DAQmxSetReadOverWrite
DAQmxSetReadOverWrite.restype = int32
# DAQmxSetReadOverWrite(taskHandle, data)
DAQmxSetReadOverWrite.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3551
DAQmxResetReadOverWrite = _stdcall_libraries['nicaiu'].DAQmxResetReadOverWrite
DAQmxResetReadOverWrite.restype = int32
# DAQmxResetReadOverWrite(taskHandle)
DAQmxResetReadOverWrite.argtypes = [TaskHandle]
# NIDAQmx.h 3553
DAQmxGetReadCurrReadPos = _stdcall_libraries['nicaiu'].DAQmxGetReadCurrReadPos
DAQmxGetReadCurrReadPos.restype = int32
# DAQmxGetReadCurrReadPos(taskHandle, data)
DAQmxGetReadCurrReadPos.argtypes = [TaskHandle, POINTER(uInt64)]
# NIDAQmx.h 3555
DAQmxGetReadAvailSampPerChan = _stdcall_libraries['nicaiu'].DAQmxGetReadAvailSampPerChan
DAQmxGetReadAvailSampPerChan.restype = int32
# DAQmxGetReadAvailSampPerChan(taskHandle, data)
DAQmxGetReadAvailSampPerChan.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 3557
DAQmxGetReadTotalSampPerChanAcquired = _stdcall_libraries['nicaiu'].DAQmxGetReadTotalSampPerChanAcquired
DAQmxGetReadTotalSampPerChanAcquired.restype = int32
# DAQmxGetReadTotalSampPerChanAcquired(taskHandle, data)
DAQmxGetReadTotalSampPerChanAcquired.argtypes = [TaskHandle, POINTER(uInt64)]
# NIDAQmx.h 3559
DAQmxGetReadOverloadedChansExist = _stdcall_libraries['nicaiu'].DAQmxGetReadOverloadedChansExist
DAQmxGetReadOverloadedChansExist.restype = int32
# DAQmxGetReadOverloadedChansExist(taskHandle, data)
DAQmxGetReadOverloadedChansExist.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 3561
DAQmxGetReadOverloadedChans = _stdcall_libraries['nicaiu'].DAQmxGetReadOverloadedChans
DAQmxGetReadOverloadedChans.restype = int32
# DAQmxGetReadOverloadedChans(taskHandle, data, bufferSize)
DAQmxGetReadOverloadedChans.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3563
DAQmxGetReadChangeDetectHasOverflowed = _stdcall_libraries['nicaiu'].DAQmxGetReadChangeDetectHasOverflowed
DAQmxGetReadChangeDetectHasOverflowed.restype = int32
# DAQmxGetReadChangeDetectHasOverflowed(taskHandle, data)
DAQmxGetReadChangeDetectHasOverflowed.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 3565
DAQmxGetReadRawDataWidth = _stdcall_libraries['nicaiu'].DAQmxGetReadRawDataWidth
DAQmxGetReadRawDataWidth.restype = int32
# DAQmxGetReadRawDataWidth(taskHandle, data)
DAQmxGetReadRawDataWidth.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 3567
DAQmxGetReadNumChans = _stdcall_libraries['nicaiu'].DAQmxGetReadNumChans
DAQmxGetReadNumChans.restype = int32
# DAQmxGetReadNumChans(taskHandle, data)
DAQmxGetReadNumChans.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 3569
DAQmxGetReadDigitalLinesBytesPerChan = _stdcall_libraries['nicaiu'].DAQmxGetReadDigitalLinesBytesPerChan
DAQmxGetReadDigitalLinesBytesPerChan.restype = int32
# DAQmxGetReadDigitalLinesBytesPerChan(taskHandle, data)
DAQmxGetReadDigitalLinesBytesPerChan.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 3572
DAQmxGetReadWaitMode = _stdcall_libraries['nicaiu'].DAQmxGetReadWaitMode
DAQmxGetReadWaitMode.restype = int32
# DAQmxGetReadWaitMode(taskHandle, data)
DAQmxGetReadWaitMode.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3573
DAQmxSetReadWaitMode = _stdcall_libraries['nicaiu'].DAQmxSetReadWaitMode
DAQmxSetReadWaitMode.restype = int32
# DAQmxSetReadWaitMode(taskHandle, data)
DAQmxSetReadWaitMode.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3574
DAQmxResetReadWaitMode = _stdcall_libraries['nicaiu'].DAQmxResetReadWaitMode
DAQmxResetReadWaitMode.restype = int32
# DAQmxResetReadWaitMode(taskHandle)
DAQmxResetReadWaitMode.argtypes = [TaskHandle]
# NIDAQmx.h 3576
DAQmxGetReadSleepTime = _stdcall_libraries['nicaiu'].DAQmxGetReadSleepTime
DAQmxGetReadSleepTime.restype = int32
# DAQmxGetReadSleepTime(taskHandle, data)
DAQmxGetReadSleepTime.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3577
DAQmxSetReadSleepTime = _stdcall_libraries['nicaiu'].DAQmxSetReadSleepTime
DAQmxSetReadSleepTime.restype = int32
# DAQmxSetReadSleepTime(taskHandle, data)
DAQmxSetReadSleepTime.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3578
DAQmxResetReadSleepTime = _stdcall_libraries['nicaiu'].DAQmxResetReadSleepTime
DAQmxResetReadSleepTime.restype = int32
# DAQmxResetReadSleepTime(taskHandle)
DAQmxResetReadSleepTime.argtypes = [TaskHandle]
# NIDAQmx.h 3582
DAQmxGetRealTimeConvLateErrorsToWarnings = _stdcall_libraries['nicaiu'].DAQmxGetRealTimeConvLateErrorsToWarnings
DAQmxGetRealTimeConvLateErrorsToWarnings.restype = int32
# DAQmxGetRealTimeConvLateErrorsToWarnings(taskHandle, data)
DAQmxGetRealTimeConvLateErrorsToWarnings.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 3583
DAQmxSetRealTimeConvLateErrorsToWarnings = _stdcall_libraries['nicaiu'].DAQmxSetRealTimeConvLateErrorsToWarnings
DAQmxSetRealTimeConvLateErrorsToWarnings.restype = int32
# DAQmxSetRealTimeConvLateErrorsToWarnings(taskHandle, data)
DAQmxSetRealTimeConvLateErrorsToWarnings.argtypes = [TaskHandle, bool32]
# NIDAQmx.h 3584
DAQmxResetRealTimeConvLateErrorsToWarnings = _stdcall_libraries['nicaiu'].DAQmxResetRealTimeConvLateErrorsToWarnings
DAQmxResetRealTimeConvLateErrorsToWarnings.restype = int32
# DAQmxResetRealTimeConvLateErrorsToWarnings(taskHandle)
DAQmxResetRealTimeConvLateErrorsToWarnings.argtypes = [TaskHandle]
# NIDAQmx.h 3586
DAQmxGetRealTimeNumOfWarmupIters = _stdcall_libraries['nicaiu'].DAQmxGetRealTimeNumOfWarmupIters
DAQmxGetRealTimeNumOfWarmupIters.restype = int32
# DAQmxGetRealTimeNumOfWarmupIters(taskHandle, data)
DAQmxGetRealTimeNumOfWarmupIters.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 3587
DAQmxSetRealTimeNumOfWarmupIters = _stdcall_libraries['nicaiu'].DAQmxSetRealTimeNumOfWarmupIters
DAQmxSetRealTimeNumOfWarmupIters.restype = int32
# DAQmxSetRealTimeNumOfWarmupIters(taskHandle, data)
DAQmxSetRealTimeNumOfWarmupIters.argtypes = [TaskHandle, uInt32]
# NIDAQmx.h 3588
DAQmxResetRealTimeNumOfWarmupIters = _stdcall_libraries['nicaiu'].DAQmxResetRealTimeNumOfWarmupIters
DAQmxResetRealTimeNumOfWarmupIters.restype = int32
# DAQmxResetRealTimeNumOfWarmupIters(taskHandle)
DAQmxResetRealTimeNumOfWarmupIters.argtypes = [TaskHandle]
# NIDAQmx.h 3591
DAQmxGetRealTimeWaitForNextSampClkWaitMode = _stdcall_libraries['nicaiu'].DAQmxGetRealTimeWaitForNextSampClkWaitMode
DAQmxGetRealTimeWaitForNextSampClkWaitMode.restype = int32
# DAQmxGetRealTimeWaitForNextSampClkWaitMode(taskHandle, data)
DAQmxGetRealTimeWaitForNextSampClkWaitMode.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3592
DAQmxSetRealTimeWaitForNextSampClkWaitMode = _stdcall_libraries['nicaiu'].DAQmxSetRealTimeWaitForNextSampClkWaitMode
DAQmxSetRealTimeWaitForNextSampClkWaitMode.restype = int32
# DAQmxSetRealTimeWaitForNextSampClkWaitMode(taskHandle, data)
DAQmxSetRealTimeWaitForNextSampClkWaitMode.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3593
DAQmxResetRealTimeWaitForNextSampClkWaitMode = _stdcall_libraries['nicaiu'].DAQmxResetRealTimeWaitForNextSampClkWaitMode
DAQmxResetRealTimeWaitForNextSampClkWaitMode.restype = int32
# DAQmxResetRealTimeWaitForNextSampClkWaitMode(taskHandle)
DAQmxResetRealTimeWaitForNextSampClkWaitMode.argtypes = [TaskHandle]
# NIDAQmx.h 3595
DAQmxGetRealTimeReportMissedSamp = _stdcall_libraries['nicaiu'].DAQmxGetRealTimeReportMissedSamp
DAQmxGetRealTimeReportMissedSamp.restype = int32
# DAQmxGetRealTimeReportMissedSamp(taskHandle, data)
DAQmxGetRealTimeReportMissedSamp.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 3596
DAQmxSetRealTimeReportMissedSamp = _stdcall_libraries['nicaiu'].DAQmxSetRealTimeReportMissedSamp
DAQmxSetRealTimeReportMissedSamp.restype = int32
# DAQmxSetRealTimeReportMissedSamp(taskHandle, data)
DAQmxSetRealTimeReportMissedSamp.argtypes = [TaskHandle, bool32]
# NIDAQmx.h 3597
DAQmxResetRealTimeReportMissedSamp = _stdcall_libraries['nicaiu'].DAQmxResetRealTimeReportMissedSamp
DAQmxResetRealTimeReportMissedSamp.restype = int32
# DAQmxResetRealTimeReportMissedSamp(taskHandle)
DAQmxResetRealTimeReportMissedSamp.argtypes = [TaskHandle]
# NIDAQmx.h 3600
DAQmxGetRealTimeWriteRecoveryMode = _stdcall_libraries['nicaiu'].DAQmxGetRealTimeWriteRecoveryMode
DAQmxGetRealTimeWriteRecoveryMode.restype = int32
# DAQmxGetRealTimeWriteRecoveryMode(taskHandle, data)
DAQmxGetRealTimeWriteRecoveryMode.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3601
DAQmxSetRealTimeWriteRecoveryMode = _stdcall_libraries['nicaiu'].DAQmxSetRealTimeWriteRecoveryMode
DAQmxSetRealTimeWriteRecoveryMode.restype = int32
# DAQmxSetRealTimeWriteRecoveryMode(taskHandle, data)
DAQmxSetRealTimeWriteRecoveryMode.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3602
DAQmxResetRealTimeWriteRecoveryMode = _stdcall_libraries['nicaiu'].DAQmxResetRealTimeWriteRecoveryMode
DAQmxResetRealTimeWriteRecoveryMode.restype = int32
# DAQmxResetRealTimeWriteRecoveryMode(taskHandle)
DAQmxResetRealTimeWriteRecoveryMode.argtypes = [TaskHandle]
# NIDAQmx.h 3607
DAQmxGetSwitchChanUsage = _stdcall_libraries['nicaiu'].DAQmxGetSwitchChanUsage
DAQmxGetSwitchChanUsage.restype = int32
# DAQmxGetSwitchChanUsage(switchChannelName, data)
DAQmxGetSwitchChanUsage.argtypes = [STRING, POINTER(int32)]
# NIDAQmx.h 3608
DAQmxSetSwitchChanUsage = _stdcall_libraries['nicaiu'].DAQmxSetSwitchChanUsage
DAQmxSetSwitchChanUsage.restype = int32
# DAQmxSetSwitchChanUsage(switchChannelName, data)
DAQmxSetSwitchChanUsage.argtypes = [STRING, int32]
# NIDAQmx.h 3610
DAQmxGetSwitchChanMaxACCarryCurrent = _stdcall_libraries['nicaiu'].DAQmxGetSwitchChanMaxACCarryCurrent
DAQmxGetSwitchChanMaxACCarryCurrent.restype = int32
# DAQmxGetSwitchChanMaxACCarryCurrent(switchChannelName, data)
DAQmxGetSwitchChanMaxACCarryCurrent.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3612
DAQmxGetSwitchChanMaxACSwitchCurrent = _stdcall_libraries['nicaiu'].DAQmxGetSwitchChanMaxACSwitchCurrent
DAQmxGetSwitchChanMaxACSwitchCurrent.restype = int32
# DAQmxGetSwitchChanMaxACSwitchCurrent(switchChannelName, data)
DAQmxGetSwitchChanMaxACSwitchCurrent.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3614
DAQmxGetSwitchChanMaxACCarryPwr = _stdcall_libraries['nicaiu'].DAQmxGetSwitchChanMaxACCarryPwr
DAQmxGetSwitchChanMaxACCarryPwr.restype = int32
# DAQmxGetSwitchChanMaxACCarryPwr(switchChannelName, data)
DAQmxGetSwitchChanMaxACCarryPwr.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3616
DAQmxGetSwitchChanMaxACSwitchPwr = _stdcall_libraries['nicaiu'].DAQmxGetSwitchChanMaxACSwitchPwr
DAQmxGetSwitchChanMaxACSwitchPwr.restype = int32
# DAQmxGetSwitchChanMaxACSwitchPwr(switchChannelName, data)
DAQmxGetSwitchChanMaxACSwitchPwr.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3618
DAQmxGetSwitchChanMaxDCCarryCurrent = _stdcall_libraries['nicaiu'].DAQmxGetSwitchChanMaxDCCarryCurrent
DAQmxGetSwitchChanMaxDCCarryCurrent.restype = int32
# DAQmxGetSwitchChanMaxDCCarryCurrent(switchChannelName, data)
DAQmxGetSwitchChanMaxDCCarryCurrent.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3620
DAQmxGetSwitchChanMaxDCSwitchCurrent = _stdcall_libraries['nicaiu'].DAQmxGetSwitchChanMaxDCSwitchCurrent
DAQmxGetSwitchChanMaxDCSwitchCurrent.restype = int32
# DAQmxGetSwitchChanMaxDCSwitchCurrent(switchChannelName, data)
DAQmxGetSwitchChanMaxDCSwitchCurrent.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3622
DAQmxGetSwitchChanMaxDCCarryPwr = _stdcall_libraries['nicaiu'].DAQmxGetSwitchChanMaxDCCarryPwr
DAQmxGetSwitchChanMaxDCCarryPwr.restype = int32
# DAQmxGetSwitchChanMaxDCCarryPwr(switchChannelName, data)
DAQmxGetSwitchChanMaxDCCarryPwr.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3624
DAQmxGetSwitchChanMaxDCSwitchPwr = _stdcall_libraries['nicaiu'].DAQmxGetSwitchChanMaxDCSwitchPwr
DAQmxGetSwitchChanMaxDCSwitchPwr.restype = int32
# DAQmxGetSwitchChanMaxDCSwitchPwr(switchChannelName, data)
DAQmxGetSwitchChanMaxDCSwitchPwr.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3626
DAQmxGetSwitchChanMaxACVoltage = _stdcall_libraries['nicaiu'].DAQmxGetSwitchChanMaxACVoltage
DAQmxGetSwitchChanMaxACVoltage.restype = int32
# DAQmxGetSwitchChanMaxACVoltage(switchChannelName, data)
DAQmxGetSwitchChanMaxACVoltage.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3628
DAQmxGetSwitchChanMaxDCVoltage = _stdcall_libraries['nicaiu'].DAQmxGetSwitchChanMaxDCVoltage
DAQmxGetSwitchChanMaxDCVoltage.restype = int32
# DAQmxGetSwitchChanMaxDCVoltage(switchChannelName, data)
DAQmxGetSwitchChanMaxDCVoltage.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3630
DAQmxGetSwitchChanWireMode = _stdcall_libraries['nicaiu'].DAQmxGetSwitchChanWireMode
DAQmxGetSwitchChanWireMode.restype = int32
# DAQmxGetSwitchChanWireMode(switchChannelName, data)
DAQmxGetSwitchChanWireMode.argtypes = [STRING, POINTER(uInt32)]
# NIDAQmx.h 3632
DAQmxGetSwitchChanBandwidth = _stdcall_libraries['nicaiu'].DAQmxGetSwitchChanBandwidth
DAQmxGetSwitchChanBandwidth.restype = int32
# DAQmxGetSwitchChanBandwidth(switchChannelName, data)
DAQmxGetSwitchChanBandwidth.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3634
DAQmxGetSwitchChanImpedance = _stdcall_libraries['nicaiu'].DAQmxGetSwitchChanImpedance
DAQmxGetSwitchChanImpedance.restype = int32
# DAQmxGetSwitchChanImpedance(switchChannelName, data)
DAQmxGetSwitchChanImpedance.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3638
DAQmxGetSwitchDevSettlingTime = _stdcall_libraries['nicaiu'].DAQmxGetSwitchDevSettlingTime
DAQmxGetSwitchDevSettlingTime.restype = int32
# DAQmxGetSwitchDevSettlingTime(deviceName, data)
DAQmxGetSwitchDevSettlingTime.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3639
DAQmxSetSwitchDevSettlingTime = _stdcall_libraries['nicaiu'].DAQmxSetSwitchDevSettlingTime
DAQmxSetSwitchDevSettlingTime.restype = int32
# DAQmxSetSwitchDevSettlingTime(deviceName, data)
DAQmxSetSwitchDevSettlingTime.argtypes = [STRING, float64]
# NIDAQmx.h 3641
DAQmxGetSwitchDevAutoConnAnlgBus = _stdcall_libraries['nicaiu'].DAQmxGetSwitchDevAutoConnAnlgBus
DAQmxGetSwitchDevAutoConnAnlgBus.restype = int32
# DAQmxGetSwitchDevAutoConnAnlgBus(deviceName, data)
DAQmxGetSwitchDevAutoConnAnlgBus.argtypes = [STRING, POINTER(bool32)]
# NIDAQmx.h 3642
DAQmxSetSwitchDevAutoConnAnlgBus = _stdcall_libraries['nicaiu'].DAQmxSetSwitchDevAutoConnAnlgBus
DAQmxSetSwitchDevAutoConnAnlgBus.restype = int32
# DAQmxSetSwitchDevAutoConnAnlgBus(deviceName, data)
DAQmxSetSwitchDevAutoConnAnlgBus.argtypes = [STRING, bool32]
# NIDAQmx.h 3644
DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling = _stdcall_libraries['nicaiu'].DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling
DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling.restype = int32
# DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling(deviceName, data)
DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling.argtypes = [STRING, POINTER(bool32)]
# NIDAQmx.h 3645
DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling = _stdcall_libraries['nicaiu'].DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling
DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling.restype = int32
# DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling(deviceName, data)
DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling.argtypes = [STRING, bool32]
# NIDAQmx.h 3647
DAQmxGetSwitchDevSettled = _stdcall_libraries['nicaiu'].DAQmxGetSwitchDevSettled
DAQmxGetSwitchDevSettled.restype = int32
# DAQmxGetSwitchDevSettled(deviceName, data)
DAQmxGetSwitchDevSettled.argtypes = [STRING, POINTER(bool32)]
# NIDAQmx.h 3649
DAQmxGetSwitchDevRelayList = _stdcall_libraries['nicaiu'].DAQmxGetSwitchDevRelayList
DAQmxGetSwitchDevRelayList.restype = int32
# DAQmxGetSwitchDevRelayList(deviceName, data, bufferSize)
DAQmxGetSwitchDevRelayList.argtypes = [STRING, STRING, uInt32]
# NIDAQmx.h 3651
DAQmxGetSwitchDevNumRelays = _stdcall_libraries['nicaiu'].DAQmxGetSwitchDevNumRelays
DAQmxGetSwitchDevNumRelays.restype = int32
# DAQmxGetSwitchDevNumRelays(deviceName, data)
DAQmxGetSwitchDevNumRelays.argtypes = [STRING, POINTER(uInt32)]
# NIDAQmx.h 3653
DAQmxGetSwitchDevSwitchChanList = _stdcall_libraries['nicaiu'].DAQmxGetSwitchDevSwitchChanList
DAQmxGetSwitchDevSwitchChanList.restype = int32
# DAQmxGetSwitchDevSwitchChanList(deviceName, data, bufferSize)
DAQmxGetSwitchDevSwitchChanList.argtypes = [STRING, STRING, uInt32]
# NIDAQmx.h 3655
DAQmxGetSwitchDevNumSwitchChans = _stdcall_libraries['nicaiu'].DAQmxGetSwitchDevNumSwitchChans
DAQmxGetSwitchDevNumSwitchChans.restype = int32
# DAQmxGetSwitchDevNumSwitchChans(deviceName, data)
DAQmxGetSwitchDevNumSwitchChans.argtypes = [STRING, POINTER(uInt32)]
# NIDAQmx.h 3657
DAQmxGetSwitchDevNumRows = _stdcall_libraries['nicaiu'].DAQmxGetSwitchDevNumRows
DAQmxGetSwitchDevNumRows.restype = int32
# DAQmxGetSwitchDevNumRows(deviceName, data)
DAQmxGetSwitchDevNumRows.argtypes = [STRING, POINTER(uInt32)]
# NIDAQmx.h 3659
DAQmxGetSwitchDevNumColumns = _stdcall_libraries['nicaiu'].DAQmxGetSwitchDevNumColumns
DAQmxGetSwitchDevNumColumns.restype = int32
# DAQmxGetSwitchDevNumColumns(deviceName, data)
DAQmxGetSwitchDevNumColumns.argtypes = [STRING, POINTER(uInt32)]
# NIDAQmx.h 3661
DAQmxGetSwitchDevTopology = _stdcall_libraries['nicaiu'].DAQmxGetSwitchDevTopology
DAQmxGetSwitchDevTopology.restype = int32
# DAQmxGetSwitchDevTopology(deviceName, data, bufferSize)
DAQmxGetSwitchDevTopology.argtypes = [STRING, STRING, uInt32]
# NIDAQmx.h 3666
DAQmxGetSwitchScanBreakMode = _stdcall_libraries['nicaiu'].DAQmxGetSwitchScanBreakMode
DAQmxGetSwitchScanBreakMode.restype = int32
# DAQmxGetSwitchScanBreakMode(taskHandle, data)
DAQmxGetSwitchScanBreakMode.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3667
DAQmxSetSwitchScanBreakMode = _stdcall_libraries['nicaiu'].DAQmxSetSwitchScanBreakMode
DAQmxSetSwitchScanBreakMode.restype = int32
# DAQmxSetSwitchScanBreakMode(taskHandle, data)
DAQmxSetSwitchScanBreakMode.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3668
DAQmxResetSwitchScanBreakMode = _stdcall_libraries['nicaiu'].DAQmxResetSwitchScanBreakMode
DAQmxResetSwitchScanBreakMode.restype = int32
# DAQmxResetSwitchScanBreakMode(taskHandle)
DAQmxResetSwitchScanBreakMode.argtypes = [TaskHandle]
# NIDAQmx.h 3671
DAQmxGetSwitchScanRepeatMode = _stdcall_libraries['nicaiu'].DAQmxGetSwitchScanRepeatMode
DAQmxGetSwitchScanRepeatMode.restype = int32
# DAQmxGetSwitchScanRepeatMode(taskHandle, data)
DAQmxGetSwitchScanRepeatMode.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3672
DAQmxSetSwitchScanRepeatMode = _stdcall_libraries['nicaiu'].DAQmxSetSwitchScanRepeatMode
DAQmxSetSwitchScanRepeatMode.restype = int32
# DAQmxSetSwitchScanRepeatMode(taskHandle, data)
DAQmxSetSwitchScanRepeatMode.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3673
DAQmxResetSwitchScanRepeatMode = _stdcall_libraries['nicaiu'].DAQmxResetSwitchScanRepeatMode
DAQmxResetSwitchScanRepeatMode.restype = int32
# DAQmxResetSwitchScanRepeatMode(taskHandle)
DAQmxResetSwitchScanRepeatMode.argtypes = [TaskHandle]
# NIDAQmx.h 3675
DAQmxGetSwitchScanWaitingForAdv = _stdcall_libraries['nicaiu'].DAQmxGetSwitchScanWaitingForAdv
DAQmxGetSwitchScanWaitingForAdv.restype = int32
# DAQmxGetSwitchScanWaitingForAdv(taskHandle, data)
DAQmxGetSwitchScanWaitingForAdv.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 3679
DAQmxGetScaleDescr = _stdcall_libraries['nicaiu'].DAQmxGetScaleDescr
DAQmxGetScaleDescr.restype = int32
# DAQmxGetScaleDescr(scaleName, data, bufferSize)
DAQmxGetScaleDescr.argtypes = [STRING, STRING, uInt32]
# NIDAQmx.h 3680
DAQmxSetScaleDescr = _stdcall_libraries['nicaiu'].DAQmxSetScaleDescr
DAQmxSetScaleDescr.restype = int32
# DAQmxSetScaleDescr(scaleName, data)
DAQmxSetScaleDescr.argtypes = [STRING, STRING]
# NIDAQmx.h 3682
DAQmxGetScaleScaledUnits = _stdcall_libraries['nicaiu'].DAQmxGetScaleScaledUnits
DAQmxGetScaleScaledUnits.restype = int32
# DAQmxGetScaleScaledUnits(scaleName, data, bufferSize)
DAQmxGetScaleScaledUnits.argtypes = [STRING, STRING, uInt32]
# NIDAQmx.h 3683
DAQmxSetScaleScaledUnits = _stdcall_libraries['nicaiu'].DAQmxSetScaleScaledUnits
DAQmxSetScaleScaledUnits.restype = int32
# DAQmxSetScaleScaledUnits(scaleName, data)
DAQmxSetScaleScaledUnits.argtypes = [STRING, STRING]
# NIDAQmx.h 3686
DAQmxGetScalePreScaledUnits = _stdcall_libraries['nicaiu'].DAQmxGetScalePreScaledUnits
DAQmxGetScalePreScaledUnits.restype = int32
# DAQmxGetScalePreScaledUnits(scaleName, data)
DAQmxGetScalePreScaledUnits.argtypes = [STRING, POINTER(int32)]
# NIDAQmx.h 3687
DAQmxSetScalePreScaledUnits = _stdcall_libraries['nicaiu'].DAQmxSetScalePreScaledUnits
DAQmxSetScalePreScaledUnits.restype = int32
# DAQmxSetScalePreScaledUnits(scaleName, data)
DAQmxSetScalePreScaledUnits.argtypes = [STRING, int32]
# NIDAQmx.h 3690
DAQmxGetScaleType = _stdcall_libraries['nicaiu'].DAQmxGetScaleType
DAQmxGetScaleType.restype = int32
# DAQmxGetScaleType(scaleName, data)
DAQmxGetScaleType.argtypes = [STRING, POINTER(int32)]
# NIDAQmx.h 3692
DAQmxGetScaleLinSlope = _stdcall_libraries['nicaiu'].DAQmxGetScaleLinSlope
DAQmxGetScaleLinSlope.restype = int32
# DAQmxGetScaleLinSlope(scaleName, data)
DAQmxGetScaleLinSlope.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3693
DAQmxSetScaleLinSlope = _stdcall_libraries['nicaiu'].DAQmxSetScaleLinSlope
DAQmxSetScaleLinSlope.restype = int32
# DAQmxSetScaleLinSlope(scaleName, data)
DAQmxSetScaleLinSlope.argtypes = [STRING, float64]
# NIDAQmx.h 3695
DAQmxGetScaleLinYIntercept = _stdcall_libraries['nicaiu'].DAQmxGetScaleLinYIntercept
DAQmxGetScaleLinYIntercept.restype = int32
# DAQmxGetScaleLinYIntercept(scaleName, data)
DAQmxGetScaleLinYIntercept.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3696
DAQmxSetScaleLinYIntercept = _stdcall_libraries['nicaiu'].DAQmxSetScaleLinYIntercept
DAQmxSetScaleLinYIntercept.restype = int32
# DAQmxSetScaleLinYIntercept(scaleName, data)
DAQmxSetScaleLinYIntercept.argtypes = [STRING, float64]
# NIDAQmx.h 3698
DAQmxGetScaleMapScaledMax = _stdcall_libraries['nicaiu'].DAQmxGetScaleMapScaledMax
DAQmxGetScaleMapScaledMax.restype = int32
# DAQmxGetScaleMapScaledMax(scaleName, data)
DAQmxGetScaleMapScaledMax.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3699
DAQmxSetScaleMapScaledMax = _stdcall_libraries['nicaiu'].DAQmxSetScaleMapScaledMax
DAQmxSetScaleMapScaledMax.restype = int32
# DAQmxSetScaleMapScaledMax(scaleName, data)
DAQmxSetScaleMapScaledMax.argtypes = [STRING, float64]
# NIDAQmx.h 3701
DAQmxGetScaleMapPreScaledMax = _stdcall_libraries['nicaiu'].DAQmxGetScaleMapPreScaledMax
DAQmxGetScaleMapPreScaledMax.restype = int32
# DAQmxGetScaleMapPreScaledMax(scaleName, data)
DAQmxGetScaleMapPreScaledMax.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3702
DAQmxSetScaleMapPreScaledMax = _stdcall_libraries['nicaiu'].DAQmxSetScaleMapPreScaledMax
DAQmxSetScaleMapPreScaledMax.restype = int32
# DAQmxSetScaleMapPreScaledMax(scaleName, data)
DAQmxSetScaleMapPreScaledMax.argtypes = [STRING, float64]
# NIDAQmx.h 3704
DAQmxGetScaleMapScaledMin = _stdcall_libraries['nicaiu'].DAQmxGetScaleMapScaledMin
DAQmxGetScaleMapScaledMin.restype = int32
# DAQmxGetScaleMapScaledMin(scaleName, data)
DAQmxGetScaleMapScaledMin.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3705
DAQmxSetScaleMapScaledMin = _stdcall_libraries['nicaiu'].DAQmxSetScaleMapScaledMin
DAQmxSetScaleMapScaledMin.restype = int32
# DAQmxSetScaleMapScaledMin(scaleName, data)
DAQmxSetScaleMapScaledMin.argtypes = [STRING, float64]
# NIDAQmx.h 3707
DAQmxGetScaleMapPreScaledMin = _stdcall_libraries['nicaiu'].DAQmxGetScaleMapPreScaledMin
DAQmxGetScaleMapPreScaledMin.restype = int32
# DAQmxGetScaleMapPreScaledMin(scaleName, data)
DAQmxGetScaleMapPreScaledMin.argtypes = [STRING, POINTER(float64)]
# NIDAQmx.h 3708
DAQmxSetScaleMapPreScaledMin = _stdcall_libraries['nicaiu'].DAQmxSetScaleMapPreScaledMin
DAQmxSetScaleMapPreScaledMin.restype = int32
# DAQmxSetScaleMapPreScaledMin(scaleName, data)
DAQmxSetScaleMapPreScaledMin.argtypes = [STRING, float64]
# NIDAQmx.h 3710
DAQmxGetScalePolyForwardCoeff = _stdcall_libraries['nicaiu'].DAQmxGetScalePolyForwardCoeff
DAQmxGetScalePolyForwardCoeff.restype = int32
# DAQmxGetScalePolyForwardCoeff(scaleName, data, arraySizeInSamples)
DAQmxGetScalePolyForwardCoeff.argtypes = [STRING, POINTER(float64), uInt32]
# NIDAQmx.h 3711
DAQmxSetScalePolyForwardCoeff = _stdcall_libraries['nicaiu'].DAQmxSetScalePolyForwardCoeff
DAQmxSetScalePolyForwardCoeff.restype = int32
# DAQmxSetScalePolyForwardCoeff(scaleName, data, arraySizeInSamples)
DAQmxSetScalePolyForwardCoeff.argtypes = [STRING, POINTER(float64), uInt32]
# NIDAQmx.h 3713
DAQmxGetScalePolyReverseCoeff = _stdcall_libraries['nicaiu'].DAQmxGetScalePolyReverseCoeff
DAQmxGetScalePolyReverseCoeff.restype = int32
# DAQmxGetScalePolyReverseCoeff(scaleName, data, arraySizeInSamples)
DAQmxGetScalePolyReverseCoeff.argtypes = [STRING, POINTER(float64), uInt32]
# NIDAQmx.h 3714
DAQmxSetScalePolyReverseCoeff = _stdcall_libraries['nicaiu'].DAQmxSetScalePolyReverseCoeff
DAQmxSetScalePolyReverseCoeff.restype = int32
# DAQmxSetScalePolyReverseCoeff(scaleName, data, arraySizeInSamples)
DAQmxSetScalePolyReverseCoeff.argtypes = [STRING, POINTER(float64), uInt32]
# NIDAQmx.h 3716
DAQmxGetScaleTableScaledVals = _stdcall_libraries['nicaiu'].DAQmxGetScaleTableScaledVals
DAQmxGetScaleTableScaledVals.restype = int32
# DAQmxGetScaleTableScaledVals(scaleName, data, arraySizeInSamples)
DAQmxGetScaleTableScaledVals.argtypes = [STRING, POINTER(float64), uInt32]
# NIDAQmx.h 3717
DAQmxSetScaleTableScaledVals = _stdcall_libraries['nicaiu'].DAQmxSetScaleTableScaledVals
DAQmxSetScaleTableScaledVals.restype = int32
# DAQmxSetScaleTableScaledVals(scaleName, data, arraySizeInSamples)
DAQmxSetScaleTableScaledVals.argtypes = [STRING, POINTER(float64), uInt32]
# NIDAQmx.h 3719
DAQmxGetScaleTablePreScaledVals = _stdcall_libraries['nicaiu'].DAQmxGetScaleTablePreScaledVals
DAQmxGetScaleTablePreScaledVals.restype = int32
# DAQmxGetScaleTablePreScaledVals(scaleName, data, arraySizeInSamples)
DAQmxGetScaleTablePreScaledVals.argtypes = [STRING, POINTER(float64), uInt32]
# NIDAQmx.h 3720
DAQmxSetScaleTablePreScaledVals = _stdcall_libraries['nicaiu'].DAQmxSetScaleTablePreScaledVals
DAQmxSetScaleTablePreScaledVals.restype = int32
# DAQmxSetScaleTablePreScaledVals(scaleName, data, arraySizeInSamples)
DAQmxSetScaleTablePreScaledVals.argtypes = [STRING, POINTER(float64), uInt32]
# NIDAQmx.h 3724
DAQmxGetSysGlobalChans = _stdcall_libraries['nicaiu'].DAQmxGetSysGlobalChans
DAQmxGetSysGlobalChans.restype = int32
# DAQmxGetSysGlobalChans(data, bufferSize)
DAQmxGetSysGlobalChans.argtypes = [STRING, uInt32]
# NIDAQmx.h 3726
DAQmxGetSysScales = _stdcall_libraries['nicaiu'].DAQmxGetSysScales
DAQmxGetSysScales.restype = int32
# DAQmxGetSysScales(data, bufferSize)
DAQmxGetSysScales.argtypes = [STRING, uInt32]
# NIDAQmx.h 3728
DAQmxGetSysTasks = _stdcall_libraries['nicaiu'].DAQmxGetSysTasks
DAQmxGetSysTasks.restype = int32
# DAQmxGetSysTasks(data, bufferSize)
DAQmxGetSysTasks.argtypes = [STRING, uInt32]
# NIDAQmx.h 3730
DAQmxGetSysDevNames = _stdcall_libraries['nicaiu'].DAQmxGetSysDevNames
DAQmxGetSysDevNames.restype = int32
# DAQmxGetSysDevNames(data, bufferSize)
DAQmxGetSysDevNames.argtypes = [STRING, uInt32]
# NIDAQmx.h 3732
DAQmxGetSysNIDAQMajorVersion = _stdcall_libraries['nicaiu'].DAQmxGetSysNIDAQMajorVersion
DAQmxGetSysNIDAQMajorVersion.restype = int32
# DAQmxGetSysNIDAQMajorVersion(data)
DAQmxGetSysNIDAQMajorVersion.argtypes = [POINTER(uInt32)]
# NIDAQmx.h 3734
DAQmxGetSysNIDAQMinorVersion = _stdcall_libraries['nicaiu'].DAQmxGetSysNIDAQMinorVersion
DAQmxGetSysNIDAQMinorVersion.restype = int32
# DAQmxGetSysNIDAQMinorVersion(data)
DAQmxGetSysNIDAQMinorVersion.argtypes = [POINTER(uInt32)]
# NIDAQmx.h 3738
DAQmxGetTaskName = _stdcall_libraries['nicaiu'].DAQmxGetTaskName
DAQmxGetTaskName.restype = int32
# DAQmxGetTaskName(taskHandle, data, bufferSize)
DAQmxGetTaskName.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3740
DAQmxGetTaskChannels = _stdcall_libraries['nicaiu'].DAQmxGetTaskChannels
DAQmxGetTaskChannels.restype = int32
# DAQmxGetTaskChannels(taskHandle, data, bufferSize)
DAQmxGetTaskChannels.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3742
DAQmxGetTaskNumChans = _stdcall_libraries['nicaiu'].DAQmxGetTaskNumChans
DAQmxGetTaskNumChans.restype = int32
# DAQmxGetTaskNumChans(taskHandle, data)
DAQmxGetTaskNumChans.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 3744
DAQmxGetTaskComplete = _stdcall_libraries['nicaiu'].DAQmxGetTaskComplete
DAQmxGetTaskComplete.restype = int32
# DAQmxGetTaskComplete(taskHandle, data)
DAQmxGetTaskComplete.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 3749
DAQmxGetSampQuantSampMode = _stdcall_libraries['nicaiu'].DAQmxGetSampQuantSampMode
DAQmxGetSampQuantSampMode.restype = int32
# DAQmxGetSampQuantSampMode(taskHandle, data)
DAQmxGetSampQuantSampMode.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3750
DAQmxSetSampQuantSampMode = _stdcall_libraries['nicaiu'].DAQmxSetSampQuantSampMode
DAQmxSetSampQuantSampMode.restype = int32
# DAQmxSetSampQuantSampMode(taskHandle, data)
DAQmxSetSampQuantSampMode.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3751
DAQmxResetSampQuantSampMode = _stdcall_libraries['nicaiu'].DAQmxResetSampQuantSampMode
DAQmxResetSampQuantSampMode.restype = int32
# DAQmxResetSampQuantSampMode(taskHandle)
DAQmxResetSampQuantSampMode.argtypes = [TaskHandle]
# NIDAQmx.h 3753
DAQmxGetSampQuantSampPerChan = _stdcall_libraries['nicaiu'].DAQmxGetSampQuantSampPerChan
DAQmxGetSampQuantSampPerChan.restype = int32
# DAQmxGetSampQuantSampPerChan(taskHandle, data)
DAQmxGetSampQuantSampPerChan.argtypes = [TaskHandle, POINTER(uInt64)]
# NIDAQmx.h 3754
DAQmxSetSampQuantSampPerChan = _stdcall_libraries['nicaiu'].DAQmxSetSampQuantSampPerChan
DAQmxSetSampQuantSampPerChan.restype = int32
# DAQmxSetSampQuantSampPerChan(taskHandle, data)
DAQmxSetSampQuantSampPerChan.argtypes = [TaskHandle, uInt64]
# NIDAQmx.h 3755
DAQmxResetSampQuantSampPerChan = _stdcall_libraries['nicaiu'].DAQmxResetSampQuantSampPerChan
DAQmxResetSampQuantSampPerChan.restype = int32
# DAQmxResetSampQuantSampPerChan(taskHandle)
DAQmxResetSampQuantSampPerChan.argtypes = [TaskHandle]
# NIDAQmx.h 3758
DAQmxGetSampTimingType = _stdcall_libraries['nicaiu'].DAQmxGetSampTimingType
DAQmxGetSampTimingType.restype = int32
# DAQmxGetSampTimingType(taskHandle, data)
DAQmxGetSampTimingType.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3759
DAQmxSetSampTimingType = _stdcall_libraries['nicaiu'].DAQmxSetSampTimingType
DAQmxSetSampTimingType.restype = int32
# DAQmxSetSampTimingType(taskHandle, data)
DAQmxSetSampTimingType.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3760
DAQmxResetSampTimingType = _stdcall_libraries['nicaiu'].DAQmxResetSampTimingType
DAQmxResetSampTimingType.restype = int32
# DAQmxResetSampTimingType(taskHandle)
DAQmxResetSampTimingType.argtypes = [TaskHandle]
# NIDAQmx.h 3762
DAQmxGetSampClkRate = _stdcall_libraries['nicaiu'].DAQmxGetSampClkRate
DAQmxGetSampClkRate.restype = int32
# DAQmxGetSampClkRate(taskHandle, data)
DAQmxGetSampClkRate.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3763
DAQmxSetSampClkRate = _stdcall_libraries['nicaiu'].DAQmxSetSampClkRate
DAQmxSetSampClkRate.restype = int32
# DAQmxSetSampClkRate(taskHandle, data)
DAQmxSetSampClkRate.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3764
DAQmxResetSampClkRate = _stdcall_libraries['nicaiu'].DAQmxResetSampClkRate
DAQmxResetSampClkRate.restype = int32
# DAQmxResetSampClkRate(taskHandle)
DAQmxResetSampClkRate.argtypes = [TaskHandle]
# NIDAQmx.h 3766
DAQmxGetSampClkMaxRate = _stdcall_libraries['nicaiu'].DAQmxGetSampClkMaxRate
DAQmxGetSampClkMaxRate.restype = int32
# DAQmxGetSampClkMaxRate(taskHandle, data)
DAQmxGetSampClkMaxRate.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3768
DAQmxGetSampClkSrc = _stdcall_libraries['nicaiu'].DAQmxGetSampClkSrc
DAQmxGetSampClkSrc.restype = int32
# DAQmxGetSampClkSrc(taskHandle, data, bufferSize)
DAQmxGetSampClkSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3769
DAQmxSetSampClkSrc = _stdcall_libraries['nicaiu'].DAQmxSetSampClkSrc
DAQmxSetSampClkSrc.restype = int32
# DAQmxSetSampClkSrc(taskHandle, data)
DAQmxSetSampClkSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3770
DAQmxResetSampClkSrc = _stdcall_libraries['nicaiu'].DAQmxResetSampClkSrc
DAQmxResetSampClkSrc.restype = int32
# DAQmxResetSampClkSrc(taskHandle)
DAQmxResetSampClkSrc.argtypes = [TaskHandle]
# NIDAQmx.h 3773
DAQmxGetSampClkActiveEdge = _stdcall_libraries['nicaiu'].DAQmxGetSampClkActiveEdge
DAQmxGetSampClkActiveEdge.restype = int32
# DAQmxGetSampClkActiveEdge(taskHandle, data)
DAQmxGetSampClkActiveEdge.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3774
DAQmxSetSampClkActiveEdge = _stdcall_libraries['nicaiu'].DAQmxSetSampClkActiveEdge
DAQmxSetSampClkActiveEdge.restype = int32
# DAQmxSetSampClkActiveEdge(taskHandle, data)
DAQmxSetSampClkActiveEdge.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3775
DAQmxResetSampClkActiveEdge = _stdcall_libraries['nicaiu'].DAQmxResetSampClkActiveEdge
DAQmxResetSampClkActiveEdge.restype = int32
# DAQmxResetSampClkActiveEdge(taskHandle)
DAQmxResetSampClkActiveEdge.argtypes = [TaskHandle]
# NIDAQmx.h 3777
DAQmxGetSampClkTimebaseDiv = _stdcall_libraries['nicaiu'].DAQmxGetSampClkTimebaseDiv
DAQmxGetSampClkTimebaseDiv.restype = int32
# DAQmxGetSampClkTimebaseDiv(taskHandle, data)
DAQmxGetSampClkTimebaseDiv.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 3778
DAQmxSetSampClkTimebaseDiv = _stdcall_libraries['nicaiu'].DAQmxSetSampClkTimebaseDiv
DAQmxSetSampClkTimebaseDiv.restype = int32
# DAQmxSetSampClkTimebaseDiv(taskHandle, data)
DAQmxSetSampClkTimebaseDiv.argtypes = [TaskHandle, uInt32]
# NIDAQmx.h 3779
DAQmxResetSampClkTimebaseDiv = _stdcall_libraries['nicaiu'].DAQmxResetSampClkTimebaseDiv
DAQmxResetSampClkTimebaseDiv.restype = int32
# DAQmxResetSampClkTimebaseDiv(taskHandle)
DAQmxResetSampClkTimebaseDiv.argtypes = [TaskHandle]
# NIDAQmx.h 3781
DAQmxGetSampClkTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetSampClkTimebaseRate
DAQmxGetSampClkTimebaseRate.restype = int32
# DAQmxGetSampClkTimebaseRate(taskHandle, data)
DAQmxGetSampClkTimebaseRate.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3782
DAQmxSetSampClkTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetSampClkTimebaseRate
DAQmxSetSampClkTimebaseRate.restype = int32
# DAQmxSetSampClkTimebaseRate(taskHandle, data)
DAQmxSetSampClkTimebaseRate.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3783
DAQmxResetSampClkTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetSampClkTimebaseRate
DAQmxResetSampClkTimebaseRate.restype = int32
# DAQmxResetSampClkTimebaseRate(taskHandle)
DAQmxResetSampClkTimebaseRate.argtypes = [TaskHandle]
# NIDAQmx.h 3785
DAQmxGetSampClkTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetSampClkTimebaseSrc
DAQmxGetSampClkTimebaseSrc.restype = int32
# DAQmxGetSampClkTimebaseSrc(taskHandle, data, bufferSize)
DAQmxGetSampClkTimebaseSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3786
DAQmxSetSampClkTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetSampClkTimebaseSrc
DAQmxSetSampClkTimebaseSrc.restype = int32
# DAQmxSetSampClkTimebaseSrc(taskHandle, data)
DAQmxSetSampClkTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3787
DAQmxResetSampClkTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetSampClkTimebaseSrc
DAQmxResetSampClkTimebaseSrc.restype = int32
# DAQmxResetSampClkTimebaseSrc(taskHandle)
DAQmxResetSampClkTimebaseSrc.argtypes = [TaskHandle]
# NIDAQmx.h 3790
DAQmxGetSampClkTimebaseActiveEdge = _stdcall_libraries['nicaiu'].DAQmxGetSampClkTimebaseActiveEdge
DAQmxGetSampClkTimebaseActiveEdge.restype = int32
# DAQmxGetSampClkTimebaseActiveEdge(taskHandle, data)
DAQmxGetSampClkTimebaseActiveEdge.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3791
DAQmxSetSampClkTimebaseActiveEdge = _stdcall_libraries['nicaiu'].DAQmxSetSampClkTimebaseActiveEdge
DAQmxSetSampClkTimebaseActiveEdge.restype = int32
# DAQmxSetSampClkTimebaseActiveEdge(taskHandle, data)
DAQmxSetSampClkTimebaseActiveEdge.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3792
DAQmxResetSampClkTimebaseActiveEdge = _stdcall_libraries['nicaiu'].DAQmxResetSampClkTimebaseActiveEdge
DAQmxResetSampClkTimebaseActiveEdge.restype = int32
# DAQmxResetSampClkTimebaseActiveEdge(taskHandle)
DAQmxResetSampClkTimebaseActiveEdge.argtypes = [TaskHandle]
# NIDAQmx.h 3794
DAQmxGetSampClkTimebaseMasterTimebaseDiv = _stdcall_libraries['nicaiu'].DAQmxGetSampClkTimebaseMasterTimebaseDiv
DAQmxGetSampClkTimebaseMasterTimebaseDiv.restype = int32
# DAQmxGetSampClkTimebaseMasterTimebaseDiv(taskHandle, data)
DAQmxGetSampClkTimebaseMasterTimebaseDiv.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 3795
DAQmxSetSampClkTimebaseMasterTimebaseDiv = _stdcall_libraries['nicaiu'].DAQmxSetSampClkTimebaseMasterTimebaseDiv
DAQmxSetSampClkTimebaseMasterTimebaseDiv.restype = int32
# DAQmxSetSampClkTimebaseMasterTimebaseDiv(taskHandle, data)
DAQmxSetSampClkTimebaseMasterTimebaseDiv.argtypes = [TaskHandle, uInt32]
# NIDAQmx.h 3796
DAQmxResetSampClkTimebaseMasterTimebaseDiv = _stdcall_libraries['nicaiu'].DAQmxResetSampClkTimebaseMasterTimebaseDiv
DAQmxResetSampClkTimebaseMasterTimebaseDiv.restype = int32
# DAQmxResetSampClkTimebaseMasterTimebaseDiv(taskHandle)
DAQmxResetSampClkTimebaseMasterTimebaseDiv.argtypes = [TaskHandle]
# NIDAQmx.h 3798
DAQmxGetSampClkDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetSampClkDigFltrEnable
DAQmxGetSampClkDigFltrEnable.restype = int32
# DAQmxGetSampClkDigFltrEnable(taskHandle, data)
DAQmxGetSampClkDigFltrEnable.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 3799
DAQmxSetSampClkDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetSampClkDigFltrEnable
DAQmxSetSampClkDigFltrEnable.restype = int32
# DAQmxSetSampClkDigFltrEnable(taskHandle, data)
DAQmxSetSampClkDigFltrEnable.argtypes = [TaskHandle, bool32]
# NIDAQmx.h 3800
DAQmxResetSampClkDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetSampClkDigFltrEnable
DAQmxResetSampClkDigFltrEnable.restype = int32
# DAQmxResetSampClkDigFltrEnable(taskHandle)
DAQmxResetSampClkDigFltrEnable.argtypes = [TaskHandle]
# NIDAQmx.h 3802
DAQmxGetSampClkDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetSampClkDigFltrMinPulseWidth
DAQmxGetSampClkDigFltrMinPulseWidth.restype = int32
# DAQmxGetSampClkDigFltrMinPulseWidth(taskHandle, data)
DAQmxGetSampClkDigFltrMinPulseWidth.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3803
DAQmxSetSampClkDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetSampClkDigFltrMinPulseWidth
DAQmxSetSampClkDigFltrMinPulseWidth.restype = int32
# DAQmxSetSampClkDigFltrMinPulseWidth(taskHandle, data)
DAQmxSetSampClkDigFltrMinPulseWidth.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3804
DAQmxResetSampClkDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetSampClkDigFltrMinPulseWidth
DAQmxResetSampClkDigFltrMinPulseWidth.restype = int32
# DAQmxResetSampClkDigFltrMinPulseWidth(taskHandle)
DAQmxResetSampClkDigFltrMinPulseWidth.argtypes = [TaskHandle]
# NIDAQmx.h 3806
DAQmxGetSampClkDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetSampClkDigFltrTimebaseSrc
DAQmxGetSampClkDigFltrTimebaseSrc.restype = int32
# DAQmxGetSampClkDigFltrTimebaseSrc(taskHandle, data, bufferSize)
DAQmxGetSampClkDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3807
DAQmxSetSampClkDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetSampClkDigFltrTimebaseSrc
DAQmxSetSampClkDigFltrTimebaseSrc.restype = int32
# DAQmxSetSampClkDigFltrTimebaseSrc(taskHandle, data)
DAQmxSetSampClkDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3808
DAQmxResetSampClkDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetSampClkDigFltrTimebaseSrc
DAQmxResetSampClkDigFltrTimebaseSrc.restype = int32
# DAQmxResetSampClkDigFltrTimebaseSrc(taskHandle)
DAQmxResetSampClkDigFltrTimebaseSrc.argtypes = [TaskHandle]
# NIDAQmx.h 3810
DAQmxGetSampClkDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetSampClkDigFltrTimebaseRate
DAQmxGetSampClkDigFltrTimebaseRate.restype = int32
# DAQmxGetSampClkDigFltrTimebaseRate(taskHandle, data)
DAQmxGetSampClkDigFltrTimebaseRate.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3811
DAQmxSetSampClkDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetSampClkDigFltrTimebaseRate
DAQmxSetSampClkDigFltrTimebaseRate.restype = int32
# DAQmxSetSampClkDigFltrTimebaseRate(taskHandle, data)
DAQmxSetSampClkDigFltrTimebaseRate.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3812
DAQmxResetSampClkDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetSampClkDigFltrTimebaseRate
DAQmxResetSampClkDigFltrTimebaseRate.restype = int32
# DAQmxResetSampClkDigFltrTimebaseRate(taskHandle)
DAQmxResetSampClkDigFltrTimebaseRate.argtypes = [TaskHandle]
# NIDAQmx.h 3814
DAQmxGetSampClkDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetSampClkDigSyncEnable
DAQmxGetSampClkDigSyncEnable.restype = int32
# DAQmxGetSampClkDigSyncEnable(taskHandle, data)
DAQmxGetSampClkDigSyncEnable.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 3815
DAQmxSetSampClkDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetSampClkDigSyncEnable
DAQmxSetSampClkDigSyncEnable.restype = int32
# DAQmxSetSampClkDigSyncEnable(taskHandle, data)
DAQmxSetSampClkDigSyncEnable.argtypes = [TaskHandle, bool32]
# NIDAQmx.h 3816
DAQmxResetSampClkDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetSampClkDigSyncEnable
DAQmxResetSampClkDigSyncEnable.restype = int32
# DAQmxResetSampClkDigSyncEnable(taskHandle)
DAQmxResetSampClkDigSyncEnable.argtypes = [TaskHandle]
# NIDAQmx.h 3818
DAQmxGetHshkDelayAfterXfer = _stdcall_libraries['nicaiu'].DAQmxGetHshkDelayAfterXfer
DAQmxGetHshkDelayAfterXfer.restype = int32
# DAQmxGetHshkDelayAfterXfer(taskHandle, data)
DAQmxGetHshkDelayAfterXfer.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3819
DAQmxSetHshkDelayAfterXfer = _stdcall_libraries['nicaiu'].DAQmxSetHshkDelayAfterXfer
DAQmxSetHshkDelayAfterXfer.restype = int32
# DAQmxSetHshkDelayAfterXfer(taskHandle, data)
DAQmxSetHshkDelayAfterXfer.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3820
DAQmxResetHshkDelayAfterXfer = _stdcall_libraries['nicaiu'].DAQmxResetHshkDelayAfterXfer
DAQmxResetHshkDelayAfterXfer.restype = int32
# DAQmxResetHshkDelayAfterXfer(taskHandle)
DAQmxResetHshkDelayAfterXfer.argtypes = [TaskHandle]
# NIDAQmx.h 3823
DAQmxGetHshkStartCond = _stdcall_libraries['nicaiu'].DAQmxGetHshkStartCond
DAQmxGetHshkStartCond.restype = int32
# DAQmxGetHshkStartCond(taskHandle, data)
DAQmxGetHshkStartCond.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3824
DAQmxSetHshkStartCond = _stdcall_libraries['nicaiu'].DAQmxSetHshkStartCond
DAQmxSetHshkStartCond.restype = int32
# DAQmxSetHshkStartCond(taskHandle, data)
DAQmxSetHshkStartCond.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3825
DAQmxResetHshkStartCond = _stdcall_libraries['nicaiu'].DAQmxResetHshkStartCond
DAQmxResetHshkStartCond.restype = int32
# DAQmxResetHshkStartCond(taskHandle)
DAQmxResetHshkStartCond.argtypes = [TaskHandle]
# NIDAQmx.h 3828
DAQmxGetHshkSampleInputDataWhen = _stdcall_libraries['nicaiu'].DAQmxGetHshkSampleInputDataWhen
DAQmxGetHshkSampleInputDataWhen.restype = int32
# DAQmxGetHshkSampleInputDataWhen(taskHandle, data)
DAQmxGetHshkSampleInputDataWhen.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3829
DAQmxSetHshkSampleInputDataWhen = _stdcall_libraries['nicaiu'].DAQmxSetHshkSampleInputDataWhen
DAQmxSetHshkSampleInputDataWhen.restype = int32
# DAQmxSetHshkSampleInputDataWhen(taskHandle, data)
DAQmxSetHshkSampleInputDataWhen.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3830
DAQmxResetHshkSampleInputDataWhen = _stdcall_libraries['nicaiu'].DAQmxResetHshkSampleInputDataWhen
DAQmxResetHshkSampleInputDataWhen.restype = int32
# DAQmxResetHshkSampleInputDataWhen(taskHandle)
DAQmxResetHshkSampleInputDataWhen.argtypes = [TaskHandle]
# NIDAQmx.h 3832
DAQmxGetChangeDetectDIRisingEdgePhysicalChans = _stdcall_libraries['nicaiu'].DAQmxGetChangeDetectDIRisingEdgePhysicalChans
DAQmxGetChangeDetectDIRisingEdgePhysicalChans.restype = int32
# DAQmxGetChangeDetectDIRisingEdgePhysicalChans(taskHandle, data, bufferSize)
DAQmxGetChangeDetectDIRisingEdgePhysicalChans.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3833
DAQmxSetChangeDetectDIRisingEdgePhysicalChans = _stdcall_libraries['nicaiu'].DAQmxSetChangeDetectDIRisingEdgePhysicalChans
DAQmxSetChangeDetectDIRisingEdgePhysicalChans.restype = int32
# DAQmxSetChangeDetectDIRisingEdgePhysicalChans(taskHandle, data)
DAQmxSetChangeDetectDIRisingEdgePhysicalChans.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3834
DAQmxResetChangeDetectDIRisingEdgePhysicalChans = _stdcall_libraries['nicaiu'].DAQmxResetChangeDetectDIRisingEdgePhysicalChans
DAQmxResetChangeDetectDIRisingEdgePhysicalChans.restype = int32
# DAQmxResetChangeDetectDIRisingEdgePhysicalChans(taskHandle)
DAQmxResetChangeDetectDIRisingEdgePhysicalChans.argtypes = [TaskHandle]
# NIDAQmx.h 3836
DAQmxGetChangeDetectDIFallingEdgePhysicalChans = _stdcall_libraries['nicaiu'].DAQmxGetChangeDetectDIFallingEdgePhysicalChans
DAQmxGetChangeDetectDIFallingEdgePhysicalChans.restype = int32
# DAQmxGetChangeDetectDIFallingEdgePhysicalChans(taskHandle, data, bufferSize)
DAQmxGetChangeDetectDIFallingEdgePhysicalChans.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3837
DAQmxSetChangeDetectDIFallingEdgePhysicalChans = _stdcall_libraries['nicaiu'].DAQmxSetChangeDetectDIFallingEdgePhysicalChans
DAQmxSetChangeDetectDIFallingEdgePhysicalChans.restype = int32
# DAQmxSetChangeDetectDIFallingEdgePhysicalChans(taskHandle, data)
DAQmxSetChangeDetectDIFallingEdgePhysicalChans.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3838
DAQmxResetChangeDetectDIFallingEdgePhysicalChans = _stdcall_libraries['nicaiu'].DAQmxResetChangeDetectDIFallingEdgePhysicalChans
DAQmxResetChangeDetectDIFallingEdgePhysicalChans.restype = int32
# DAQmxResetChangeDetectDIFallingEdgePhysicalChans(taskHandle)
DAQmxResetChangeDetectDIFallingEdgePhysicalChans.argtypes = [TaskHandle]
# NIDAQmx.h 3840
DAQmxGetOnDemandSimultaneousAOEnable = _stdcall_libraries['nicaiu'].DAQmxGetOnDemandSimultaneousAOEnable
DAQmxGetOnDemandSimultaneousAOEnable.restype = int32
# DAQmxGetOnDemandSimultaneousAOEnable(taskHandle, data)
DAQmxGetOnDemandSimultaneousAOEnable.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 3841
DAQmxSetOnDemandSimultaneousAOEnable = _stdcall_libraries['nicaiu'].DAQmxSetOnDemandSimultaneousAOEnable
DAQmxSetOnDemandSimultaneousAOEnable.restype = int32
# DAQmxSetOnDemandSimultaneousAOEnable(taskHandle, data)
DAQmxSetOnDemandSimultaneousAOEnable.argtypes = [TaskHandle, bool32]
# NIDAQmx.h 3842
DAQmxResetOnDemandSimultaneousAOEnable = _stdcall_libraries['nicaiu'].DAQmxResetOnDemandSimultaneousAOEnable
DAQmxResetOnDemandSimultaneousAOEnable.restype = int32
# DAQmxResetOnDemandSimultaneousAOEnable(taskHandle)
DAQmxResetOnDemandSimultaneousAOEnable.argtypes = [TaskHandle]
# NIDAQmx.h 3844
DAQmxGetAIConvRate = _stdcall_libraries['nicaiu'].DAQmxGetAIConvRate
DAQmxGetAIConvRate.restype = int32
# DAQmxGetAIConvRate(taskHandle, data)
DAQmxGetAIConvRate.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3845
DAQmxSetAIConvRate = _stdcall_libraries['nicaiu'].DAQmxSetAIConvRate
DAQmxSetAIConvRate.restype = int32
# DAQmxSetAIConvRate(taskHandle, data)
DAQmxSetAIConvRate.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3846
DAQmxResetAIConvRate = _stdcall_libraries['nicaiu'].DAQmxResetAIConvRate
DAQmxResetAIConvRate.restype = int32
# DAQmxResetAIConvRate(taskHandle)
DAQmxResetAIConvRate.argtypes = [TaskHandle]
# NIDAQmx.h 3848
DAQmxGetAIConvMaxRate = _stdcall_libraries['nicaiu'].DAQmxGetAIConvMaxRate
DAQmxGetAIConvMaxRate.restype = int32
# DAQmxGetAIConvMaxRate(taskHandle, data)
DAQmxGetAIConvMaxRate.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3850
DAQmxGetAIConvSrc = _stdcall_libraries['nicaiu'].DAQmxGetAIConvSrc
DAQmxGetAIConvSrc.restype = int32
# DAQmxGetAIConvSrc(taskHandle, data, bufferSize)
DAQmxGetAIConvSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3851
DAQmxSetAIConvSrc = _stdcall_libraries['nicaiu'].DAQmxSetAIConvSrc
DAQmxSetAIConvSrc.restype = int32
# DAQmxSetAIConvSrc(taskHandle, data)
DAQmxSetAIConvSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3852
DAQmxResetAIConvSrc = _stdcall_libraries['nicaiu'].DAQmxResetAIConvSrc
DAQmxResetAIConvSrc.restype = int32
# DAQmxResetAIConvSrc(taskHandle)
DAQmxResetAIConvSrc.argtypes = [TaskHandle]
# NIDAQmx.h 3855
DAQmxGetAIConvActiveEdge = _stdcall_libraries['nicaiu'].DAQmxGetAIConvActiveEdge
DAQmxGetAIConvActiveEdge.restype = int32
# DAQmxGetAIConvActiveEdge(taskHandle, data)
DAQmxGetAIConvActiveEdge.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3856
DAQmxSetAIConvActiveEdge = _stdcall_libraries['nicaiu'].DAQmxSetAIConvActiveEdge
DAQmxSetAIConvActiveEdge.restype = int32
# DAQmxSetAIConvActiveEdge(taskHandle, data)
DAQmxSetAIConvActiveEdge.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3857
DAQmxResetAIConvActiveEdge = _stdcall_libraries['nicaiu'].DAQmxResetAIConvActiveEdge
DAQmxResetAIConvActiveEdge.restype = int32
# DAQmxResetAIConvActiveEdge(taskHandle)
DAQmxResetAIConvActiveEdge.argtypes = [TaskHandle]
# NIDAQmx.h 3859
DAQmxGetAIConvTimebaseDiv = _stdcall_libraries['nicaiu'].DAQmxGetAIConvTimebaseDiv
DAQmxGetAIConvTimebaseDiv.restype = int32
# DAQmxGetAIConvTimebaseDiv(taskHandle, data)
DAQmxGetAIConvTimebaseDiv.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 3860
DAQmxSetAIConvTimebaseDiv = _stdcall_libraries['nicaiu'].DAQmxSetAIConvTimebaseDiv
DAQmxSetAIConvTimebaseDiv.restype = int32
# DAQmxSetAIConvTimebaseDiv(taskHandle, data)
DAQmxSetAIConvTimebaseDiv.argtypes = [TaskHandle, uInt32]
# NIDAQmx.h 3861
DAQmxResetAIConvTimebaseDiv = _stdcall_libraries['nicaiu'].DAQmxResetAIConvTimebaseDiv
DAQmxResetAIConvTimebaseDiv.restype = int32
# DAQmxResetAIConvTimebaseDiv(taskHandle)
DAQmxResetAIConvTimebaseDiv.argtypes = [TaskHandle]
# NIDAQmx.h 3864
DAQmxGetAIConvTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetAIConvTimebaseSrc
DAQmxGetAIConvTimebaseSrc.restype = int32
# DAQmxGetAIConvTimebaseSrc(taskHandle, data)
DAQmxGetAIConvTimebaseSrc.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3865
DAQmxSetAIConvTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetAIConvTimebaseSrc
DAQmxSetAIConvTimebaseSrc.restype = int32
# DAQmxSetAIConvTimebaseSrc(taskHandle, data)
DAQmxSetAIConvTimebaseSrc.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3866
DAQmxResetAIConvTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetAIConvTimebaseSrc
DAQmxResetAIConvTimebaseSrc.restype = int32
# DAQmxResetAIConvTimebaseSrc(taskHandle)
DAQmxResetAIConvTimebaseSrc.argtypes = [TaskHandle]
# NIDAQmx.h 3868
DAQmxGetMasterTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetMasterTimebaseRate
DAQmxGetMasterTimebaseRate.restype = int32
# DAQmxGetMasterTimebaseRate(taskHandle, data)
DAQmxGetMasterTimebaseRate.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3869
DAQmxSetMasterTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetMasterTimebaseRate
DAQmxSetMasterTimebaseRate.restype = int32
# DAQmxSetMasterTimebaseRate(taskHandle, data)
DAQmxSetMasterTimebaseRate.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3870
DAQmxResetMasterTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetMasterTimebaseRate
DAQmxResetMasterTimebaseRate.restype = int32
# DAQmxResetMasterTimebaseRate(taskHandle)
DAQmxResetMasterTimebaseRate.argtypes = [TaskHandle]
# NIDAQmx.h 3872
DAQmxGetMasterTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetMasterTimebaseSrc
DAQmxGetMasterTimebaseSrc.restype = int32
# DAQmxGetMasterTimebaseSrc(taskHandle, data, bufferSize)
DAQmxGetMasterTimebaseSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3873
DAQmxSetMasterTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetMasterTimebaseSrc
DAQmxSetMasterTimebaseSrc.restype = int32
# DAQmxSetMasterTimebaseSrc(taskHandle, data)
DAQmxSetMasterTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3874
DAQmxResetMasterTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetMasterTimebaseSrc
DAQmxResetMasterTimebaseSrc.restype = int32
# DAQmxResetMasterTimebaseSrc(taskHandle)
DAQmxResetMasterTimebaseSrc.argtypes = [TaskHandle]
# NIDAQmx.h 3876
DAQmxGetRefClkRate = _stdcall_libraries['nicaiu'].DAQmxGetRefClkRate
DAQmxGetRefClkRate.restype = int32
# DAQmxGetRefClkRate(taskHandle, data)
DAQmxGetRefClkRate.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3877
DAQmxSetRefClkRate = _stdcall_libraries['nicaiu'].DAQmxSetRefClkRate
DAQmxSetRefClkRate.restype = int32
# DAQmxSetRefClkRate(taskHandle, data)
DAQmxSetRefClkRate.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3878
DAQmxResetRefClkRate = _stdcall_libraries['nicaiu'].DAQmxResetRefClkRate
DAQmxResetRefClkRate.restype = int32
# DAQmxResetRefClkRate(taskHandle)
DAQmxResetRefClkRate.argtypes = [TaskHandle]
# NIDAQmx.h 3880
DAQmxGetRefClkSrc = _stdcall_libraries['nicaiu'].DAQmxGetRefClkSrc
DAQmxGetRefClkSrc.restype = int32
# DAQmxGetRefClkSrc(taskHandle, data, bufferSize)
DAQmxGetRefClkSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3881
DAQmxSetRefClkSrc = _stdcall_libraries['nicaiu'].DAQmxSetRefClkSrc
DAQmxSetRefClkSrc.restype = int32
# DAQmxSetRefClkSrc(taskHandle, data)
DAQmxSetRefClkSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3882
DAQmxResetRefClkSrc = _stdcall_libraries['nicaiu'].DAQmxResetRefClkSrc
DAQmxResetRefClkSrc.restype = int32
# DAQmxResetRefClkSrc(taskHandle)
DAQmxResetRefClkSrc.argtypes = [TaskHandle]
# NIDAQmx.h 3884
DAQmxGetSyncPulseSrc = _stdcall_libraries['nicaiu'].DAQmxGetSyncPulseSrc
DAQmxGetSyncPulseSrc.restype = int32
# DAQmxGetSyncPulseSrc(taskHandle, data, bufferSize)
DAQmxGetSyncPulseSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3885
DAQmxSetSyncPulseSrc = _stdcall_libraries['nicaiu'].DAQmxSetSyncPulseSrc
DAQmxSetSyncPulseSrc.restype = int32
# DAQmxSetSyncPulseSrc(taskHandle, data)
DAQmxSetSyncPulseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3886
DAQmxResetSyncPulseSrc = _stdcall_libraries['nicaiu'].DAQmxResetSyncPulseSrc
DAQmxResetSyncPulseSrc.restype = int32
# DAQmxResetSyncPulseSrc(taskHandle)
DAQmxResetSyncPulseSrc.argtypes = [TaskHandle]
# NIDAQmx.h 3888
DAQmxGetSyncPulseSyncTime = _stdcall_libraries['nicaiu'].DAQmxGetSyncPulseSyncTime
DAQmxGetSyncPulseSyncTime.restype = int32
# DAQmxGetSyncPulseSyncTime(taskHandle, data)
DAQmxGetSyncPulseSyncTime.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3890
DAQmxGetSyncPulseMinDelayToStart = _stdcall_libraries['nicaiu'].DAQmxGetSyncPulseMinDelayToStart
DAQmxGetSyncPulseMinDelayToStart.restype = int32
# DAQmxGetSyncPulseMinDelayToStart(taskHandle, data)
DAQmxGetSyncPulseMinDelayToStart.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3891
DAQmxSetSyncPulseMinDelayToStart = _stdcall_libraries['nicaiu'].DAQmxSetSyncPulseMinDelayToStart
DAQmxSetSyncPulseMinDelayToStart.restype = int32
# DAQmxSetSyncPulseMinDelayToStart(taskHandle, data)
DAQmxSetSyncPulseMinDelayToStart.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3892
DAQmxResetSyncPulseMinDelayToStart = _stdcall_libraries['nicaiu'].DAQmxResetSyncPulseMinDelayToStart
DAQmxResetSyncPulseMinDelayToStart.restype = int32
# DAQmxResetSyncPulseMinDelayToStart(taskHandle)
DAQmxResetSyncPulseMinDelayToStart.argtypes = [TaskHandle]
# NIDAQmx.h 3895
DAQmxGetDelayFromSampClkDelayUnits = _stdcall_libraries['nicaiu'].DAQmxGetDelayFromSampClkDelayUnits
DAQmxGetDelayFromSampClkDelayUnits.restype = int32
# DAQmxGetDelayFromSampClkDelayUnits(taskHandle, data)
DAQmxGetDelayFromSampClkDelayUnits.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3896
DAQmxSetDelayFromSampClkDelayUnits = _stdcall_libraries['nicaiu'].DAQmxSetDelayFromSampClkDelayUnits
DAQmxSetDelayFromSampClkDelayUnits.restype = int32
# DAQmxSetDelayFromSampClkDelayUnits(taskHandle, data)
DAQmxSetDelayFromSampClkDelayUnits.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3897
DAQmxResetDelayFromSampClkDelayUnits = _stdcall_libraries['nicaiu'].DAQmxResetDelayFromSampClkDelayUnits
DAQmxResetDelayFromSampClkDelayUnits.restype = int32
# DAQmxResetDelayFromSampClkDelayUnits(taskHandle)
DAQmxResetDelayFromSampClkDelayUnits.argtypes = [TaskHandle]
# NIDAQmx.h 3899
DAQmxGetDelayFromSampClkDelay = _stdcall_libraries['nicaiu'].DAQmxGetDelayFromSampClkDelay
DAQmxGetDelayFromSampClkDelay.restype = int32
# DAQmxGetDelayFromSampClkDelay(taskHandle, data)
DAQmxGetDelayFromSampClkDelay.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3900
DAQmxSetDelayFromSampClkDelay = _stdcall_libraries['nicaiu'].DAQmxSetDelayFromSampClkDelay
DAQmxSetDelayFromSampClkDelay.restype = int32
# DAQmxSetDelayFromSampClkDelay(taskHandle, data)
DAQmxSetDelayFromSampClkDelay.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3901
DAQmxResetDelayFromSampClkDelay = _stdcall_libraries['nicaiu'].DAQmxResetDelayFromSampClkDelay
DAQmxResetDelayFromSampClkDelay.restype = int32
# DAQmxResetDelayFromSampClkDelay(taskHandle)
DAQmxResetDelayFromSampClkDelay.argtypes = [TaskHandle]
# NIDAQmx.h 3906
DAQmxGetStartTrigType = _stdcall_libraries['nicaiu'].DAQmxGetStartTrigType
DAQmxGetStartTrigType.restype = int32
# DAQmxGetStartTrigType(taskHandle, data)
DAQmxGetStartTrigType.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3907
DAQmxSetStartTrigType = _stdcall_libraries['nicaiu'].DAQmxSetStartTrigType
DAQmxSetStartTrigType.restype = int32
# DAQmxSetStartTrigType(taskHandle, data)
DAQmxSetStartTrigType.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3908
DAQmxResetStartTrigType = _stdcall_libraries['nicaiu'].DAQmxResetStartTrigType
DAQmxResetStartTrigType.restype = int32
# DAQmxResetStartTrigType(taskHandle)
DAQmxResetStartTrigType.argtypes = [TaskHandle]
# NIDAQmx.h 3910
DAQmxGetDigEdgeStartTrigSrc = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeStartTrigSrc
DAQmxGetDigEdgeStartTrigSrc.restype = int32
# DAQmxGetDigEdgeStartTrigSrc(taskHandle, data, bufferSize)
DAQmxGetDigEdgeStartTrigSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3911
DAQmxSetDigEdgeStartTrigSrc = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeStartTrigSrc
DAQmxSetDigEdgeStartTrigSrc.restype = int32
# DAQmxSetDigEdgeStartTrigSrc(taskHandle, data)
DAQmxSetDigEdgeStartTrigSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3912
DAQmxResetDigEdgeStartTrigSrc = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeStartTrigSrc
DAQmxResetDigEdgeStartTrigSrc.restype = int32
# DAQmxResetDigEdgeStartTrigSrc(taskHandle)
DAQmxResetDigEdgeStartTrigSrc.argtypes = [TaskHandle]
# NIDAQmx.h 3915
DAQmxGetDigEdgeStartTrigEdge = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeStartTrigEdge
DAQmxGetDigEdgeStartTrigEdge.restype = int32
# DAQmxGetDigEdgeStartTrigEdge(taskHandle, data)
DAQmxGetDigEdgeStartTrigEdge.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3916
DAQmxSetDigEdgeStartTrigEdge = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeStartTrigEdge
DAQmxSetDigEdgeStartTrigEdge.restype = int32
# DAQmxSetDigEdgeStartTrigEdge(taskHandle, data)
DAQmxSetDigEdgeStartTrigEdge.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3917
DAQmxResetDigEdgeStartTrigEdge = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeStartTrigEdge
DAQmxResetDigEdgeStartTrigEdge.restype = int32
# DAQmxResetDigEdgeStartTrigEdge(taskHandle)
DAQmxResetDigEdgeStartTrigEdge.argtypes = [TaskHandle]
# NIDAQmx.h 3919
DAQmxGetDigEdgeStartTrigDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeStartTrigDigFltrEnable
DAQmxGetDigEdgeStartTrigDigFltrEnable.restype = int32
# DAQmxGetDigEdgeStartTrigDigFltrEnable(taskHandle, data)
DAQmxGetDigEdgeStartTrigDigFltrEnable.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 3920
DAQmxSetDigEdgeStartTrigDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeStartTrigDigFltrEnable
DAQmxSetDigEdgeStartTrigDigFltrEnable.restype = int32
# DAQmxSetDigEdgeStartTrigDigFltrEnable(taskHandle, data)
DAQmxSetDigEdgeStartTrigDigFltrEnable.argtypes = [TaskHandle, bool32]
# NIDAQmx.h 3921
DAQmxResetDigEdgeStartTrigDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeStartTrigDigFltrEnable
DAQmxResetDigEdgeStartTrigDigFltrEnable.restype = int32
# DAQmxResetDigEdgeStartTrigDigFltrEnable(taskHandle)
DAQmxResetDigEdgeStartTrigDigFltrEnable.argtypes = [TaskHandle]
# NIDAQmx.h 3923
DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth
DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth.restype = int32
# DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth(taskHandle, data)
DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3924
DAQmxSetDigEdgeStartTrigDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeStartTrigDigFltrMinPulseWidth
DAQmxSetDigEdgeStartTrigDigFltrMinPulseWidth.restype = int32
# DAQmxSetDigEdgeStartTrigDigFltrMinPulseWidth(taskHandle, data)
DAQmxSetDigEdgeStartTrigDigFltrMinPulseWidth.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3925
DAQmxResetDigEdgeStartTrigDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeStartTrigDigFltrMinPulseWidth
DAQmxResetDigEdgeStartTrigDigFltrMinPulseWidth.restype = int32
# DAQmxResetDigEdgeStartTrigDigFltrMinPulseWidth(taskHandle)
DAQmxResetDigEdgeStartTrigDigFltrMinPulseWidth.argtypes = [TaskHandle]
# NIDAQmx.h 3927
DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc
DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc.restype = int32
# DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc(taskHandle, data, bufferSize)
DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3928
DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc
DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc.restype = int32
# DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc(taskHandle, data)
DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3929
DAQmxResetDigEdgeStartTrigDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeStartTrigDigFltrTimebaseSrc
DAQmxResetDigEdgeStartTrigDigFltrTimebaseSrc.restype = int32
# DAQmxResetDigEdgeStartTrigDigFltrTimebaseSrc(taskHandle)
DAQmxResetDigEdgeStartTrigDigFltrTimebaseSrc.argtypes = [TaskHandle]
# NIDAQmx.h 3931
DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate
DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate.restype = int32
# DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate(taskHandle, data)
DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3932
DAQmxSetDigEdgeStartTrigDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeStartTrigDigFltrTimebaseRate
DAQmxSetDigEdgeStartTrigDigFltrTimebaseRate.restype = int32
# DAQmxSetDigEdgeStartTrigDigFltrTimebaseRate(taskHandle, data)
DAQmxSetDigEdgeStartTrigDigFltrTimebaseRate.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3933
DAQmxResetDigEdgeStartTrigDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeStartTrigDigFltrTimebaseRate
DAQmxResetDigEdgeStartTrigDigFltrTimebaseRate.restype = int32
# DAQmxResetDigEdgeStartTrigDigFltrTimebaseRate(taskHandle)
DAQmxResetDigEdgeStartTrigDigFltrTimebaseRate.argtypes = [TaskHandle]
# NIDAQmx.h 3935
DAQmxGetDigEdgeStartTrigDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeStartTrigDigSyncEnable
DAQmxGetDigEdgeStartTrigDigSyncEnable.restype = int32
# DAQmxGetDigEdgeStartTrigDigSyncEnable(taskHandle, data)
DAQmxGetDigEdgeStartTrigDigSyncEnable.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 3936
DAQmxSetDigEdgeStartTrigDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeStartTrigDigSyncEnable
DAQmxSetDigEdgeStartTrigDigSyncEnable.restype = int32
# DAQmxSetDigEdgeStartTrigDigSyncEnable(taskHandle, data)
DAQmxSetDigEdgeStartTrigDigSyncEnable.argtypes = [TaskHandle, bool32]
# NIDAQmx.h 3937
DAQmxResetDigEdgeStartTrigDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeStartTrigDigSyncEnable
DAQmxResetDigEdgeStartTrigDigSyncEnable.restype = int32
# DAQmxResetDigEdgeStartTrigDigSyncEnable(taskHandle)
DAQmxResetDigEdgeStartTrigDigSyncEnable.argtypes = [TaskHandle]
# NIDAQmx.h 3939
DAQmxGetDigPatternStartTrigSrc = _stdcall_libraries['nicaiu'].DAQmxGetDigPatternStartTrigSrc
DAQmxGetDigPatternStartTrigSrc.restype = int32
# DAQmxGetDigPatternStartTrigSrc(taskHandle, data, bufferSize)
DAQmxGetDigPatternStartTrigSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3940
DAQmxSetDigPatternStartTrigSrc = _stdcall_libraries['nicaiu'].DAQmxSetDigPatternStartTrigSrc
DAQmxSetDigPatternStartTrigSrc.restype = int32
# DAQmxSetDigPatternStartTrigSrc(taskHandle, data)
DAQmxSetDigPatternStartTrigSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3941
DAQmxResetDigPatternStartTrigSrc = _stdcall_libraries['nicaiu'].DAQmxResetDigPatternStartTrigSrc
DAQmxResetDigPatternStartTrigSrc.restype = int32
# DAQmxResetDigPatternStartTrigSrc(taskHandle)
DAQmxResetDigPatternStartTrigSrc.argtypes = [TaskHandle]
# NIDAQmx.h 3943
DAQmxGetDigPatternStartTrigPattern = _stdcall_libraries['nicaiu'].DAQmxGetDigPatternStartTrigPattern
DAQmxGetDigPatternStartTrigPattern.restype = int32
# DAQmxGetDigPatternStartTrigPattern(taskHandle, data, bufferSize)
DAQmxGetDigPatternStartTrigPattern.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3944
DAQmxSetDigPatternStartTrigPattern = _stdcall_libraries['nicaiu'].DAQmxSetDigPatternStartTrigPattern
DAQmxSetDigPatternStartTrigPattern.restype = int32
# DAQmxSetDigPatternStartTrigPattern(taskHandle, data)
DAQmxSetDigPatternStartTrigPattern.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3945
DAQmxResetDigPatternStartTrigPattern = _stdcall_libraries['nicaiu'].DAQmxResetDigPatternStartTrigPattern
DAQmxResetDigPatternStartTrigPattern.restype = int32
# DAQmxResetDigPatternStartTrigPattern(taskHandle)
DAQmxResetDigPatternStartTrigPattern.argtypes = [TaskHandle]
# NIDAQmx.h 3948
DAQmxGetDigPatternStartTrigWhen = _stdcall_libraries['nicaiu'].DAQmxGetDigPatternStartTrigWhen
DAQmxGetDigPatternStartTrigWhen.restype = int32
# DAQmxGetDigPatternStartTrigWhen(taskHandle, data)
DAQmxGetDigPatternStartTrigWhen.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3949
DAQmxSetDigPatternStartTrigWhen = _stdcall_libraries['nicaiu'].DAQmxSetDigPatternStartTrigWhen
DAQmxSetDigPatternStartTrigWhen.restype = int32
# DAQmxSetDigPatternStartTrigWhen(taskHandle, data)
DAQmxSetDigPatternStartTrigWhen.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3950
DAQmxResetDigPatternStartTrigWhen = _stdcall_libraries['nicaiu'].DAQmxResetDigPatternStartTrigWhen
DAQmxResetDigPatternStartTrigWhen.restype = int32
# DAQmxResetDigPatternStartTrigWhen(taskHandle)
DAQmxResetDigPatternStartTrigWhen.argtypes = [TaskHandle]
# NIDAQmx.h 3952
DAQmxGetAnlgEdgeStartTrigSrc = _stdcall_libraries['nicaiu'].DAQmxGetAnlgEdgeStartTrigSrc
DAQmxGetAnlgEdgeStartTrigSrc.restype = int32
# DAQmxGetAnlgEdgeStartTrigSrc(taskHandle, data, bufferSize)
DAQmxGetAnlgEdgeStartTrigSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3953
DAQmxSetAnlgEdgeStartTrigSrc = _stdcall_libraries['nicaiu'].DAQmxSetAnlgEdgeStartTrigSrc
DAQmxSetAnlgEdgeStartTrigSrc.restype = int32
# DAQmxSetAnlgEdgeStartTrigSrc(taskHandle, data)
DAQmxSetAnlgEdgeStartTrigSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3954
DAQmxResetAnlgEdgeStartTrigSrc = _stdcall_libraries['nicaiu'].DAQmxResetAnlgEdgeStartTrigSrc
DAQmxResetAnlgEdgeStartTrigSrc.restype = int32
# DAQmxResetAnlgEdgeStartTrigSrc(taskHandle)
DAQmxResetAnlgEdgeStartTrigSrc.argtypes = [TaskHandle]
# NIDAQmx.h 3957
DAQmxGetAnlgEdgeStartTrigSlope = _stdcall_libraries['nicaiu'].DAQmxGetAnlgEdgeStartTrigSlope
DAQmxGetAnlgEdgeStartTrigSlope.restype = int32
# DAQmxGetAnlgEdgeStartTrigSlope(taskHandle, data)
DAQmxGetAnlgEdgeStartTrigSlope.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3958
DAQmxSetAnlgEdgeStartTrigSlope = _stdcall_libraries['nicaiu'].DAQmxSetAnlgEdgeStartTrigSlope
DAQmxSetAnlgEdgeStartTrigSlope.restype = int32
# DAQmxSetAnlgEdgeStartTrigSlope(taskHandle, data)
DAQmxSetAnlgEdgeStartTrigSlope.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3959
DAQmxResetAnlgEdgeStartTrigSlope = _stdcall_libraries['nicaiu'].DAQmxResetAnlgEdgeStartTrigSlope
DAQmxResetAnlgEdgeStartTrigSlope.restype = int32
# DAQmxResetAnlgEdgeStartTrigSlope(taskHandle)
DAQmxResetAnlgEdgeStartTrigSlope.argtypes = [TaskHandle]
# NIDAQmx.h 3961
DAQmxGetAnlgEdgeStartTrigLvl = _stdcall_libraries['nicaiu'].DAQmxGetAnlgEdgeStartTrigLvl
DAQmxGetAnlgEdgeStartTrigLvl.restype = int32
# DAQmxGetAnlgEdgeStartTrigLvl(taskHandle, data)
DAQmxGetAnlgEdgeStartTrigLvl.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3962
DAQmxSetAnlgEdgeStartTrigLvl = _stdcall_libraries['nicaiu'].DAQmxSetAnlgEdgeStartTrigLvl
DAQmxSetAnlgEdgeStartTrigLvl.restype = int32
# DAQmxSetAnlgEdgeStartTrigLvl(taskHandle, data)
DAQmxSetAnlgEdgeStartTrigLvl.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3963
DAQmxResetAnlgEdgeStartTrigLvl = _stdcall_libraries['nicaiu'].DAQmxResetAnlgEdgeStartTrigLvl
DAQmxResetAnlgEdgeStartTrigLvl.restype = int32
# DAQmxResetAnlgEdgeStartTrigLvl(taskHandle)
DAQmxResetAnlgEdgeStartTrigLvl.argtypes = [TaskHandle]
# NIDAQmx.h 3965
DAQmxGetAnlgEdgeStartTrigHyst = _stdcall_libraries['nicaiu'].DAQmxGetAnlgEdgeStartTrigHyst
DAQmxGetAnlgEdgeStartTrigHyst.restype = int32
# DAQmxGetAnlgEdgeStartTrigHyst(taskHandle, data)
DAQmxGetAnlgEdgeStartTrigHyst.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3966
DAQmxSetAnlgEdgeStartTrigHyst = _stdcall_libraries['nicaiu'].DAQmxSetAnlgEdgeStartTrigHyst
DAQmxSetAnlgEdgeStartTrigHyst.restype = int32
# DAQmxSetAnlgEdgeStartTrigHyst(taskHandle, data)
DAQmxSetAnlgEdgeStartTrigHyst.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3967
DAQmxResetAnlgEdgeStartTrigHyst = _stdcall_libraries['nicaiu'].DAQmxResetAnlgEdgeStartTrigHyst
DAQmxResetAnlgEdgeStartTrigHyst.restype = int32
# DAQmxResetAnlgEdgeStartTrigHyst(taskHandle)
DAQmxResetAnlgEdgeStartTrigHyst.argtypes = [TaskHandle]
# NIDAQmx.h 3970
DAQmxGetAnlgEdgeStartTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxGetAnlgEdgeStartTrigCoupling
DAQmxGetAnlgEdgeStartTrigCoupling.restype = int32
# DAQmxGetAnlgEdgeStartTrigCoupling(taskHandle, data)
DAQmxGetAnlgEdgeStartTrigCoupling.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3971
DAQmxSetAnlgEdgeStartTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxSetAnlgEdgeStartTrigCoupling
DAQmxSetAnlgEdgeStartTrigCoupling.restype = int32
# DAQmxSetAnlgEdgeStartTrigCoupling(taskHandle, data)
DAQmxSetAnlgEdgeStartTrigCoupling.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3972
DAQmxResetAnlgEdgeStartTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxResetAnlgEdgeStartTrigCoupling
DAQmxResetAnlgEdgeStartTrigCoupling.restype = int32
# DAQmxResetAnlgEdgeStartTrigCoupling(taskHandle)
DAQmxResetAnlgEdgeStartTrigCoupling.argtypes = [TaskHandle]
# NIDAQmx.h 3974
DAQmxGetAnlgWinStartTrigSrc = _stdcall_libraries['nicaiu'].DAQmxGetAnlgWinStartTrigSrc
DAQmxGetAnlgWinStartTrigSrc.restype = int32
# DAQmxGetAnlgWinStartTrigSrc(taskHandle, data, bufferSize)
DAQmxGetAnlgWinStartTrigSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 3975
DAQmxSetAnlgWinStartTrigSrc = _stdcall_libraries['nicaiu'].DAQmxSetAnlgWinStartTrigSrc
DAQmxSetAnlgWinStartTrigSrc.restype = int32
# DAQmxSetAnlgWinStartTrigSrc(taskHandle, data)
DAQmxSetAnlgWinStartTrigSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 3976
DAQmxResetAnlgWinStartTrigSrc = _stdcall_libraries['nicaiu'].DAQmxResetAnlgWinStartTrigSrc
DAQmxResetAnlgWinStartTrigSrc.restype = int32
# DAQmxResetAnlgWinStartTrigSrc(taskHandle)
DAQmxResetAnlgWinStartTrigSrc.argtypes = [TaskHandle]
# NIDAQmx.h 3979
DAQmxGetAnlgWinStartTrigWhen = _stdcall_libraries['nicaiu'].DAQmxGetAnlgWinStartTrigWhen
DAQmxGetAnlgWinStartTrigWhen.restype = int32
# DAQmxGetAnlgWinStartTrigWhen(taskHandle, data)
DAQmxGetAnlgWinStartTrigWhen.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3980
DAQmxSetAnlgWinStartTrigWhen = _stdcall_libraries['nicaiu'].DAQmxSetAnlgWinStartTrigWhen
DAQmxSetAnlgWinStartTrigWhen.restype = int32
# DAQmxSetAnlgWinStartTrigWhen(taskHandle, data)
DAQmxSetAnlgWinStartTrigWhen.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3981
DAQmxResetAnlgWinStartTrigWhen = _stdcall_libraries['nicaiu'].DAQmxResetAnlgWinStartTrigWhen
DAQmxResetAnlgWinStartTrigWhen.restype = int32
# DAQmxResetAnlgWinStartTrigWhen(taskHandle)
DAQmxResetAnlgWinStartTrigWhen.argtypes = [TaskHandle]
# NIDAQmx.h 3983
DAQmxGetAnlgWinStartTrigTop = _stdcall_libraries['nicaiu'].DAQmxGetAnlgWinStartTrigTop
DAQmxGetAnlgWinStartTrigTop.restype = int32
# DAQmxGetAnlgWinStartTrigTop(taskHandle, data)
DAQmxGetAnlgWinStartTrigTop.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3984
DAQmxSetAnlgWinStartTrigTop = _stdcall_libraries['nicaiu'].DAQmxSetAnlgWinStartTrigTop
DAQmxSetAnlgWinStartTrigTop.restype = int32
# DAQmxSetAnlgWinStartTrigTop(taskHandle, data)
DAQmxSetAnlgWinStartTrigTop.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3985
DAQmxResetAnlgWinStartTrigTop = _stdcall_libraries['nicaiu'].DAQmxResetAnlgWinStartTrigTop
DAQmxResetAnlgWinStartTrigTop.restype = int32
# DAQmxResetAnlgWinStartTrigTop(taskHandle)
DAQmxResetAnlgWinStartTrigTop.argtypes = [TaskHandle]
# NIDAQmx.h 3987
DAQmxGetAnlgWinStartTrigBtm = _stdcall_libraries['nicaiu'].DAQmxGetAnlgWinStartTrigBtm
DAQmxGetAnlgWinStartTrigBtm.restype = int32
# DAQmxGetAnlgWinStartTrigBtm(taskHandle, data)
DAQmxGetAnlgWinStartTrigBtm.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3988
DAQmxSetAnlgWinStartTrigBtm = _stdcall_libraries['nicaiu'].DAQmxSetAnlgWinStartTrigBtm
DAQmxSetAnlgWinStartTrigBtm.restype = int32
# DAQmxSetAnlgWinStartTrigBtm(taskHandle, data)
DAQmxSetAnlgWinStartTrigBtm.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3989
DAQmxResetAnlgWinStartTrigBtm = _stdcall_libraries['nicaiu'].DAQmxResetAnlgWinStartTrigBtm
DAQmxResetAnlgWinStartTrigBtm.restype = int32
# DAQmxResetAnlgWinStartTrigBtm(taskHandle)
DAQmxResetAnlgWinStartTrigBtm.argtypes = [TaskHandle]
# NIDAQmx.h 3992
DAQmxGetAnlgWinStartTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxGetAnlgWinStartTrigCoupling
DAQmxGetAnlgWinStartTrigCoupling.restype = int32
# DAQmxGetAnlgWinStartTrigCoupling(taskHandle, data)
DAQmxGetAnlgWinStartTrigCoupling.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 3993
DAQmxSetAnlgWinStartTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxSetAnlgWinStartTrigCoupling
DAQmxSetAnlgWinStartTrigCoupling.restype = int32
# DAQmxSetAnlgWinStartTrigCoupling(taskHandle, data)
DAQmxSetAnlgWinStartTrigCoupling.argtypes = [TaskHandle, int32]
# NIDAQmx.h 3994
DAQmxResetAnlgWinStartTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxResetAnlgWinStartTrigCoupling
DAQmxResetAnlgWinStartTrigCoupling.restype = int32
# DAQmxResetAnlgWinStartTrigCoupling(taskHandle)
DAQmxResetAnlgWinStartTrigCoupling.argtypes = [TaskHandle]
# NIDAQmx.h 3996
DAQmxGetStartTrigDelay = _stdcall_libraries['nicaiu'].DAQmxGetStartTrigDelay
DAQmxGetStartTrigDelay.restype = int32
# DAQmxGetStartTrigDelay(taskHandle, data)
DAQmxGetStartTrigDelay.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 3997
DAQmxSetStartTrigDelay = _stdcall_libraries['nicaiu'].DAQmxSetStartTrigDelay
DAQmxSetStartTrigDelay.restype = int32
# DAQmxSetStartTrigDelay(taskHandle, data)
DAQmxSetStartTrigDelay.argtypes = [TaskHandle, float64]
# NIDAQmx.h 3998
DAQmxResetStartTrigDelay = _stdcall_libraries['nicaiu'].DAQmxResetStartTrigDelay
DAQmxResetStartTrigDelay.restype = int32
# DAQmxResetStartTrigDelay(taskHandle)
DAQmxResetStartTrigDelay.argtypes = [TaskHandle]
# NIDAQmx.h 4001
DAQmxGetStartTrigDelayUnits = _stdcall_libraries['nicaiu'].DAQmxGetStartTrigDelayUnits
DAQmxGetStartTrigDelayUnits.restype = int32
# DAQmxGetStartTrigDelayUnits(taskHandle, data)
DAQmxGetStartTrigDelayUnits.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4002
DAQmxSetStartTrigDelayUnits = _stdcall_libraries['nicaiu'].DAQmxSetStartTrigDelayUnits
DAQmxSetStartTrigDelayUnits.restype = int32
# DAQmxSetStartTrigDelayUnits(taskHandle, data)
DAQmxSetStartTrigDelayUnits.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4003
DAQmxResetStartTrigDelayUnits = _stdcall_libraries['nicaiu'].DAQmxResetStartTrigDelayUnits
DAQmxResetStartTrigDelayUnits.restype = int32
# DAQmxResetStartTrigDelayUnits(taskHandle)
DAQmxResetStartTrigDelayUnits.argtypes = [TaskHandle]
# NIDAQmx.h 4005
DAQmxGetStartTrigRetriggerable = _stdcall_libraries['nicaiu'].DAQmxGetStartTrigRetriggerable
DAQmxGetStartTrigRetriggerable.restype = int32
# DAQmxGetStartTrigRetriggerable(taskHandle, data)
DAQmxGetStartTrigRetriggerable.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 4006
DAQmxSetStartTrigRetriggerable = _stdcall_libraries['nicaiu'].DAQmxSetStartTrigRetriggerable
DAQmxSetStartTrigRetriggerable.restype = int32
# DAQmxSetStartTrigRetriggerable(taskHandle, data)
DAQmxSetStartTrigRetriggerable.argtypes = [TaskHandle, bool32]
# NIDAQmx.h 4007
DAQmxResetStartTrigRetriggerable = _stdcall_libraries['nicaiu'].DAQmxResetStartTrigRetriggerable
DAQmxResetStartTrigRetriggerable.restype = int32
# DAQmxResetStartTrigRetriggerable(taskHandle)
DAQmxResetStartTrigRetriggerable.argtypes = [TaskHandle]
# NIDAQmx.h 4010
DAQmxGetRefTrigType = _stdcall_libraries['nicaiu'].DAQmxGetRefTrigType
DAQmxGetRefTrigType.restype = int32
# DAQmxGetRefTrigType(taskHandle, data)
DAQmxGetRefTrigType.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4011
DAQmxSetRefTrigType = _stdcall_libraries['nicaiu'].DAQmxSetRefTrigType
DAQmxSetRefTrigType.restype = int32
# DAQmxSetRefTrigType(taskHandle, data)
DAQmxSetRefTrigType.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4012
DAQmxResetRefTrigType = _stdcall_libraries['nicaiu'].DAQmxResetRefTrigType
DAQmxResetRefTrigType.restype = int32
# DAQmxResetRefTrigType(taskHandle)
DAQmxResetRefTrigType.argtypes = [TaskHandle]
# NIDAQmx.h 4014
DAQmxGetRefTrigPretrigSamples = _stdcall_libraries['nicaiu'].DAQmxGetRefTrigPretrigSamples
DAQmxGetRefTrigPretrigSamples.restype = int32
# DAQmxGetRefTrigPretrigSamples(taskHandle, data)
DAQmxGetRefTrigPretrigSamples.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 4015
DAQmxSetRefTrigPretrigSamples = _stdcall_libraries['nicaiu'].DAQmxSetRefTrigPretrigSamples
DAQmxSetRefTrigPretrigSamples.restype = int32
# DAQmxSetRefTrigPretrigSamples(taskHandle, data)
DAQmxSetRefTrigPretrigSamples.argtypes = [TaskHandle, uInt32]
# NIDAQmx.h 4016
DAQmxResetRefTrigPretrigSamples = _stdcall_libraries['nicaiu'].DAQmxResetRefTrigPretrigSamples
DAQmxResetRefTrigPretrigSamples.restype = int32
# DAQmxResetRefTrigPretrigSamples(taskHandle)
DAQmxResetRefTrigPretrigSamples.argtypes = [TaskHandle]
# NIDAQmx.h 4018
DAQmxGetDigEdgeRefTrigSrc = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeRefTrigSrc
DAQmxGetDigEdgeRefTrigSrc.restype = int32
# DAQmxGetDigEdgeRefTrigSrc(taskHandle, data, bufferSize)
DAQmxGetDigEdgeRefTrigSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 4019
DAQmxSetDigEdgeRefTrigSrc = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeRefTrigSrc
DAQmxSetDigEdgeRefTrigSrc.restype = int32
# DAQmxSetDigEdgeRefTrigSrc(taskHandle, data)
DAQmxSetDigEdgeRefTrigSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 4020
DAQmxResetDigEdgeRefTrigSrc = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeRefTrigSrc
DAQmxResetDigEdgeRefTrigSrc.restype = int32
# DAQmxResetDigEdgeRefTrigSrc(taskHandle)
DAQmxResetDigEdgeRefTrigSrc.argtypes = [TaskHandle]
# NIDAQmx.h 4023
DAQmxGetDigEdgeRefTrigEdge = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeRefTrigEdge
DAQmxGetDigEdgeRefTrigEdge.restype = int32
# DAQmxGetDigEdgeRefTrigEdge(taskHandle, data)
DAQmxGetDigEdgeRefTrigEdge.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4024
DAQmxSetDigEdgeRefTrigEdge = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeRefTrigEdge
DAQmxSetDigEdgeRefTrigEdge.restype = int32
# DAQmxSetDigEdgeRefTrigEdge(taskHandle, data)
DAQmxSetDigEdgeRefTrigEdge.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4025
DAQmxResetDigEdgeRefTrigEdge = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeRefTrigEdge
DAQmxResetDigEdgeRefTrigEdge.restype = int32
# DAQmxResetDigEdgeRefTrigEdge(taskHandle)
DAQmxResetDigEdgeRefTrigEdge.argtypes = [TaskHandle]
# NIDAQmx.h 4027
DAQmxGetDigPatternRefTrigSrc = _stdcall_libraries['nicaiu'].DAQmxGetDigPatternRefTrigSrc
DAQmxGetDigPatternRefTrigSrc.restype = int32
# DAQmxGetDigPatternRefTrigSrc(taskHandle, data, bufferSize)
DAQmxGetDigPatternRefTrigSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 4028
DAQmxSetDigPatternRefTrigSrc = _stdcall_libraries['nicaiu'].DAQmxSetDigPatternRefTrigSrc
DAQmxSetDigPatternRefTrigSrc.restype = int32
# DAQmxSetDigPatternRefTrigSrc(taskHandle, data)
DAQmxSetDigPatternRefTrigSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 4029
DAQmxResetDigPatternRefTrigSrc = _stdcall_libraries['nicaiu'].DAQmxResetDigPatternRefTrigSrc
DAQmxResetDigPatternRefTrigSrc.restype = int32
# DAQmxResetDigPatternRefTrigSrc(taskHandle)
DAQmxResetDigPatternRefTrigSrc.argtypes = [TaskHandle]
# NIDAQmx.h 4031
DAQmxGetDigPatternRefTrigPattern = _stdcall_libraries['nicaiu'].DAQmxGetDigPatternRefTrigPattern
DAQmxGetDigPatternRefTrigPattern.restype = int32
# DAQmxGetDigPatternRefTrigPattern(taskHandle, data, bufferSize)
DAQmxGetDigPatternRefTrigPattern.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 4032
DAQmxSetDigPatternRefTrigPattern = _stdcall_libraries['nicaiu'].DAQmxSetDigPatternRefTrigPattern
DAQmxSetDigPatternRefTrigPattern.restype = int32
# DAQmxSetDigPatternRefTrigPattern(taskHandle, data)
DAQmxSetDigPatternRefTrigPattern.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 4033
DAQmxResetDigPatternRefTrigPattern = _stdcall_libraries['nicaiu'].DAQmxResetDigPatternRefTrigPattern
DAQmxResetDigPatternRefTrigPattern.restype = int32
# DAQmxResetDigPatternRefTrigPattern(taskHandle)
DAQmxResetDigPatternRefTrigPattern.argtypes = [TaskHandle]
# NIDAQmx.h 4036
DAQmxGetDigPatternRefTrigWhen = _stdcall_libraries['nicaiu'].DAQmxGetDigPatternRefTrigWhen
DAQmxGetDigPatternRefTrigWhen.restype = int32
# DAQmxGetDigPatternRefTrigWhen(taskHandle, data)
DAQmxGetDigPatternRefTrigWhen.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4037
DAQmxSetDigPatternRefTrigWhen = _stdcall_libraries['nicaiu'].DAQmxSetDigPatternRefTrigWhen
DAQmxSetDigPatternRefTrigWhen.restype = int32
# DAQmxSetDigPatternRefTrigWhen(taskHandle, data)
DAQmxSetDigPatternRefTrigWhen.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4038
DAQmxResetDigPatternRefTrigWhen = _stdcall_libraries['nicaiu'].DAQmxResetDigPatternRefTrigWhen
DAQmxResetDigPatternRefTrigWhen.restype = int32
# DAQmxResetDigPatternRefTrigWhen(taskHandle)
DAQmxResetDigPatternRefTrigWhen.argtypes = [TaskHandle]
# NIDAQmx.h 4040
DAQmxGetAnlgEdgeRefTrigSrc = _stdcall_libraries['nicaiu'].DAQmxGetAnlgEdgeRefTrigSrc
DAQmxGetAnlgEdgeRefTrigSrc.restype = int32
# DAQmxGetAnlgEdgeRefTrigSrc(taskHandle, data, bufferSize)
DAQmxGetAnlgEdgeRefTrigSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 4041
DAQmxSetAnlgEdgeRefTrigSrc = _stdcall_libraries['nicaiu'].DAQmxSetAnlgEdgeRefTrigSrc
DAQmxSetAnlgEdgeRefTrigSrc.restype = int32
# DAQmxSetAnlgEdgeRefTrigSrc(taskHandle, data)
DAQmxSetAnlgEdgeRefTrigSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 4042
DAQmxResetAnlgEdgeRefTrigSrc = _stdcall_libraries['nicaiu'].DAQmxResetAnlgEdgeRefTrigSrc
DAQmxResetAnlgEdgeRefTrigSrc.restype = int32
# DAQmxResetAnlgEdgeRefTrigSrc(taskHandle)
DAQmxResetAnlgEdgeRefTrigSrc.argtypes = [TaskHandle]
# NIDAQmx.h 4045
DAQmxGetAnlgEdgeRefTrigSlope = _stdcall_libraries['nicaiu'].DAQmxGetAnlgEdgeRefTrigSlope
DAQmxGetAnlgEdgeRefTrigSlope.restype = int32
# DAQmxGetAnlgEdgeRefTrigSlope(taskHandle, data)
DAQmxGetAnlgEdgeRefTrigSlope.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4046
DAQmxSetAnlgEdgeRefTrigSlope = _stdcall_libraries['nicaiu'].DAQmxSetAnlgEdgeRefTrigSlope
DAQmxSetAnlgEdgeRefTrigSlope.restype = int32
# DAQmxSetAnlgEdgeRefTrigSlope(taskHandle, data)
DAQmxSetAnlgEdgeRefTrigSlope.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4047
DAQmxResetAnlgEdgeRefTrigSlope = _stdcall_libraries['nicaiu'].DAQmxResetAnlgEdgeRefTrigSlope
DAQmxResetAnlgEdgeRefTrigSlope.restype = int32
# DAQmxResetAnlgEdgeRefTrigSlope(taskHandle)
DAQmxResetAnlgEdgeRefTrigSlope.argtypes = [TaskHandle]
# NIDAQmx.h 4049
DAQmxGetAnlgEdgeRefTrigLvl = _stdcall_libraries['nicaiu'].DAQmxGetAnlgEdgeRefTrigLvl
DAQmxGetAnlgEdgeRefTrigLvl.restype = int32
# DAQmxGetAnlgEdgeRefTrigLvl(taskHandle, data)
DAQmxGetAnlgEdgeRefTrigLvl.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 4050
DAQmxSetAnlgEdgeRefTrigLvl = _stdcall_libraries['nicaiu'].DAQmxSetAnlgEdgeRefTrigLvl
DAQmxSetAnlgEdgeRefTrigLvl.restype = int32
# DAQmxSetAnlgEdgeRefTrigLvl(taskHandle, data)
DAQmxSetAnlgEdgeRefTrigLvl.argtypes = [TaskHandle, float64]
# NIDAQmx.h 4051
DAQmxResetAnlgEdgeRefTrigLvl = _stdcall_libraries['nicaiu'].DAQmxResetAnlgEdgeRefTrigLvl
DAQmxResetAnlgEdgeRefTrigLvl.restype = int32
# DAQmxResetAnlgEdgeRefTrigLvl(taskHandle)
DAQmxResetAnlgEdgeRefTrigLvl.argtypes = [TaskHandle]
# NIDAQmx.h 4053
DAQmxGetAnlgEdgeRefTrigHyst = _stdcall_libraries['nicaiu'].DAQmxGetAnlgEdgeRefTrigHyst
DAQmxGetAnlgEdgeRefTrigHyst.restype = int32
# DAQmxGetAnlgEdgeRefTrigHyst(taskHandle, data)
DAQmxGetAnlgEdgeRefTrigHyst.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 4054
DAQmxSetAnlgEdgeRefTrigHyst = _stdcall_libraries['nicaiu'].DAQmxSetAnlgEdgeRefTrigHyst
DAQmxSetAnlgEdgeRefTrigHyst.restype = int32
# DAQmxSetAnlgEdgeRefTrigHyst(taskHandle, data)
DAQmxSetAnlgEdgeRefTrigHyst.argtypes = [TaskHandle, float64]
# NIDAQmx.h 4055
DAQmxResetAnlgEdgeRefTrigHyst = _stdcall_libraries['nicaiu'].DAQmxResetAnlgEdgeRefTrigHyst
DAQmxResetAnlgEdgeRefTrigHyst.restype = int32
# DAQmxResetAnlgEdgeRefTrigHyst(taskHandle)
DAQmxResetAnlgEdgeRefTrigHyst.argtypes = [TaskHandle]
# NIDAQmx.h 4058
DAQmxGetAnlgEdgeRefTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxGetAnlgEdgeRefTrigCoupling
DAQmxGetAnlgEdgeRefTrigCoupling.restype = int32
# DAQmxGetAnlgEdgeRefTrigCoupling(taskHandle, data)
DAQmxGetAnlgEdgeRefTrigCoupling.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4059
DAQmxSetAnlgEdgeRefTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxSetAnlgEdgeRefTrigCoupling
DAQmxSetAnlgEdgeRefTrigCoupling.restype = int32
# DAQmxSetAnlgEdgeRefTrigCoupling(taskHandle, data)
DAQmxSetAnlgEdgeRefTrigCoupling.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4060
DAQmxResetAnlgEdgeRefTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxResetAnlgEdgeRefTrigCoupling
DAQmxResetAnlgEdgeRefTrigCoupling.restype = int32
# DAQmxResetAnlgEdgeRefTrigCoupling(taskHandle)
DAQmxResetAnlgEdgeRefTrigCoupling.argtypes = [TaskHandle]
# NIDAQmx.h 4062
DAQmxGetAnlgWinRefTrigSrc = _stdcall_libraries['nicaiu'].DAQmxGetAnlgWinRefTrigSrc
DAQmxGetAnlgWinRefTrigSrc.restype = int32
# DAQmxGetAnlgWinRefTrigSrc(taskHandle, data, bufferSize)
DAQmxGetAnlgWinRefTrigSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 4063
DAQmxSetAnlgWinRefTrigSrc = _stdcall_libraries['nicaiu'].DAQmxSetAnlgWinRefTrigSrc
DAQmxSetAnlgWinRefTrigSrc.restype = int32
# DAQmxSetAnlgWinRefTrigSrc(taskHandle, data)
DAQmxSetAnlgWinRefTrigSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 4064
DAQmxResetAnlgWinRefTrigSrc = _stdcall_libraries['nicaiu'].DAQmxResetAnlgWinRefTrigSrc
DAQmxResetAnlgWinRefTrigSrc.restype = int32
# DAQmxResetAnlgWinRefTrigSrc(taskHandle)
DAQmxResetAnlgWinRefTrigSrc.argtypes = [TaskHandle]
# NIDAQmx.h 4067
DAQmxGetAnlgWinRefTrigWhen = _stdcall_libraries['nicaiu'].DAQmxGetAnlgWinRefTrigWhen
DAQmxGetAnlgWinRefTrigWhen.restype = int32
# DAQmxGetAnlgWinRefTrigWhen(taskHandle, data)
DAQmxGetAnlgWinRefTrigWhen.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4068
DAQmxSetAnlgWinRefTrigWhen = _stdcall_libraries['nicaiu'].DAQmxSetAnlgWinRefTrigWhen
DAQmxSetAnlgWinRefTrigWhen.restype = int32
# DAQmxSetAnlgWinRefTrigWhen(taskHandle, data)
DAQmxSetAnlgWinRefTrigWhen.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4069
DAQmxResetAnlgWinRefTrigWhen = _stdcall_libraries['nicaiu'].DAQmxResetAnlgWinRefTrigWhen
DAQmxResetAnlgWinRefTrigWhen.restype = int32
# DAQmxResetAnlgWinRefTrigWhen(taskHandle)
DAQmxResetAnlgWinRefTrigWhen.argtypes = [TaskHandle]
# NIDAQmx.h 4071
DAQmxGetAnlgWinRefTrigTop = _stdcall_libraries['nicaiu'].DAQmxGetAnlgWinRefTrigTop
DAQmxGetAnlgWinRefTrigTop.restype = int32
# DAQmxGetAnlgWinRefTrigTop(taskHandle, data)
DAQmxGetAnlgWinRefTrigTop.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 4072
DAQmxSetAnlgWinRefTrigTop = _stdcall_libraries['nicaiu'].DAQmxSetAnlgWinRefTrigTop
DAQmxSetAnlgWinRefTrigTop.restype = int32
# DAQmxSetAnlgWinRefTrigTop(taskHandle, data)
DAQmxSetAnlgWinRefTrigTop.argtypes = [TaskHandle, float64]
# NIDAQmx.h 4073
DAQmxResetAnlgWinRefTrigTop = _stdcall_libraries['nicaiu'].DAQmxResetAnlgWinRefTrigTop
DAQmxResetAnlgWinRefTrigTop.restype = int32
# DAQmxResetAnlgWinRefTrigTop(taskHandle)
DAQmxResetAnlgWinRefTrigTop.argtypes = [TaskHandle]
# NIDAQmx.h 4075
DAQmxGetAnlgWinRefTrigBtm = _stdcall_libraries['nicaiu'].DAQmxGetAnlgWinRefTrigBtm
DAQmxGetAnlgWinRefTrigBtm.restype = int32
# DAQmxGetAnlgWinRefTrigBtm(taskHandle, data)
DAQmxGetAnlgWinRefTrigBtm.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 4076
DAQmxSetAnlgWinRefTrigBtm = _stdcall_libraries['nicaiu'].DAQmxSetAnlgWinRefTrigBtm
DAQmxSetAnlgWinRefTrigBtm.restype = int32
# DAQmxSetAnlgWinRefTrigBtm(taskHandle, data)
DAQmxSetAnlgWinRefTrigBtm.argtypes = [TaskHandle, float64]
# NIDAQmx.h 4077
DAQmxResetAnlgWinRefTrigBtm = _stdcall_libraries['nicaiu'].DAQmxResetAnlgWinRefTrigBtm
DAQmxResetAnlgWinRefTrigBtm.restype = int32
# DAQmxResetAnlgWinRefTrigBtm(taskHandle)
DAQmxResetAnlgWinRefTrigBtm.argtypes = [TaskHandle]
# NIDAQmx.h 4080
DAQmxGetAnlgWinRefTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxGetAnlgWinRefTrigCoupling
DAQmxGetAnlgWinRefTrigCoupling.restype = int32
# DAQmxGetAnlgWinRefTrigCoupling(taskHandle, data)
DAQmxGetAnlgWinRefTrigCoupling.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4081
DAQmxSetAnlgWinRefTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxSetAnlgWinRefTrigCoupling
DAQmxSetAnlgWinRefTrigCoupling.restype = int32
# DAQmxSetAnlgWinRefTrigCoupling(taskHandle, data)
DAQmxSetAnlgWinRefTrigCoupling.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4082
DAQmxResetAnlgWinRefTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxResetAnlgWinRefTrigCoupling
DAQmxResetAnlgWinRefTrigCoupling.restype = int32
# DAQmxResetAnlgWinRefTrigCoupling(taskHandle)
DAQmxResetAnlgWinRefTrigCoupling.argtypes = [TaskHandle]
# NIDAQmx.h 4085
DAQmxGetAdvTrigType = _stdcall_libraries['nicaiu'].DAQmxGetAdvTrigType
DAQmxGetAdvTrigType.restype = int32
# DAQmxGetAdvTrigType(taskHandle, data)
DAQmxGetAdvTrigType.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4086
DAQmxSetAdvTrigType = _stdcall_libraries['nicaiu'].DAQmxSetAdvTrigType
DAQmxSetAdvTrigType.restype = int32
# DAQmxSetAdvTrigType(taskHandle, data)
DAQmxSetAdvTrigType.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4087
DAQmxResetAdvTrigType = _stdcall_libraries['nicaiu'].DAQmxResetAdvTrigType
DAQmxResetAdvTrigType.restype = int32
# DAQmxResetAdvTrigType(taskHandle)
DAQmxResetAdvTrigType.argtypes = [TaskHandle]
# NIDAQmx.h 4089
DAQmxGetDigEdgeAdvTrigSrc = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeAdvTrigSrc
DAQmxGetDigEdgeAdvTrigSrc.restype = int32
# DAQmxGetDigEdgeAdvTrigSrc(taskHandle, data, bufferSize)
DAQmxGetDigEdgeAdvTrigSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 4090
DAQmxSetDigEdgeAdvTrigSrc = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeAdvTrigSrc
DAQmxSetDigEdgeAdvTrigSrc.restype = int32
# DAQmxSetDigEdgeAdvTrigSrc(taskHandle, data)
DAQmxSetDigEdgeAdvTrigSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 4091
DAQmxResetDigEdgeAdvTrigSrc = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeAdvTrigSrc
DAQmxResetDigEdgeAdvTrigSrc.restype = int32
# DAQmxResetDigEdgeAdvTrigSrc(taskHandle)
DAQmxResetDigEdgeAdvTrigSrc.argtypes = [TaskHandle]
# NIDAQmx.h 4094
DAQmxGetDigEdgeAdvTrigEdge = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeAdvTrigEdge
DAQmxGetDigEdgeAdvTrigEdge.restype = int32
# DAQmxGetDigEdgeAdvTrigEdge(taskHandle, data)
DAQmxGetDigEdgeAdvTrigEdge.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4095
DAQmxSetDigEdgeAdvTrigEdge = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeAdvTrigEdge
DAQmxSetDigEdgeAdvTrigEdge.restype = int32
# DAQmxSetDigEdgeAdvTrigEdge(taskHandle, data)
DAQmxSetDigEdgeAdvTrigEdge.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4096
DAQmxResetDigEdgeAdvTrigEdge = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeAdvTrigEdge
DAQmxResetDigEdgeAdvTrigEdge.restype = int32
# DAQmxResetDigEdgeAdvTrigEdge(taskHandle)
DAQmxResetDigEdgeAdvTrigEdge.argtypes = [TaskHandle]
# NIDAQmx.h 4098
DAQmxGetDigEdgeAdvTrigDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeAdvTrigDigFltrEnable
DAQmxGetDigEdgeAdvTrigDigFltrEnable.restype = int32
# DAQmxGetDigEdgeAdvTrigDigFltrEnable(taskHandle, data)
DAQmxGetDigEdgeAdvTrigDigFltrEnable.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 4099
DAQmxSetDigEdgeAdvTrigDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeAdvTrigDigFltrEnable
DAQmxSetDigEdgeAdvTrigDigFltrEnable.restype = int32
# DAQmxSetDigEdgeAdvTrigDigFltrEnable(taskHandle, data)
DAQmxSetDigEdgeAdvTrigDigFltrEnable.argtypes = [TaskHandle, bool32]
# NIDAQmx.h 4100
DAQmxResetDigEdgeAdvTrigDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeAdvTrigDigFltrEnable
DAQmxResetDigEdgeAdvTrigDigFltrEnable.restype = int32
# DAQmxResetDigEdgeAdvTrigDigFltrEnable(taskHandle)
DAQmxResetDigEdgeAdvTrigDigFltrEnable.argtypes = [TaskHandle]
# NIDAQmx.h 4103
DAQmxGetHshkTrigType = _stdcall_libraries['nicaiu'].DAQmxGetHshkTrigType
DAQmxGetHshkTrigType.restype = int32
# DAQmxGetHshkTrigType(taskHandle, data)
DAQmxGetHshkTrigType.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4104
DAQmxSetHshkTrigType = _stdcall_libraries['nicaiu'].DAQmxSetHshkTrigType
DAQmxSetHshkTrigType.restype = int32
# DAQmxSetHshkTrigType(taskHandle, data)
DAQmxSetHshkTrigType.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4105
DAQmxResetHshkTrigType = _stdcall_libraries['nicaiu'].DAQmxResetHshkTrigType
DAQmxResetHshkTrigType.restype = int32
# DAQmxResetHshkTrigType(taskHandle)
DAQmxResetHshkTrigType.argtypes = [TaskHandle]
# NIDAQmx.h 4107
DAQmxGetInterlockedHshkTrigSrc = _stdcall_libraries['nicaiu'].DAQmxGetInterlockedHshkTrigSrc
DAQmxGetInterlockedHshkTrigSrc.restype = int32
# DAQmxGetInterlockedHshkTrigSrc(taskHandle, data, bufferSize)
DAQmxGetInterlockedHshkTrigSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 4108
DAQmxSetInterlockedHshkTrigSrc = _stdcall_libraries['nicaiu'].DAQmxSetInterlockedHshkTrigSrc
DAQmxSetInterlockedHshkTrigSrc.restype = int32
# DAQmxSetInterlockedHshkTrigSrc(taskHandle, data)
DAQmxSetInterlockedHshkTrigSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 4109
DAQmxResetInterlockedHshkTrigSrc = _stdcall_libraries['nicaiu'].DAQmxResetInterlockedHshkTrigSrc
DAQmxResetInterlockedHshkTrigSrc.restype = int32
# DAQmxResetInterlockedHshkTrigSrc(taskHandle)
DAQmxResetInterlockedHshkTrigSrc.argtypes = [TaskHandle]
# NIDAQmx.h 4112
DAQmxGetInterlockedHshkTrigAssertedLvl = _stdcall_libraries['nicaiu'].DAQmxGetInterlockedHshkTrigAssertedLvl
DAQmxGetInterlockedHshkTrigAssertedLvl.restype = int32
# DAQmxGetInterlockedHshkTrigAssertedLvl(taskHandle, data)
DAQmxGetInterlockedHshkTrigAssertedLvl.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4113
DAQmxSetInterlockedHshkTrigAssertedLvl = _stdcall_libraries['nicaiu'].DAQmxSetInterlockedHshkTrigAssertedLvl
DAQmxSetInterlockedHshkTrigAssertedLvl.restype = int32
# DAQmxSetInterlockedHshkTrigAssertedLvl(taskHandle, data)
DAQmxSetInterlockedHshkTrigAssertedLvl.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4114
DAQmxResetInterlockedHshkTrigAssertedLvl = _stdcall_libraries['nicaiu'].DAQmxResetInterlockedHshkTrigAssertedLvl
DAQmxResetInterlockedHshkTrigAssertedLvl.restype = int32
# DAQmxResetInterlockedHshkTrigAssertedLvl(taskHandle)
DAQmxResetInterlockedHshkTrigAssertedLvl.argtypes = [TaskHandle]
# NIDAQmx.h 4117
DAQmxGetPauseTrigType = _stdcall_libraries['nicaiu'].DAQmxGetPauseTrigType
DAQmxGetPauseTrigType.restype = int32
# DAQmxGetPauseTrigType(taskHandle, data)
DAQmxGetPauseTrigType.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4118
DAQmxSetPauseTrigType = _stdcall_libraries['nicaiu'].DAQmxSetPauseTrigType
DAQmxSetPauseTrigType.restype = int32
# DAQmxSetPauseTrigType(taskHandle, data)
DAQmxSetPauseTrigType.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4119
DAQmxResetPauseTrigType = _stdcall_libraries['nicaiu'].DAQmxResetPauseTrigType
DAQmxResetPauseTrigType.restype = int32
# DAQmxResetPauseTrigType(taskHandle)
DAQmxResetPauseTrigType.argtypes = [TaskHandle]
# NIDAQmx.h 4121
DAQmxGetAnlgLvlPauseTrigSrc = _stdcall_libraries['nicaiu'].DAQmxGetAnlgLvlPauseTrigSrc
DAQmxGetAnlgLvlPauseTrigSrc.restype = int32
# DAQmxGetAnlgLvlPauseTrigSrc(taskHandle, data, bufferSize)
DAQmxGetAnlgLvlPauseTrigSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 4122
DAQmxSetAnlgLvlPauseTrigSrc = _stdcall_libraries['nicaiu'].DAQmxSetAnlgLvlPauseTrigSrc
DAQmxSetAnlgLvlPauseTrigSrc.restype = int32
# DAQmxSetAnlgLvlPauseTrigSrc(taskHandle, data)
DAQmxSetAnlgLvlPauseTrigSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 4123
DAQmxResetAnlgLvlPauseTrigSrc = _stdcall_libraries['nicaiu'].DAQmxResetAnlgLvlPauseTrigSrc
DAQmxResetAnlgLvlPauseTrigSrc.restype = int32
# DAQmxResetAnlgLvlPauseTrigSrc(taskHandle)
DAQmxResetAnlgLvlPauseTrigSrc.argtypes = [TaskHandle]
# NIDAQmx.h 4126
DAQmxGetAnlgLvlPauseTrigWhen = _stdcall_libraries['nicaiu'].DAQmxGetAnlgLvlPauseTrigWhen
DAQmxGetAnlgLvlPauseTrigWhen.restype = int32
# DAQmxGetAnlgLvlPauseTrigWhen(taskHandle, data)
DAQmxGetAnlgLvlPauseTrigWhen.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4127
DAQmxSetAnlgLvlPauseTrigWhen = _stdcall_libraries['nicaiu'].DAQmxSetAnlgLvlPauseTrigWhen
DAQmxSetAnlgLvlPauseTrigWhen.restype = int32
# DAQmxSetAnlgLvlPauseTrigWhen(taskHandle, data)
DAQmxSetAnlgLvlPauseTrigWhen.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4128
DAQmxResetAnlgLvlPauseTrigWhen = _stdcall_libraries['nicaiu'].DAQmxResetAnlgLvlPauseTrigWhen
DAQmxResetAnlgLvlPauseTrigWhen.restype = int32
# DAQmxResetAnlgLvlPauseTrigWhen(taskHandle)
DAQmxResetAnlgLvlPauseTrigWhen.argtypes = [TaskHandle]
# NIDAQmx.h 4130
DAQmxGetAnlgLvlPauseTrigLvl = _stdcall_libraries['nicaiu'].DAQmxGetAnlgLvlPauseTrigLvl
DAQmxGetAnlgLvlPauseTrigLvl.restype = int32
# DAQmxGetAnlgLvlPauseTrigLvl(taskHandle, data)
DAQmxGetAnlgLvlPauseTrigLvl.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 4131
DAQmxSetAnlgLvlPauseTrigLvl = _stdcall_libraries['nicaiu'].DAQmxSetAnlgLvlPauseTrigLvl
DAQmxSetAnlgLvlPauseTrigLvl.restype = int32
# DAQmxSetAnlgLvlPauseTrigLvl(taskHandle, data)
DAQmxSetAnlgLvlPauseTrigLvl.argtypes = [TaskHandle, float64]
# NIDAQmx.h 4132
DAQmxResetAnlgLvlPauseTrigLvl = _stdcall_libraries['nicaiu'].DAQmxResetAnlgLvlPauseTrigLvl
DAQmxResetAnlgLvlPauseTrigLvl.restype = int32
# DAQmxResetAnlgLvlPauseTrigLvl(taskHandle)
DAQmxResetAnlgLvlPauseTrigLvl.argtypes = [TaskHandle]
# NIDAQmx.h 4134
DAQmxGetAnlgLvlPauseTrigHyst = _stdcall_libraries['nicaiu'].DAQmxGetAnlgLvlPauseTrigHyst
DAQmxGetAnlgLvlPauseTrigHyst.restype = int32
# DAQmxGetAnlgLvlPauseTrigHyst(taskHandle, data)
DAQmxGetAnlgLvlPauseTrigHyst.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 4135
DAQmxSetAnlgLvlPauseTrigHyst = _stdcall_libraries['nicaiu'].DAQmxSetAnlgLvlPauseTrigHyst
DAQmxSetAnlgLvlPauseTrigHyst.restype = int32
# DAQmxSetAnlgLvlPauseTrigHyst(taskHandle, data)
DAQmxSetAnlgLvlPauseTrigHyst.argtypes = [TaskHandle, float64]
# NIDAQmx.h 4136
DAQmxResetAnlgLvlPauseTrigHyst = _stdcall_libraries['nicaiu'].DAQmxResetAnlgLvlPauseTrigHyst
DAQmxResetAnlgLvlPauseTrigHyst.restype = int32
# DAQmxResetAnlgLvlPauseTrigHyst(taskHandle)
DAQmxResetAnlgLvlPauseTrigHyst.argtypes = [TaskHandle]
# NIDAQmx.h 4139
DAQmxGetAnlgLvlPauseTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxGetAnlgLvlPauseTrigCoupling
DAQmxGetAnlgLvlPauseTrigCoupling.restype = int32
# DAQmxGetAnlgLvlPauseTrigCoupling(taskHandle, data)
DAQmxGetAnlgLvlPauseTrigCoupling.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4140
DAQmxSetAnlgLvlPauseTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxSetAnlgLvlPauseTrigCoupling
DAQmxSetAnlgLvlPauseTrigCoupling.restype = int32
# DAQmxSetAnlgLvlPauseTrigCoupling(taskHandle, data)
DAQmxSetAnlgLvlPauseTrigCoupling.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4141
DAQmxResetAnlgLvlPauseTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxResetAnlgLvlPauseTrigCoupling
DAQmxResetAnlgLvlPauseTrigCoupling.restype = int32
# DAQmxResetAnlgLvlPauseTrigCoupling(taskHandle)
DAQmxResetAnlgLvlPauseTrigCoupling.argtypes = [TaskHandle]
# NIDAQmx.h 4143
DAQmxGetAnlgWinPauseTrigSrc = _stdcall_libraries['nicaiu'].DAQmxGetAnlgWinPauseTrigSrc
DAQmxGetAnlgWinPauseTrigSrc.restype = int32
# DAQmxGetAnlgWinPauseTrigSrc(taskHandle, data, bufferSize)
DAQmxGetAnlgWinPauseTrigSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 4144
DAQmxSetAnlgWinPauseTrigSrc = _stdcall_libraries['nicaiu'].DAQmxSetAnlgWinPauseTrigSrc
DAQmxSetAnlgWinPauseTrigSrc.restype = int32
# DAQmxSetAnlgWinPauseTrigSrc(taskHandle, data)
DAQmxSetAnlgWinPauseTrigSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 4145
DAQmxResetAnlgWinPauseTrigSrc = _stdcall_libraries['nicaiu'].DAQmxResetAnlgWinPauseTrigSrc
DAQmxResetAnlgWinPauseTrigSrc.restype = int32
# DAQmxResetAnlgWinPauseTrigSrc(taskHandle)
DAQmxResetAnlgWinPauseTrigSrc.argtypes = [TaskHandle]
# NIDAQmx.h 4148
DAQmxGetAnlgWinPauseTrigWhen = _stdcall_libraries['nicaiu'].DAQmxGetAnlgWinPauseTrigWhen
DAQmxGetAnlgWinPauseTrigWhen.restype = int32
# DAQmxGetAnlgWinPauseTrigWhen(taskHandle, data)
DAQmxGetAnlgWinPauseTrigWhen.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4149
DAQmxSetAnlgWinPauseTrigWhen = _stdcall_libraries['nicaiu'].DAQmxSetAnlgWinPauseTrigWhen
DAQmxSetAnlgWinPauseTrigWhen.restype = int32
# DAQmxSetAnlgWinPauseTrigWhen(taskHandle, data)
DAQmxSetAnlgWinPauseTrigWhen.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4150
DAQmxResetAnlgWinPauseTrigWhen = _stdcall_libraries['nicaiu'].DAQmxResetAnlgWinPauseTrigWhen
DAQmxResetAnlgWinPauseTrigWhen.restype = int32
# DAQmxResetAnlgWinPauseTrigWhen(taskHandle)
DAQmxResetAnlgWinPauseTrigWhen.argtypes = [TaskHandle]
# NIDAQmx.h 4152
DAQmxGetAnlgWinPauseTrigTop = _stdcall_libraries['nicaiu'].DAQmxGetAnlgWinPauseTrigTop
DAQmxGetAnlgWinPauseTrigTop.restype = int32
# DAQmxGetAnlgWinPauseTrigTop(taskHandle, data)
DAQmxGetAnlgWinPauseTrigTop.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 4153
DAQmxSetAnlgWinPauseTrigTop = _stdcall_libraries['nicaiu'].DAQmxSetAnlgWinPauseTrigTop
DAQmxSetAnlgWinPauseTrigTop.restype = int32
# DAQmxSetAnlgWinPauseTrigTop(taskHandle, data)
DAQmxSetAnlgWinPauseTrigTop.argtypes = [TaskHandle, float64]
# NIDAQmx.h 4154
DAQmxResetAnlgWinPauseTrigTop = _stdcall_libraries['nicaiu'].DAQmxResetAnlgWinPauseTrigTop
DAQmxResetAnlgWinPauseTrigTop.restype = int32
# DAQmxResetAnlgWinPauseTrigTop(taskHandle)
DAQmxResetAnlgWinPauseTrigTop.argtypes = [TaskHandle]
# NIDAQmx.h 4156
DAQmxGetAnlgWinPauseTrigBtm = _stdcall_libraries['nicaiu'].DAQmxGetAnlgWinPauseTrigBtm
DAQmxGetAnlgWinPauseTrigBtm.restype = int32
# DAQmxGetAnlgWinPauseTrigBtm(taskHandle, data)
DAQmxGetAnlgWinPauseTrigBtm.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 4157
DAQmxSetAnlgWinPauseTrigBtm = _stdcall_libraries['nicaiu'].DAQmxSetAnlgWinPauseTrigBtm
DAQmxSetAnlgWinPauseTrigBtm.restype = int32
# DAQmxSetAnlgWinPauseTrigBtm(taskHandle, data)
DAQmxSetAnlgWinPauseTrigBtm.argtypes = [TaskHandle, float64]
# NIDAQmx.h 4158
DAQmxResetAnlgWinPauseTrigBtm = _stdcall_libraries['nicaiu'].DAQmxResetAnlgWinPauseTrigBtm
DAQmxResetAnlgWinPauseTrigBtm.restype = int32
# DAQmxResetAnlgWinPauseTrigBtm(taskHandle)
DAQmxResetAnlgWinPauseTrigBtm.argtypes = [TaskHandle]
# NIDAQmx.h 4161
DAQmxGetAnlgWinPauseTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxGetAnlgWinPauseTrigCoupling
DAQmxGetAnlgWinPauseTrigCoupling.restype = int32
# DAQmxGetAnlgWinPauseTrigCoupling(taskHandle, data)
DAQmxGetAnlgWinPauseTrigCoupling.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4162
DAQmxSetAnlgWinPauseTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxSetAnlgWinPauseTrigCoupling
DAQmxSetAnlgWinPauseTrigCoupling.restype = int32
# DAQmxSetAnlgWinPauseTrigCoupling(taskHandle, data)
DAQmxSetAnlgWinPauseTrigCoupling.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4163
DAQmxResetAnlgWinPauseTrigCoupling = _stdcall_libraries['nicaiu'].DAQmxResetAnlgWinPauseTrigCoupling
DAQmxResetAnlgWinPauseTrigCoupling.restype = int32
# DAQmxResetAnlgWinPauseTrigCoupling(taskHandle)
DAQmxResetAnlgWinPauseTrigCoupling.argtypes = [TaskHandle]
# NIDAQmx.h 4165
DAQmxGetDigLvlPauseTrigSrc = _stdcall_libraries['nicaiu'].DAQmxGetDigLvlPauseTrigSrc
DAQmxGetDigLvlPauseTrigSrc.restype = int32
# DAQmxGetDigLvlPauseTrigSrc(taskHandle, data, bufferSize)
DAQmxGetDigLvlPauseTrigSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 4166
DAQmxSetDigLvlPauseTrigSrc = _stdcall_libraries['nicaiu'].DAQmxSetDigLvlPauseTrigSrc
DAQmxSetDigLvlPauseTrigSrc.restype = int32
# DAQmxSetDigLvlPauseTrigSrc(taskHandle, data)
DAQmxSetDigLvlPauseTrigSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 4167
DAQmxResetDigLvlPauseTrigSrc = _stdcall_libraries['nicaiu'].DAQmxResetDigLvlPauseTrigSrc
DAQmxResetDigLvlPauseTrigSrc.restype = int32
# DAQmxResetDigLvlPauseTrigSrc(taskHandle)
DAQmxResetDigLvlPauseTrigSrc.argtypes = [TaskHandle]
# NIDAQmx.h 4170
DAQmxGetDigLvlPauseTrigWhen = _stdcall_libraries['nicaiu'].DAQmxGetDigLvlPauseTrigWhen
DAQmxGetDigLvlPauseTrigWhen.restype = int32
# DAQmxGetDigLvlPauseTrigWhen(taskHandle, data)
DAQmxGetDigLvlPauseTrigWhen.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4171
DAQmxSetDigLvlPauseTrigWhen = _stdcall_libraries['nicaiu'].DAQmxSetDigLvlPauseTrigWhen
DAQmxSetDigLvlPauseTrigWhen.restype = int32
# DAQmxSetDigLvlPauseTrigWhen(taskHandle, data)
DAQmxSetDigLvlPauseTrigWhen.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4172
DAQmxResetDigLvlPauseTrigWhen = _stdcall_libraries['nicaiu'].DAQmxResetDigLvlPauseTrigWhen
DAQmxResetDigLvlPauseTrigWhen.restype = int32
# DAQmxResetDigLvlPauseTrigWhen(taskHandle)
DAQmxResetDigLvlPauseTrigWhen.argtypes = [TaskHandle]
# NIDAQmx.h 4174
DAQmxGetDigLvlPauseTrigDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetDigLvlPauseTrigDigFltrEnable
DAQmxGetDigLvlPauseTrigDigFltrEnable.restype = int32
# DAQmxGetDigLvlPauseTrigDigFltrEnable(taskHandle, data)
DAQmxGetDigLvlPauseTrigDigFltrEnable.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 4175
DAQmxSetDigLvlPauseTrigDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetDigLvlPauseTrigDigFltrEnable
DAQmxSetDigLvlPauseTrigDigFltrEnable.restype = int32
# DAQmxSetDigLvlPauseTrigDigFltrEnable(taskHandle, data)
DAQmxSetDigLvlPauseTrigDigFltrEnable.argtypes = [TaskHandle, bool32]
# NIDAQmx.h 4176
DAQmxResetDigLvlPauseTrigDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetDigLvlPauseTrigDigFltrEnable
DAQmxResetDigLvlPauseTrigDigFltrEnable.restype = int32
# DAQmxResetDigLvlPauseTrigDigFltrEnable(taskHandle)
DAQmxResetDigLvlPauseTrigDigFltrEnable.argtypes = [TaskHandle]
# NIDAQmx.h 4178
DAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth
DAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth.restype = int32
# DAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth(taskHandle, data)
DAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 4179
DAQmxSetDigLvlPauseTrigDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetDigLvlPauseTrigDigFltrMinPulseWidth
DAQmxSetDigLvlPauseTrigDigFltrMinPulseWidth.restype = int32
# DAQmxSetDigLvlPauseTrigDigFltrMinPulseWidth(taskHandle, data)
DAQmxSetDigLvlPauseTrigDigFltrMinPulseWidth.argtypes = [TaskHandle, float64]
# NIDAQmx.h 4180
DAQmxResetDigLvlPauseTrigDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetDigLvlPauseTrigDigFltrMinPulseWidth
DAQmxResetDigLvlPauseTrigDigFltrMinPulseWidth.restype = int32
# DAQmxResetDigLvlPauseTrigDigFltrMinPulseWidth(taskHandle)
DAQmxResetDigLvlPauseTrigDigFltrMinPulseWidth.argtypes = [TaskHandle]
# NIDAQmx.h 4182
DAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc
DAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc.restype = int32
# DAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc(taskHandle, data, bufferSize)
DAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 4183
DAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc
DAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc.restype = int32
# DAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc(taskHandle, data)
DAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 4184
DAQmxResetDigLvlPauseTrigDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetDigLvlPauseTrigDigFltrTimebaseSrc
DAQmxResetDigLvlPauseTrigDigFltrTimebaseSrc.restype = int32
# DAQmxResetDigLvlPauseTrigDigFltrTimebaseSrc(taskHandle)
DAQmxResetDigLvlPauseTrigDigFltrTimebaseSrc.argtypes = [TaskHandle]
# NIDAQmx.h 4186
DAQmxGetDigLvlPauseTrigDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetDigLvlPauseTrigDigFltrTimebaseRate
DAQmxGetDigLvlPauseTrigDigFltrTimebaseRate.restype = int32
# DAQmxGetDigLvlPauseTrigDigFltrTimebaseRate(taskHandle, data)
DAQmxGetDigLvlPauseTrigDigFltrTimebaseRate.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 4187
DAQmxSetDigLvlPauseTrigDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetDigLvlPauseTrigDigFltrTimebaseRate
DAQmxSetDigLvlPauseTrigDigFltrTimebaseRate.restype = int32
# DAQmxSetDigLvlPauseTrigDigFltrTimebaseRate(taskHandle, data)
DAQmxSetDigLvlPauseTrigDigFltrTimebaseRate.argtypes = [TaskHandle, float64]
# NIDAQmx.h 4188
DAQmxResetDigLvlPauseTrigDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetDigLvlPauseTrigDigFltrTimebaseRate
DAQmxResetDigLvlPauseTrigDigFltrTimebaseRate.restype = int32
# DAQmxResetDigLvlPauseTrigDigFltrTimebaseRate(taskHandle)
DAQmxResetDigLvlPauseTrigDigFltrTimebaseRate.argtypes = [TaskHandle]
# NIDAQmx.h 4190
DAQmxGetDigLvlPauseTrigDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetDigLvlPauseTrigDigSyncEnable
DAQmxGetDigLvlPauseTrigDigSyncEnable.restype = int32
# DAQmxGetDigLvlPauseTrigDigSyncEnable(taskHandle, data)
DAQmxGetDigLvlPauseTrigDigSyncEnable.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 4191
DAQmxSetDigLvlPauseTrigDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetDigLvlPauseTrigDigSyncEnable
DAQmxSetDigLvlPauseTrigDigSyncEnable.restype = int32
# DAQmxSetDigLvlPauseTrigDigSyncEnable(taskHandle, data)
DAQmxSetDigLvlPauseTrigDigSyncEnable.argtypes = [TaskHandle, bool32]
# NIDAQmx.h 4192
DAQmxResetDigLvlPauseTrigDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetDigLvlPauseTrigDigSyncEnable
DAQmxResetDigLvlPauseTrigDigSyncEnable.restype = int32
# DAQmxResetDigLvlPauseTrigDigSyncEnable(taskHandle)
DAQmxResetDigLvlPauseTrigDigSyncEnable.argtypes = [TaskHandle]
# NIDAQmx.h 4195
DAQmxGetArmStartTrigType = _stdcall_libraries['nicaiu'].DAQmxGetArmStartTrigType
DAQmxGetArmStartTrigType.restype = int32
# DAQmxGetArmStartTrigType(taskHandle, data)
DAQmxGetArmStartTrigType.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4196
DAQmxSetArmStartTrigType = _stdcall_libraries['nicaiu'].DAQmxSetArmStartTrigType
DAQmxSetArmStartTrigType.restype = int32
# DAQmxSetArmStartTrigType(taskHandle, data)
DAQmxSetArmStartTrigType.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4197
DAQmxResetArmStartTrigType = _stdcall_libraries['nicaiu'].DAQmxResetArmStartTrigType
DAQmxResetArmStartTrigType.restype = int32
# DAQmxResetArmStartTrigType(taskHandle)
DAQmxResetArmStartTrigType.argtypes = [TaskHandle]
# NIDAQmx.h 4199
DAQmxGetDigEdgeArmStartTrigSrc = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeArmStartTrigSrc
DAQmxGetDigEdgeArmStartTrigSrc.restype = int32
# DAQmxGetDigEdgeArmStartTrigSrc(taskHandle, data, bufferSize)
DAQmxGetDigEdgeArmStartTrigSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 4200
DAQmxSetDigEdgeArmStartTrigSrc = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeArmStartTrigSrc
DAQmxSetDigEdgeArmStartTrigSrc.restype = int32
# DAQmxSetDigEdgeArmStartTrigSrc(taskHandle, data)
DAQmxSetDigEdgeArmStartTrigSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 4201
DAQmxResetDigEdgeArmStartTrigSrc = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeArmStartTrigSrc
DAQmxResetDigEdgeArmStartTrigSrc.restype = int32
# DAQmxResetDigEdgeArmStartTrigSrc(taskHandle)
DAQmxResetDigEdgeArmStartTrigSrc.argtypes = [TaskHandle]
# NIDAQmx.h 4204
DAQmxGetDigEdgeArmStartTrigEdge = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeArmStartTrigEdge
DAQmxGetDigEdgeArmStartTrigEdge.restype = int32
# DAQmxGetDigEdgeArmStartTrigEdge(taskHandle, data)
DAQmxGetDigEdgeArmStartTrigEdge.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4205
DAQmxSetDigEdgeArmStartTrigEdge = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeArmStartTrigEdge
DAQmxSetDigEdgeArmStartTrigEdge.restype = int32
# DAQmxSetDigEdgeArmStartTrigEdge(taskHandle, data)
DAQmxSetDigEdgeArmStartTrigEdge.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4206
DAQmxResetDigEdgeArmStartTrigEdge = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeArmStartTrigEdge
DAQmxResetDigEdgeArmStartTrigEdge.restype = int32
# DAQmxResetDigEdgeArmStartTrigEdge(taskHandle)
DAQmxResetDigEdgeArmStartTrigEdge.argtypes = [TaskHandle]
# NIDAQmx.h 4208
DAQmxGetDigEdgeArmStartTrigDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeArmStartTrigDigFltrEnable
DAQmxGetDigEdgeArmStartTrigDigFltrEnable.restype = int32
# DAQmxGetDigEdgeArmStartTrigDigFltrEnable(taskHandle, data)
DAQmxGetDigEdgeArmStartTrigDigFltrEnable.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 4209
DAQmxSetDigEdgeArmStartTrigDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeArmStartTrigDigFltrEnable
DAQmxSetDigEdgeArmStartTrigDigFltrEnable.restype = int32
# DAQmxSetDigEdgeArmStartTrigDigFltrEnable(taskHandle, data)
DAQmxSetDigEdgeArmStartTrigDigFltrEnable.argtypes = [TaskHandle, bool32]
# NIDAQmx.h 4210
DAQmxResetDigEdgeArmStartTrigDigFltrEnable = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeArmStartTrigDigFltrEnable
DAQmxResetDigEdgeArmStartTrigDigFltrEnable.restype = int32
# DAQmxResetDigEdgeArmStartTrigDigFltrEnable(taskHandle)
DAQmxResetDigEdgeArmStartTrigDigFltrEnable.argtypes = [TaskHandle]
# NIDAQmx.h 4212
DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth
DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth.restype = int32
# DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth(taskHandle, data)
DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 4213
DAQmxSetDigEdgeArmStartTrigDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeArmStartTrigDigFltrMinPulseWidth
DAQmxSetDigEdgeArmStartTrigDigFltrMinPulseWidth.restype = int32
# DAQmxSetDigEdgeArmStartTrigDigFltrMinPulseWidth(taskHandle, data)
DAQmxSetDigEdgeArmStartTrigDigFltrMinPulseWidth.argtypes = [TaskHandle, float64]
# NIDAQmx.h 4214
DAQmxResetDigEdgeArmStartTrigDigFltrMinPulseWidth = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeArmStartTrigDigFltrMinPulseWidth
DAQmxResetDigEdgeArmStartTrigDigFltrMinPulseWidth.restype = int32
# DAQmxResetDigEdgeArmStartTrigDigFltrMinPulseWidth(taskHandle)
DAQmxResetDigEdgeArmStartTrigDigFltrMinPulseWidth.argtypes = [TaskHandle]
# NIDAQmx.h 4216
DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc
DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc.restype = int32
# DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc(taskHandle, data, bufferSize)
DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 4217
DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc
DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc.restype = int32
# DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc(taskHandle, data)
DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 4218
DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseSrc = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseSrc
DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseSrc.restype = int32
# DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseSrc(taskHandle)
DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseSrc.argtypes = [TaskHandle]
# NIDAQmx.h 4220
DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate
DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate.restype = int32
# DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate(taskHandle, data)
DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 4221
DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseRate
DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseRate.restype = int32
# DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseRate(taskHandle, data)
DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseRate.argtypes = [TaskHandle, float64]
# NIDAQmx.h 4222
DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseRate = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseRate
DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseRate.restype = int32
# DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseRate(taskHandle)
DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseRate.argtypes = [TaskHandle]
# NIDAQmx.h 4224
DAQmxGetDigEdgeArmStartTrigDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeArmStartTrigDigSyncEnable
DAQmxGetDigEdgeArmStartTrigDigSyncEnable.restype = int32
# DAQmxGetDigEdgeArmStartTrigDigSyncEnable(taskHandle, data)
DAQmxGetDigEdgeArmStartTrigDigSyncEnable.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 4225
DAQmxSetDigEdgeArmStartTrigDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeArmStartTrigDigSyncEnable
DAQmxSetDigEdgeArmStartTrigDigSyncEnable.restype = int32
# DAQmxSetDigEdgeArmStartTrigDigSyncEnable(taskHandle, data)
DAQmxSetDigEdgeArmStartTrigDigSyncEnable.argtypes = [TaskHandle, bool32]
# NIDAQmx.h 4226
DAQmxResetDigEdgeArmStartTrigDigSyncEnable = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeArmStartTrigDigSyncEnable
DAQmxResetDigEdgeArmStartTrigDigSyncEnable.restype = int32
# DAQmxResetDigEdgeArmStartTrigDigSyncEnable(taskHandle)
DAQmxResetDigEdgeArmStartTrigDigSyncEnable.argtypes = [TaskHandle]
# NIDAQmx.h 4230
DAQmxGetWatchdogTimeout = _stdcall_libraries['nicaiu'].DAQmxGetWatchdogTimeout
DAQmxGetWatchdogTimeout.restype = int32
# DAQmxGetWatchdogTimeout(taskHandle, data)
DAQmxGetWatchdogTimeout.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 4231
DAQmxSetWatchdogTimeout = _stdcall_libraries['nicaiu'].DAQmxSetWatchdogTimeout
DAQmxSetWatchdogTimeout.restype = int32
# DAQmxSetWatchdogTimeout(taskHandle, data)
DAQmxSetWatchdogTimeout.argtypes = [TaskHandle, float64]
# NIDAQmx.h 4232
DAQmxResetWatchdogTimeout = _stdcall_libraries['nicaiu'].DAQmxResetWatchdogTimeout
DAQmxResetWatchdogTimeout.restype = int32
# DAQmxResetWatchdogTimeout(taskHandle)
DAQmxResetWatchdogTimeout.argtypes = [TaskHandle]
# NIDAQmx.h 4235
DAQmxGetWatchdogExpirTrigType = _stdcall_libraries['nicaiu'].DAQmxGetWatchdogExpirTrigType
DAQmxGetWatchdogExpirTrigType.restype = int32
# DAQmxGetWatchdogExpirTrigType(taskHandle, data)
DAQmxGetWatchdogExpirTrigType.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4236
DAQmxSetWatchdogExpirTrigType = _stdcall_libraries['nicaiu'].DAQmxSetWatchdogExpirTrigType
DAQmxSetWatchdogExpirTrigType.restype = int32
# DAQmxSetWatchdogExpirTrigType(taskHandle, data)
DAQmxSetWatchdogExpirTrigType.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4237
DAQmxResetWatchdogExpirTrigType = _stdcall_libraries['nicaiu'].DAQmxResetWatchdogExpirTrigType
DAQmxResetWatchdogExpirTrigType.restype = int32
# DAQmxResetWatchdogExpirTrigType(taskHandle)
DAQmxResetWatchdogExpirTrigType.argtypes = [TaskHandle]
# NIDAQmx.h 4239
DAQmxGetDigEdgeWatchdogExpirTrigSrc = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeWatchdogExpirTrigSrc
DAQmxGetDigEdgeWatchdogExpirTrigSrc.restype = int32
# DAQmxGetDigEdgeWatchdogExpirTrigSrc(taskHandle, data, bufferSize)
DAQmxGetDigEdgeWatchdogExpirTrigSrc.argtypes = [TaskHandle, STRING, uInt32]
# NIDAQmx.h 4240
DAQmxSetDigEdgeWatchdogExpirTrigSrc = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeWatchdogExpirTrigSrc
DAQmxSetDigEdgeWatchdogExpirTrigSrc.restype = int32
# DAQmxSetDigEdgeWatchdogExpirTrigSrc(taskHandle, data)
DAQmxSetDigEdgeWatchdogExpirTrigSrc.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 4241
DAQmxResetDigEdgeWatchdogExpirTrigSrc = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeWatchdogExpirTrigSrc
DAQmxResetDigEdgeWatchdogExpirTrigSrc.restype = int32
# DAQmxResetDigEdgeWatchdogExpirTrigSrc(taskHandle)
DAQmxResetDigEdgeWatchdogExpirTrigSrc.argtypes = [TaskHandle]
# NIDAQmx.h 4244
DAQmxGetDigEdgeWatchdogExpirTrigEdge = _stdcall_libraries['nicaiu'].DAQmxGetDigEdgeWatchdogExpirTrigEdge
DAQmxGetDigEdgeWatchdogExpirTrigEdge.restype = int32
# DAQmxGetDigEdgeWatchdogExpirTrigEdge(taskHandle, data)
DAQmxGetDigEdgeWatchdogExpirTrigEdge.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4245
DAQmxSetDigEdgeWatchdogExpirTrigEdge = _stdcall_libraries['nicaiu'].DAQmxSetDigEdgeWatchdogExpirTrigEdge
DAQmxSetDigEdgeWatchdogExpirTrigEdge.restype = int32
# DAQmxSetDigEdgeWatchdogExpirTrigEdge(taskHandle, data)
DAQmxSetDigEdgeWatchdogExpirTrigEdge.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4246
DAQmxResetDigEdgeWatchdogExpirTrigEdge = _stdcall_libraries['nicaiu'].DAQmxResetDigEdgeWatchdogExpirTrigEdge
DAQmxResetDigEdgeWatchdogExpirTrigEdge.restype = int32
# DAQmxResetDigEdgeWatchdogExpirTrigEdge(taskHandle)
DAQmxResetDigEdgeWatchdogExpirTrigEdge.argtypes = [TaskHandle]
# NIDAQmx.h 4249
DAQmxGetWatchdogDOExpirState = _stdcall_libraries['nicaiu'].DAQmxGetWatchdogDOExpirState
DAQmxGetWatchdogDOExpirState.restype = int32
# DAQmxGetWatchdogDOExpirState(taskHandle, channel, data)
DAQmxGetWatchdogDOExpirState.argtypes = [TaskHandle, STRING, POINTER(int32)]
# NIDAQmx.h 4250
DAQmxSetWatchdogDOExpirState = _stdcall_libraries['nicaiu'].DAQmxSetWatchdogDOExpirState
DAQmxSetWatchdogDOExpirState.restype = int32
# DAQmxSetWatchdogDOExpirState(taskHandle, channel, data)
DAQmxSetWatchdogDOExpirState.argtypes = [TaskHandle, STRING, int32]
# NIDAQmx.h 4251
DAQmxResetWatchdogDOExpirState = _stdcall_libraries['nicaiu'].DAQmxResetWatchdogDOExpirState
DAQmxResetWatchdogDOExpirState.restype = int32
# DAQmxResetWatchdogDOExpirState(taskHandle, channel)
DAQmxResetWatchdogDOExpirState.argtypes = [TaskHandle, STRING]
# NIDAQmx.h 4253
DAQmxGetWatchdogHasExpired = _stdcall_libraries['nicaiu'].DAQmxGetWatchdogHasExpired
DAQmxGetWatchdogHasExpired.restype = int32
# DAQmxGetWatchdogHasExpired(taskHandle, data)
DAQmxGetWatchdogHasExpired.argtypes = [TaskHandle, POINTER(bool32)]
# NIDAQmx.h 4258
DAQmxGetWriteRelativeTo = _stdcall_libraries['nicaiu'].DAQmxGetWriteRelativeTo
DAQmxGetWriteRelativeTo.restype = int32
# DAQmxGetWriteRelativeTo(taskHandle, data)
DAQmxGetWriteRelativeTo.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4259
DAQmxSetWriteRelativeTo = _stdcall_libraries['nicaiu'].DAQmxSetWriteRelativeTo
DAQmxSetWriteRelativeTo.restype = int32
# DAQmxSetWriteRelativeTo(taskHandle, data)
DAQmxSetWriteRelativeTo.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4260
DAQmxResetWriteRelativeTo = _stdcall_libraries['nicaiu'].DAQmxResetWriteRelativeTo
DAQmxResetWriteRelativeTo.restype = int32
# DAQmxResetWriteRelativeTo(taskHandle)
DAQmxResetWriteRelativeTo.argtypes = [TaskHandle]
# NIDAQmx.h 4262
DAQmxGetWriteOffset = _stdcall_libraries['nicaiu'].DAQmxGetWriteOffset
DAQmxGetWriteOffset.restype = int32
# DAQmxGetWriteOffset(taskHandle, data)
DAQmxGetWriteOffset.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4263
DAQmxSetWriteOffset = _stdcall_libraries['nicaiu'].DAQmxSetWriteOffset
DAQmxSetWriteOffset.restype = int32
# DAQmxSetWriteOffset(taskHandle, data)
DAQmxSetWriteOffset.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4264
DAQmxResetWriteOffset = _stdcall_libraries['nicaiu'].DAQmxResetWriteOffset
DAQmxResetWriteOffset.restype = int32
# DAQmxResetWriteOffset(taskHandle)
DAQmxResetWriteOffset.argtypes = [TaskHandle]
# NIDAQmx.h 4267
DAQmxGetWriteRegenMode = _stdcall_libraries['nicaiu'].DAQmxGetWriteRegenMode
DAQmxGetWriteRegenMode.restype = int32
# DAQmxGetWriteRegenMode(taskHandle, data)
DAQmxGetWriteRegenMode.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4268
DAQmxSetWriteRegenMode = _stdcall_libraries['nicaiu'].DAQmxSetWriteRegenMode
DAQmxSetWriteRegenMode.restype = int32
# DAQmxSetWriteRegenMode(taskHandle, data)
DAQmxSetWriteRegenMode.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4269
DAQmxResetWriteRegenMode = _stdcall_libraries['nicaiu'].DAQmxResetWriteRegenMode
DAQmxResetWriteRegenMode.restype = int32
# DAQmxResetWriteRegenMode(taskHandle)
DAQmxResetWriteRegenMode.argtypes = [TaskHandle]
# NIDAQmx.h 4271
DAQmxGetWriteCurrWritePos = _stdcall_libraries['nicaiu'].DAQmxGetWriteCurrWritePos
DAQmxGetWriteCurrWritePos.restype = int32
# DAQmxGetWriteCurrWritePos(taskHandle, data)
DAQmxGetWriteCurrWritePos.argtypes = [TaskHandle, POINTER(uInt64)]
# NIDAQmx.h 4273
DAQmxGetWriteSpaceAvail = _stdcall_libraries['nicaiu'].DAQmxGetWriteSpaceAvail
DAQmxGetWriteSpaceAvail.restype = int32
# DAQmxGetWriteSpaceAvail(taskHandle, data)
DAQmxGetWriteSpaceAvail.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 4275
DAQmxGetWriteTotalSampPerChanGenerated = _stdcall_libraries['nicaiu'].DAQmxGetWriteTotalSampPerChanGenerated
DAQmxGetWriteTotalSampPerChanGenerated.restype = int32
# DAQmxGetWriteTotalSampPerChanGenerated(taskHandle, data)
DAQmxGetWriteTotalSampPerChanGenerated.argtypes = [TaskHandle, POINTER(uInt64)]
# NIDAQmx.h 4277
DAQmxGetWriteRawDataWidth = _stdcall_libraries['nicaiu'].DAQmxGetWriteRawDataWidth
DAQmxGetWriteRawDataWidth.restype = int32
# DAQmxGetWriteRawDataWidth(taskHandle, data)
DAQmxGetWriteRawDataWidth.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 4279
DAQmxGetWriteNumChans = _stdcall_libraries['nicaiu'].DAQmxGetWriteNumChans
DAQmxGetWriteNumChans.restype = int32
# DAQmxGetWriteNumChans(taskHandle, data)
DAQmxGetWriteNumChans.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 4282
DAQmxGetWriteWaitMode = _stdcall_libraries['nicaiu'].DAQmxGetWriteWaitMode
DAQmxGetWriteWaitMode.restype = int32
# DAQmxGetWriteWaitMode(taskHandle, data)
DAQmxGetWriteWaitMode.argtypes = [TaskHandle, POINTER(int32)]
# NIDAQmx.h 4283
DAQmxSetWriteWaitMode = _stdcall_libraries['nicaiu'].DAQmxSetWriteWaitMode
DAQmxSetWriteWaitMode.restype = int32
# DAQmxSetWriteWaitMode(taskHandle, data)
DAQmxSetWriteWaitMode.argtypes = [TaskHandle, int32]
# NIDAQmx.h 4284
DAQmxResetWriteWaitMode = _stdcall_libraries['nicaiu'].DAQmxResetWriteWaitMode
DAQmxResetWriteWaitMode.restype = int32
# DAQmxResetWriteWaitMode(taskHandle)
DAQmxResetWriteWaitMode.argtypes = [TaskHandle]
# NIDAQmx.h 4286
DAQmxGetWriteSleepTime = _stdcall_libraries['nicaiu'].DAQmxGetWriteSleepTime
DAQmxGetWriteSleepTime.restype = int32
# DAQmxGetWriteSleepTime(taskHandle, data)
DAQmxGetWriteSleepTime.argtypes = [TaskHandle, POINTER(float64)]
# NIDAQmx.h 4287
DAQmxSetWriteSleepTime = _stdcall_libraries['nicaiu'].DAQmxSetWriteSleepTime
DAQmxSetWriteSleepTime.restype = int32
# DAQmxSetWriteSleepTime(taskHandle, data)
DAQmxSetWriteSleepTime.argtypes = [TaskHandle, float64]
# NIDAQmx.h 4288
DAQmxResetWriteSleepTime = _stdcall_libraries['nicaiu'].DAQmxResetWriteSleepTime
DAQmxResetWriteSleepTime.restype = int32
# DAQmxResetWriteSleepTime(taskHandle)
DAQmxResetWriteSleepTime.argtypes = [TaskHandle]
# NIDAQmx.h 4290
DAQmxGetWriteDigitalLinesBytesPerChan = _stdcall_libraries['nicaiu'].DAQmxGetWriteDigitalLinesBytesPerChan
DAQmxGetWriteDigitalLinesBytesPerChan.restype = int32
# DAQmxGetWriteDigitalLinesBytesPerChan(taskHandle, data)
DAQmxGetWriteDigitalLinesBytesPerChan.argtypes = [TaskHandle, POINTER(uInt32)]
# NIDAQmx.h 4294
DAQmxGetPhysicalChanTEDSMfgID = _stdcall_libraries['nicaiu'].DAQmxGetPhysicalChanTEDSMfgID
DAQmxGetPhysicalChanTEDSMfgID.restype = int32
# DAQmxGetPhysicalChanTEDSMfgID(physicalChannel, data)
DAQmxGetPhysicalChanTEDSMfgID.argtypes = [STRING, POINTER(uInt32)]
# NIDAQmx.h 4296
DAQmxGetPhysicalChanTEDSModelNum = _stdcall_libraries['nicaiu'].DAQmxGetPhysicalChanTEDSModelNum
DAQmxGetPhysicalChanTEDSModelNum.restype = int32
# DAQmxGetPhysicalChanTEDSModelNum(physicalChannel, data)
DAQmxGetPhysicalChanTEDSModelNum.argtypes = [STRING, POINTER(uInt32)]
# NIDAQmx.h 4298
DAQmxGetPhysicalChanTEDSSerialNum = _stdcall_libraries['nicaiu'].DAQmxGetPhysicalChanTEDSSerialNum
DAQmxGetPhysicalChanTEDSSerialNum.restype = int32
# DAQmxGetPhysicalChanTEDSSerialNum(physicalChannel, data)
DAQmxGetPhysicalChanTEDSSerialNum.argtypes = [STRING, POINTER(uInt32)]
# NIDAQmx.h 4300
DAQmxGetPhysicalChanTEDSVersionNum = _stdcall_libraries['nicaiu'].DAQmxGetPhysicalChanTEDSVersionNum
DAQmxGetPhysicalChanTEDSVersionNum.restype = int32
# DAQmxGetPhysicalChanTEDSVersionNum(physicalChannel, data)
DAQmxGetPhysicalChanTEDSVersionNum.argtypes = [STRING, POINTER(uInt32)]
# NIDAQmx.h 4302
DAQmxGetPhysicalChanTEDSVersionLetter = _stdcall_libraries['nicaiu'].DAQmxGetPhysicalChanTEDSVersionLetter
DAQmxGetPhysicalChanTEDSVersionLetter.restype = int32
# DAQmxGetPhysicalChanTEDSVersionLetter(physicalChannel, data, bufferSize)
DAQmxGetPhysicalChanTEDSVersionLetter.argtypes = [STRING, STRING, uInt32]
# NIDAQmx.h 4304
DAQmxGetPhysicalChanTEDSBitStream = _stdcall_libraries['nicaiu'].DAQmxGetPhysicalChanTEDSBitStream
DAQmxGetPhysicalChanTEDSBitStream.restype = int32
# DAQmxGetPhysicalChanTEDSBitStream(physicalChannel, data, arraySizeInSamples)
DAQmxGetPhysicalChanTEDSBitStream.argtypes = [STRING, POINTER(uInt8), uInt32]
# NIDAQmx.h 4306
DAQmxGetPhysicalChanTEDSTemplateIDs = _stdcall_libraries['nicaiu'].DAQmxGetPhysicalChanTEDSTemplateIDs
DAQmxGetPhysicalChanTEDSTemplateIDs.restype = int32
# DAQmxGetPhysicalChanTEDSTemplateIDs(physicalChannel, data, arraySizeInSamples)
DAQmxGetPhysicalChanTEDSTemplateIDs.argtypes = [STRING, POINTER(uInt32), uInt32]
# NIDAQmx.h 4310
DAQmxGetPersistedTaskAuthor = _stdcall_libraries['nicaiu'].DAQmxGetPersistedTaskAuthor
DAQmxGetPersistedTaskAuthor.restype = int32
# DAQmxGetPersistedTaskAuthor(taskName, data, bufferSize)
DAQmxGetPersistedTaskAuthor.argtypes = [STRING, STRING, uInt32]
# NIDAQmx.h 4312
DAQmxGetPersistedTaskAllowInteractiveEditing = _stdcall_libraries['nicaiu'].DAQmxGetPersistedTaskAllowInteractiveEditing
DAQmxGetPersistedTaskAllowInteractiveEditing.restype = int32
# DAQmxGetPersistedTaskAllowInteractiveEditing(taskName, data)
DAQmxGetPersistedTaskAllowInteractiveEditing.argtypes = [STRING, POINTER(bool32)]
# NIDAQmx.h 4314
DAQmxGetPersistedTaskAllowInteractiveDeletion = _stdcall_libraries['nicaiu'].DAQmxGetPersistedTaskAllowInteractiveDeletion
DAQmxGetPersistedTaskAllowInteractiveDeletion.restype = int32
# DAQmxGetPersistedTaskAllowInteractiveDeletion(taskName, data)
DAQmxGetPersistedTaskAllowInteractiveDeletion.argtypes = [STRING, POINTER(bool32)]
# NIDAQmx.h 4318
DAQmxGetPersistedChanAuthor = _stdcall_libraries['nicaiu'].DAQmxGetPersistedChanAuthor
DAQmxGetPersistedChanAuthor.restype = int32
# DAQmxGetPersistedChanAuthor(channel, data, bufferSize)
DAQmxGetPersistedChanAuthor.argtypes = [STRING, STRING, uInt32]
# NIDAQmx.h 4320
DAQmxGetPersistedChanAllowInteractiveEditing = _stdcall_libraries['nicaiu'].DAQmxGetPersistedChanAllowInteractiveEditing
DAQmxGetPersistedChanAllowInteractiveEditing.restype = int32
# DAQmxGetPersistedChanAllowInteractiveEditing(channel, data)
DAQmxGetPersistedChanAllowInteractiveEditing.argtypes = [STRING, POINTER(bool32)]
# NIDAQmx.h 4322
DAQmxGetPersistedChanAllowInteractiveDeletion = _stdcall_libraries['nicaiu'].DAQmxGetPersistedChanAllowInteractiveDeletion
DAQmxGetPersistedChanAllowInteractiveDeletion.restype = int32
# DAQmxGetPersistedChanAllowInteractiveDeletion(channel, data)
DAQmxGetPersistedChanAllowInteractiveDeletion.argtypes = [STRING, POINTER(bool32)]
# NIDAQmx.h 4326
DAQmxGetPersistedScaleAuthor = _stdcall_libraries['nicaiu'].DAQmxGetPersistedScaleAuthor
DAQmxGetPersistedScaleAuthor.restype = int32
# DAQmxGetPersistedScaleAuthor(scaleName, data, bufferSize)
DAQmxGetPersistedScaleAuthor.argtypes = [STRING, STRING, uInt32]
# NIDAQmx.h 4328
DAQmxGetPersistedScaleAllowInteractiveEditing = _stdcall_libraries['nicaiu'].DAQmxGetPersistedScaleAllowInteractiveEditing
DAQmxGetPersistedScaleAllowInteractiveEditing.restype = int32
# DAQmxGetPersistedScaleAllowInteractiveEditing(scaleName, data)
DAQmxGetPersistedScaleAllowInteractiveEditing.argtypes = [STRING, POINTER(bool32)]
# NIDAQmx.h 4330
DAQmxGetPersistedScaleAllowInteractiveDeletion = _stdcall_libraries['nicaiu'].DAQmxGetPersistedScaleAllowInteractiveDeletion
DAQmxGetPersistedScaleAllowInteractiveDeletion.restype = int32
# DAQmxGetPersistedScaleAllowInteractiveDeletion(scaleName, data)
DAQmxGetPersistedScaleAllowInteractiveDeletion.argtypes = [STRING, POINTER(bool32)]
DAQmxErrorChannelNotReservedForRouting = -200186 # Variable c_int
DAQmx_Val_FullBridgeIII = 10185 # Variable c_int
DAQmx_AI_RTD_C = 4115 # Variable c_int
DAQmx_AI_RTD_A = 4112 # Variable c_int
DAQmxErrorCantSetWatchdogExpirationOnDigInChan = -200651 # Variable c_int
DAQmx_AIConv_MaxRate = 8905 # Variable c_int
DAQmxErrorSampToWritePerChanNotMultipleOfIncr = -200584 # Variable c_int
DAQmx_SwitchDev_NumRows = 6377 # Variable c_int
DAQmxWarningPALTransferOverread = 50411 # Variable c_int
DAQmxErrorWriteNotCompleteBeforeSampClk = -209801 # Variable c_int
DAQmxErrorSpecifiedAttrNotValid = -200233 # Variable c_int
DAQmx_Val_Switch_Topology_2575_2_Wire_95x1_Mux = '2575/2-Wire 95x1 Mux' # Variable STRING
DAQmxErrorPrimingCfgFIFO = -200329 # Variable c_int
DAQmx_Val_Lvl = 10210 # Variable c_int
DAQmxErrorHWUnexpectedlyPoweredOffAndOn = -200194 # Variable c_int
DAQmx_AI_Excit_Val = 6133 # Variable c_int
DAQmx_AI_RTD_B = 4113 # Variable c_int
DAQmxErrorDigitalWaveformExpected = -200094 # Variable c_int
DAQmx_DigEdge_AdvTrig_Edge = 4960 # Variable c_int
DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseRate = 8692 # Variable c_int
DAQmxErrorInadequateResolutionForTimebaseCal = -200721 # Variable c_int
DAQmxErrorRequestedSignalInversionForRoutingNotPossible = -200042 # Variable c_int
DAQmx_Val_Bits = 10109 # Variable c_int
DAQmxErrorInvalidIdentifierFollowingSeparatorInList = -200051 # Variable c_int
DAQmx_CI_SemiPeriod_DigFltr_TimebaseRate = 8732 # Variable c_int
DAQmx_SwitchDev_SettlingTime = 4676 # Variable c_int
DAQmxErrorInvalidAsynOpHandle = -200616 # Variable c_int
DAQmx_CI_SemiPeriod_DigFltr_MinPulseWidth = 8730 # Variable c_int
DAQmxErrorSendAdvCmpltAfterWaitForTrigInScanlist = -200640 # Variable c_int
DAQmxErrorTimebaseCalFailedToConverge = -200722 # Variable c_int
DAQmx_SwitchDev_RelayList = 6108 # Variable c_int
DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo2 = -200745 # Variable c_int
DAQmxErrorInvalidGlobalChan = -200882 # Variable c_int
DAQmxErrorSwitchDifferentTopologyWhenScanning = -200191 # Variable c_int
DAQmxErrorInvalidChanName = -200461 # Variable c_int
DAQmx_Val_LargeRng2Ctr = 10205 # Variable c_int
DAQmxErrorMeasCalAdjustDirectPathOutputImpedance = -200507 # Variable c_int
DAQmxErrorCantAllowConnectDACToGnd = -200669 # Variable c_int
DAQmxErrorPALPhysicalBufferEmpty = -50408 # Variable c_int
DAQmxErrorResourcesInUseForInversionInTask_Routing = -89135 # Variable c_int
DAQmxErrorSampPerChanNotMultOfXferSize = -200837 # Variable c_int
DAQmxErrorHandshakeEventOutputTermNotSupportedGivenTimingType = -200915 # Variable c_int
DAQmxErrorSwitchScanlistTooBig = -200201 # Variable c_int
DAQmxErrorPALTransferTimedOut = -50400 # Variable c_int
DAQmxErrorSensorInvalidCompletionResistance = -200163 # Variable c_int
DAQmx_Val_g = 10186 # Variable c_int
DAQmxErrorPALBadMode = -50006 # Variable c_int
DAQmx_Val_OnBrdMemNotFull = 10242 # Variable c_int
DAQmxErrorNoForwardPolyScaleCoeffs = -200405 # Variable c_int
DAQmxErrorPowerupTristateNotSpecdForEntirePort = -200653 # Variable c_int
DAQmxErrorChannelSizeTooBigForPortReadType = -200466 # Variable c_int
DAQmxErrorSimulationCannotBeDisabledForDevCreatedAsSimulatedDev = -200856 # Variable c_int
DAQmxErrorInvalidAIAttenuation = -200412 # Variable c_int
DAQmxErrorDeviceShutDownDueToHighTemp = -200680 # Variable c_int
DAQmxErrorBufferWithOnDemandSampTiming = -200217 # Variable c_int
DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseSrc = 8726 # Variable c_int
DAQmxErrorChanSizeTooBigForU32PortRead = -200564 # Variable c_int
DAQmx_AI_ChanCal_Desc = 8868 # Variable c_int
DAQmxErrorCantSetPropertyTaskNotRunningCommitted = -200971 # Variable c_int
DAQmx_CO_Pulse_Freq = 4472 # Variable c_int
DAQmxErrorDataNotAvailable = -200005 # Variable c_int
DAQmx_SwitchChan_WireMode = 6373 # Variable c_int
DAQmx_RealTime_WaitForNextSampClkWaitMode = 8943 # Variable c_int
DAQmxWarningPALHardwareFault = 50152 # Variable c_int
DAQmx_Val_RightJustified = 10279 # Variable c_int
DAQmxErrorCouldNotDownloadFirmwareFileMissingOrDamaged = -200961 # Variable c_int
DAQmxErrorCOWritePulseHighTimeOutOfRange = -200686 # Variable c_int
DAQmxErrorWaveformNotInMem = -200312 # Variable c_int
DAQmx_AO_OutputType = 4360 # Variable c_int
DAQmxErrorInterconnectBridgeRouteNotPossible = -54011 # Variable c_int
DAQmx_CI_Timestamp_Units = 8883 # Variable c_int
DAQmxErrorPropertyNotSupportedWhenRefClkSrcNone = -200581 # Variable c_int
DAQmx_Val_HWTimedSinglePoint = 12522 # Variable c_int
DAQmx_AI_Thrmstr_A = 6345 # Variable c_int
DAQmx_AI_Thrmstr_B = 6347 # Variable c_int
DAQmx_AI_Thrmstr_C = 6346 # Variable c_int
DAQmx_Task_NumChans = 8577 # Variable c_int
DAQmxErrorAnalogTrigChanNotFirstInScanList = -200131 # Variable c_int
DAQmx_Exported_HshkEvent_Pulse_Width = 8897 # Variable c_int
DAQmxErrorPALTransferOverwritten = -50410 # Variable c_int
DAQmxErrorInvalidLineGrouping = -200528 # Variable c_int
DAQmx_SampClk_Src = 6226 # Variable c_int
DAQmxErrorSampClkTimebaseDCMLock = -200237 # Variable c_int
DAQmxErrorEveryNSampsEventAlreadyRegistered = -200881 # Variable c_int
DAQmxWarningPALBadPointer = 50004 # Variable c_int
DAQmxErrorNegativeReadSampleNumber = -200277 # Variable c_int
DAQmxErrorCannotReadWhenAutoStartFalseBufSizeZeroAndTaskNotRunning = -200834 # Variable c_int
DAQmx_Val_Position_LVDT = 10352 # Variable c_int
DAQmxErrorChanCalTablePreScaledValsNotSpecd = -200936 # Variable c_int
DAQmx_Val_FullBridgeI = 10183 # Variable c_int
DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseRate = 8722 # Variable c_int
DAQmxWarningPALResourceOwnedBySystem = 50100 # Variable c_int
DAQmxErrorCAPISyncEventsTaskStateChangeNotAllowedFromDifferentThread = -200979 # Variable c_int
DAQmxErrorScriptNotInMem = -200342 # Variable c_int
DAQmxErrorPALHardwareFault = -50152 # Variable c_int
DAQmxErrorPhysChanMeasType = -200431 # Variable c_int
DAQmxWarningPALValueConflict = 50000 # Variable c_int
DAQmxErrorMarkerPositionOutsideSubsetInScript = -200034 # Variable c_int
DAQmx_Val_PulseWidth = 10359 # Variable c_int
DAQmxErrorPLLLock = -200245 # Variable c_int
DAQmx_Val_WaitForHandshakeTriggerAssert = 12550 # Variable c_int
DAQmx_AnlgWin_StartTrig_Top = 5123 # Variable c_int
DAQmxErrorInvalidRefClkSrc = -200415 # Variable c_int
DAQmx_CO_Pulse_Term = 6369 # Variable c_int
DAQmx_DO_DataXferReqCond = 8807 # Variable c_int
DAQmx_CI_Freq_DigFltr_TimebaseRate = 8682 # Variable c_int
DAQmxErrorAcqStoppedToPreventIntermediateBufferOverflow = -200283 # Variable c_int
DAQmxErrorWaitForNextSampClkNotSupported = -200863 # Variable c_int
DAQmxErrorNoAnalogTrigHW = -200214 # Variable c_int
DAQmx_AI_Lowpass_SwitchCap_ExtClkFreq = 6277 # Variable c_int
DAQmxErrorPauseTrigTypeNotSupportedGivenTimingType = -200906 # Variable c_int
DAQmxErrorWriteOffsetNotMultOfIncr = -200630 # Variable c_int
DAQmx_Val_Seconds = 10364 # Variable c_int
DAQmx_PersistedScale_Author = 8916 # Variable c_int
DAQmx_Dev_IsSimulated = 8906 # Variable c_int
DAQmx_Exported_HshkEvent_Delay = 8892 # Variable c_int
DAQmx_AnlgWin_PauseTrig_Coupling = 8759 # Variable c_int
DAQmx_AnlgWin_PauseTrig_Btm = 4981 # Variable c_int
DAQmx_Val_Switch_Topology_2585_1_Wire_10x1_Mux = '2585/1-Wire 10x1 Mux' # Variable STRING
DAQmxErrorPhysChanOutputType = -200432 # Variable c_int
DAQmxWarningSampValCoercedToMin = 200022 # Variable c_int
DAQmxErrorNoReversePolyScaleCoeffs = -200406 # Variable c_int
DAQmxErrorPALComponentAlreadyLoaded = -50260 # Variable c_int
DAQmxErrorPhysChanNotInTask = -200649 # Variable c_int
DAQmxErrorRefClkSrcNotSupported = -200903 # Variable c_int
DAQmxErrorPALComponentInitializationFault = -50258 # Variable c_int
DAQmx_Exported_HshkEvent_OutputBehavior = 8891 # Variable c_int
DAQmx_Val_IRIGB = 10070 # Variable c_int
DAQmx_Val_Position_LinEncoder = 10361 # Variable c_int
DAQmx_CI_Encoder_BInput_DigSync_Enable = 8708 # Variable c_int
DAQmx_Val_LosslessPacking = 12555 # Variable c_int
DAQmxErrorResourcesInUseForRoute = -200369 # Variable c_int
DAQmx_Val_Switch_Topology_1166_32_SPDT = '1166/32-SPDT' # Variable STRING
DAQmxErrorPALTransferInProgress = -50403 # Variable c_int
DAQmx_AI_TermCfg = 4247 # Variable c_int
DAQmxErrorExtCalDateTimeNotDAQmx = -200543 # Variable c_int
DAQmxErrorLineNumIncompatibleWithVideoSignalFormat = -200424 # Variable c_int
DAQmx_SwitchChan_MaxDCVoltage = 1616 # Variable c_int
DAQmxErrorPALDeviceNotFound = -50300 # Variable c_int
DAQmx_AI_EnhancedAliasRejectionEnable = 8852 # Variable c_int
DAQmxErrorMStudioMultiplePhysChansNotSupported = -200792 # Variable c_int
DAQmxErrorADCOverrun = -200019 # Variable c_int
DAQmxErrorCounterTimebaseRateNotFound = -200142 # Variable c_int
DAQmxErrorPALLogicalBufferFull = -50407 # Variable c_int
DAQmx_CO_CtrTimebaseRate = 6338 # Variable c_int
DAQmx_Val_MapRanges = 10448 # Variable c_int
DAQmx_Val_Switch_Topology_2593_Dual_8x1_Mux = '2593/Dual 8x1 Mux' # Variable STRING
DAQmx_CI_Encoder_AInputTerm = 8605 # Variable c_int
DAQmxErrorInputBufSizeTooSmallToStartAcq = -200608 # Variable c_int
DAQmxErrorDelayFromSampClkTooShort = -200336 # Variable c_int
DAQmxErrorExpectedNumberOfChannelsVerificationFailed = -200464 # Variable c_int
DAQmx_AI_MeasType = 1685 # Variable c_int
DAQmx_SwitchDev_AutoConnAnlgBus = 6106 # Variable c_int
DAQmxErrorExternalTimebaseRateNotknownForRate = -200132 # Variable c_int
DAQmx_Val_CO = 10132 # Variable c_int
DAQmxErrorReadChanTypeMismatch = -200525 # Variable c_int
DAQmx_Val_CI = 10131 # Variable c_int
DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_4x64_Matrix = '2532/1-Wire Dual 4x64 Matrix' # Variable STRING
DAQmxErrorPALThreadCouldNotRun = -50600 # Variable c_int
DAQmxErrorIncorrectDigitalPattern = -200102 # Variable c_int
DAQmx_Val_Radians = 10273 # Variable c_int
DAQmxErrorDrivePhaseShiftDCMBecameUnlocked = -200390 # Variable c_int
DAQmxWarningPALLogicalBufferFull = 50407 # Variable c_int
DAQmx_DigEdge_ArmStartTrig_DigFltr_MinPulseWidth = 8750 # Variable c_int
DAQmxErrorTEDSSensorDataError = -200826 # Variable c_int
DAQmx_Val_Switch_Topology_2584_1_Wire_15x1_Mux = '2584/1-Wire 15x1 Mux' # Variable STRING
DAQmxErrorSampleTimebaseDivisorNotSupportedGivenTimingType = -200916 # Variable c_int
DAQmxErrorFewerThan2ScaledValues = -200433 # Variable c_int
DAQmxErrorSwitchOpFailedDueToPrevError = -200674 # Variable c_int
DAQmxErrorResourcesInUseForExportSignalPolarity = -200367 # Variable c_int
DAQmx_CI_CountEdges_Term = 6343 # Variable c_int
DAQmxErrorSampRateTooHigh = -200332 # Variable c_int
DAQmxErrorAnalogTrigChanNotExternal = -200711 # Variable c_int
DAQmxErrorCouldNotReserveRequestedTrigLine = -200225 # Variable c_int
DAQmxErrorTimingSrcDoesNotExist = -200738 # Variable c_int
DAQmx_CI_Encoder_ZIndexEnable = 2192 # Variable c_int
DAQmx_CI_CtrTimebase_DigFltr_TimebaseRate = 8820 # Variable c_int
DAQmx_Val_Switch_Topology_2595_4x1_Mux = '2595/4x1 Mux' # Variable STRING
DAQmx_Val_Switch_Topology_1193_32x1_Mux = '1193/32x1 Mux' # Variable STRING
DAQmx_AO_DataXferReqCond = 6204 # Variable c_int
DAQmxErrorKeywordExpectedInScript = -200027 # Variable c_int
DAQmx_CI_AngEncoder_Units = 6310 # Variable c_int
DAQmxErrorLocalRemoteDriverVersionMismatch_Routing = -88716 # Variable c_int
DAQmx_Val_ProgrammedIO = 10264 # Variable c_int
DAQmxErrorTableScaleScaledValsNotSpecd = -200348 # Variable c_int
DAQmx_DI_InvertLines = 1939 # Variable c_int
DAQmxErrorLinesReservedForSCXIControl = -200159 # Variable c_int
DAQmx_Exported_SampClk_OutputBehavior = 6251 # Variable c_int
DAQmx_Scale_Type = 6441 # Variable c_int
DAQmxErrorMStudioCppRemoveEventsBeforeStop = -200991 # Variable c_int
DAQmxWarningPALTransferStopped = 50404 # Variable c_int
DAQmx_Val_Switch_Topology_2576_2_Wire_Octal_8x1_Mux = '2576/2-Wire Octal 8x1 Mux' # Variable STRING
DAQmx_CO_OutputType = 6325 # Variable c_int
DAQmx_CI_Encoder_BInput_DigFltr_MinPulseWidth = 8705 # Variable c_int
DAQmxErrorTEDSDoesNotContainPROM = -200822 # Variable c_int
DAQmxErrorPALDeviceUnknown = -50301 # Variable c_int
DAQmxErrorInternalAIInputSrcInMultipleChanGroups = -200571 # Variable c_int
DAQmxErrorAcqStoppedToPreventInputBufferOverwrite = -200222 # Variable c_int
DAQmxErrorInvalidAOOffsetCalConst = -200719 # Variable c_int
DAQmxErrorDACUnderflow = -200018 # Variable c_int
DAQmx_CI_CountEdges_DigSync_Enable = 8698 # Variable c_int
DAQmxErrorInvalidRoutingDestinationTerminalName_Routing = -89121 # Variable c_int
DAQmxWarningUserDefinedInfoTooLong = 200025 # Variable c_int
DAQmxErrorDuplicatedChannel = -200003 # Variable c_int
DAQmxErrorTooManyInstructionsInLoopInScript = -201016 # Variable c_int
DAQmx_Val_Pulse = 10265 # Variable c_int
DAQmx_CI_Encoder_BInput_DigFltr_TimebaseSrc = 8706 # Variable c_int
DAQmx_DI_DataXferMech = 8803 # Variable c_int
DAQmx_Read_ReadAllAvailSamp = 4629 # Variable c_int
DAQmxErrorDAQmxCantUseStringDueToUnknownChar = -200811 # Variable c_int
DAQmxErrorOddTotalNumSampsToWrite = -200692 # Variable c_int
DAQmxErrorSampTbRateSampTbSrcMismatch = -200308 # Variable c_int
DAQmxErrorCIHWTimedSinglePointNotSupportedForMeasType = -200998 # Variable c_int
DAQmxErrorPROMOnTEDSContainsBasicTEDSData = -200824 # Variable c_int
DAQmx_DO_NumLines = 8569 # Variable c_int
DAQmx_Val_TEDS_Sensor = 12531 # Variable c_int
DAQmxErrorRecordOverwritten = -200006 # Variable c_int
DAQmxErrorPALFileSeekFault = -50206 # Variable c_int
DAQmx_Val_ALowBHigh = 10042 # Variable c_int
DAQmx_Task_Name = 4726 # Variable c_int
DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseRate = 8747 # Variable c_int
DAQmxErrorWriteFailedMultipleCOOutputTypes = -200829 # Variable c_int
DAQmx_CI_Period_MeasTime = 6445 # Variable c_int
DAQmx_Val_Switch_Topology_1130_2_Wire_128x1_Mux = '1130/2-Wire 128x1 Mux' # Variable STRING
DAQmxErrorTableScalePreScaledValsNotSpecd = -200349 # Variable c_int
DAQmxErrorConnectionInScanlistMustWaitForTrig = -200636 # Variable c_int
DAQmxErrorPALResourceInitialized = -50105 # Variable c_int
DAQmxErrorPALBadToken = -50020 # Variable c_int
DAQmxErrorCannotTristateBusyTerm_Routing = -89127 # Variable c_int
DAQmx_DigEdge_ArmStartTrig_DigFltr_Enable = 8749 # Variable c_int
DAQmxErrorDevInUnidentifiedPXIChassis = -200862 # Variable c_int
DAQmxErrorDDCClkOutDCMBecameUnlocked = -200244 # Variable c_int
DAQmx_Val_External = 10167 # Variable c_int
DAQmxErrorInvalidAttentuationBasedOnMinMax = -200321 # Variable c_int
DAQmxErrorPALThreadStackSizeNotSupported = -50603 # Variable c_int
DAQmxErrorCannotTristateTerm = -200253 # Variable c_int
DAQmxWarningPALResourceReserved = 50103 # Variable c_int
DAQmxWarningDevNotSelfCalibratedWithDAQmx = 200016 # Variable c_int
DAQmx_Val_NoBridge = 10228 # Variable c_int
DAQmx_Scale_Map_ScaledMin = 4656 # Variable c_int
DAQmxErrorSampClkRateAndDivCombo = -200273 # Variable c_int
DAQmx_Val_Switch_Topology_1167_Independent = '1167/Independent' # Variable STRING
DAQmxErrorChanVersionNew = -200469 # Variable c_int
DAQmxWarningPALResourceBusy = 50106 # Variable c_int
FALSE = 0 # Variable c_long
DAQmxErrorCounterInputPauseTriggerAndSampleClockInvalid = -200145 # Variable c_int
DAQmxErrorCannotHaveTimedLoopAndDAQmxSignalEventsInSameTask = -200948 # Variable c_int
DAQmxErrorChansCantAppearInSameTask = -200713 # Variable c_int
DAQmx_Read_CurrReadPos = 4641 # Variable c_int
DAQmx_AI_Bridge_Cfg = 135 # Variable c_int
DAQmxErrorClkDoublerDCMBecameUnlocked = -200242 # Variable c_int
DAQmxError2InputPortCombinationGivenSampTimingType653x = -200929 # Variable c_int
DAQmxErrorDeviceIsNotAValidSwitch = -200069 # Variable c_int
DAQmx_Read_OverWrite = 4625 # Variable c_int
DAQmxErrorNULLPtrForC_Api = -200230 # Variable c_int
DAQmxErrorDLLBecameUnlocked = -200551 # Variable c_int
DAQmxErrorLines0To3ConfiguredForOutput = -200123 # Variable c_int
DAQmx_Val_Switch_Topology_2532_2_Wire_16x16_Matrix = '2532/2-Wire 16x16 Matrix' # Variable STRING
DAQmxErrorStreamDCMBecameUnlocked = -200314 # Variable c_int
DAQmxErrorDifferentRawDataCompression = -200959 # Variable c_int
DAQmx_Val_StartTrigger = 12491 # Variable c_int
DAQmxErrorAOMinMaxNotInGainRange = -200760 # Variable c_int
DAQmx_Val_S_Type_TC = 10085 # Variable c_int
DAQmxErrorMeasCalAdjustDirectPathGain = -200505 # Variable c_int
DAQmxErrorProductOfAOMinAndGainTooSmall = -200271 # Variable c_int
DAQmxErrorChanCalExpirationDateNotSet = -200933 # Variable c_int
DAQmxErrorPALDeviceInitializationFault = -50303 # Variable c_int
DAQmxErrorInvalidOptionForDigitalPortChannel = -200376 # Variable c_int
DAQmx_Val_R_Type_TC = 10082 # Variable c_int
DAQmx_Read_OverloadedChansExist = 8564 # Variable c_int
DAQmxErrorRepeatLoopNestingTooDeepInScript = -200035 # Variable c_int
DAQmxErrorDLLLock = -200550 # Variable c_int
DAQmxErrorOutputCantStartChangedRegenerationMode = -200568 # Variable c_int
DAQmxErrorRecordNotAvailable = -200007 # Variable c_int
DAQmx_Val_ConstVal = 10116 # Variable c_int
DAQmx_Scale_Map_PreScaledMax = 4657 # Variable c_int
DAQmxErrorCantSaveChanWithoutReplace = -200483 # Variable c_int
DAQmxErrorPALBadReadCount = -50011 # Variable c_int
DAQmx_CI_Period_DigFltr_MinPulseWidth = 8685 # Variable c_int
DAQmx_Val_Switch_Topology_1127_Independent = '1127/Independent' # Variable STRING
DAQmxErrorInputBoardClkDCMBecameUnlocked = -200387 # Variable c_int
DAQmx_PersistedScale_AllowInteractiveEditing = 8917 # Variable c_int
DAQmxErrorCannotConnectSrcChans = -200188 # Variable c_int
DAQmx_Val_CurrWritePos = 10430 # Variable c_int
DAQmx_Val_WaitInfinitely = -1.0 # Variable c_double
DAQmxErrorSelfCalTemperatureNotDAQmx = -200542 # Variable c_int
DAQmxErrorChanIndexInvalid = -200606 # Variable c_int
DAQmx_CI_Period_DigFltr_TimebaseRate = 8687 # Variable c_int
DAQmxErrorWatchdogExpirationTristateNotSpecdForEntirePort = -200654 # Variable c_int
DAQmx_AI_ACExcit_WireMode = 6349 # Variable c_int
DAQmxErrorMeasCalAdjustCalADC = -200509 # Variable c_int
DAQmx_Val_EnteringWin = 10163 # Variable c_int
DAQmxErrorStrobePhaseShiftDCMBecameUnlocked = -200391 # Variable c_int
DAQmx_DigLvl_PauseTrig_When = 4992 # Variable c_int
DAQmx_CI_Encoder_BInput_DigFltr_Enable = 8704 # Variable c_int
DAQmx_Val_AIConvertClock = 12484 # Variable c_int
DAQmx_Read_OverloadedChans = 8565 # Variable c_int
DAQmxErrorRouteNotSupportedByHW = -200368 # Variable c_int
DAQmxWarningDeviceMayShutDownDueToHighTemp = 200034 # Variable c_int
DAQmx_SyncPulse_SyncTime = 8766 # Variable c_int
DAQmxErrorActiveChanTooManyLinesSpecdWhenGettingPrpty = -200643 # Variable c_int
DAQmx_ChanIsGlobal = 8964 # Variable c_int
DAQmxErrorWriteFailedBecauseWatchdogExpired = -200678 # Variable c_int
DAQmx_Scale_Lin_Slope = 4647 # Variable c_int
DAQmx_Val_OverwriteUnreadSamps = 10252 # Variable c_int
DAQmxErrorCalTempNotSupported = -200338 # Variable c_int
DAQmxErrorUnsupportedTrigTypeSendsSWTrig = -200373 # Variable c_int
DAQmxErrorInvalidLoopIterationsInScript = -200036 # Variable c_int
DAQmxErrorSelfCalConstsInvalid = -200549 # Variable c_int
DAQmxWarningTimestampCounterRolledOver = 200003 # Variable c_int
DAQmxErrorInversionNotSupportedByHW = -200363 # Variable c_int
DAQmxErrorSCXISerialCommunication = -200015 # Variable c_int
DAQmx_Val_Yield = 12525 # Variable c_int
DAQmxErrorCabledModuleCannotRouteSSH = -200320 # Variable c_int
DAQmx_Val_Switch_Topology_2530_1_Wire_Quad_32x1_Mux = '2530/1-Wire Quad 32x1 Mux' # Variable STRING
DAQmxErrorNoInputOnPortCfgdForWatchdogOutput = -200666 # Variable c_int
DAQmxErrorSampClkTimingTypeWhenTristateIsFalse = -200839 # Variable c_int
DAQmxErrorInvalidSignalTypeExportSignal = -200374 # Variable c_int
DAQmxErrorOneChanReadForMultiChanTask = -200523 # Variable c_int
DAQmxErrorNoAcqStarted = -200286 # Variable c_int
DAQmx_Val_PathStatus_ChannelReservedForRouting = 10436 # Variable c_int
DAQmx_Val_DoNotInvertPolarity = 0 # Variable c_int
DAQmxErrorInvalidSwitchChan = -200181 # Variable c_int
DAQmxErrorSampleValueOutOfRange = -200490 # Variable c_int
DAQmx_Val_Switch_Topology_2530_1_Wire_128x1_Mux = '2530/1-Wire 128x1 Mux' # Variable STRING
DAQmx_Val_Ohms = 10384 # Variable c_int
DAQmxWarningUserDefInfoStringTooLong = 200013 # Variable c_int
DAQmx_Val_Switch_Topology_1128_Independent = '1128/Independent' # Variable STRING
DAQmxErrorMultipleDevIDsPerChassisSpecifiedInList = -200210 # Variable c_int
DAQmxErrorWriteNoOutputChansInTask = -200459 # Variable c_int
DAQmxErrorUnexpectedIDFollowingSwitchChanName = -200532 # Variable c_int
DAQmxErrorBufferedAndDataXferPIO = -200847 # Variable c_int
DAQmx_Val_Pulse_Time = 10269 # Variable c_int
DAQmx_Dev_ProductType = 1585 # Variable c_int
DAQmxErrorTEDSMultipleCalTemplatesNotSupported = -200755 # Variable c_int
DAQmx_SampClk_DigFltr_TimebaseRate = 8737 # Variable c_int
DAQmxErrorDigFilterEnabledMinPulseWidthNotCfg = -200771 # Variable c_int
DAQmx_Val_20MHzTimebase = 12537 # Variable c_int
DAQmx_AI_DataXferMech = 6177 # Variable c_int
DAQmxWarningPALPhysicalBufferFull = 50409 # Variable c_int
DAQmx_Write_NumChans = 8574 # Variable c_int
DAQmx_Val_DC = 10050 # Variable c_int
DAQmx_Val_DI = 10151 # Variable c_int
DAQmx_Val_FromTEDS = 12516 # Variable c_int
DAQmx_CI_CustomScaleName = 6302 # Variable c_int
DAQmx_AI_InputSrc = 8600 # Variable c_int
DAQmx_Val_DO = 10153 # Variable c_int
DAQmxErrorSampRateTooLow = -200331 # Variable c_int
DAQmxErrorPFI0UsedForAnalogAndDigitalSrc = -200330 # Variable c_int
DAQmx_CI_Encoder_DecodingType = 8678 # Variable c_int
DAQmxErrorInvalidTimeoutVal = -200453 # Variable c_int
DAQmxErrorWaitIsLastInstructionOfLoopInScript = -200038 # Variable c_int
DAQmxErrorInvalidNumberInRepeatStatementInList = -200049 # Variable c_int
DAQmxErrorMStudioNoForwardPolyScaleCoeffs = -200783 # Variable c_int
DAQmxErrorValueNotInSet = -54022 # Variable c_int
DAQmx_Val_Switch_Topology_2564_16_SPST = '2564/16-SPST' # Variable STRING
DAQmx_RealTime_WriteRecoveryMode = 8986 # Variable c_int
DAQmxErrorPALPhysicalBufferFull = -50409 # Variable c_int
DAQmxWarningInvalidCalConstValueForAO = 200042 # Variable c_int
DAQmxErrorPropertyNotSupportedNotInputTask = -200457 # Variable c_int
DAQmxWarningInvalidCalConstValueForAI = 200041 # Variable c_int
DAQmxErrorUnexpectedIDFollowingSwitchOpInList = -200529 # Variable c_int
DAQmx_AI_Resolution = 5989 # Variable c_int
DAQmxErrorCannotConnectChansDirectly = -200185 # Variable c_int
DAQmxErrorInvalidChannelNameInList = -200050 # Variable c_int
DAQmx_Val_InvertPolarity = 1 # Variable c_int
DAQmx_CI_Freq_Units = 6305 # Variable c_int
DAQmxErrorInvalidDeviceIDInList = -200207 # Variable c_int
DAQmxErrorIncorrectReadFunction = -200100 # Variable c_int
DAQmxWarningPALBadCount = 50008 # Variable c_int
DAQmxErrorPROMOnTEDSAlreadyWritten = -200823 # Variable c_int
DAQmxErrorIfElseBlockNotAllowedInConditionalRepeatLoopInScript = -201013 # Variable c_int
DAQmxErrorPALThreadAlreadyDead = -50604 # Variable c_int
DAQmx_AI_RTD_Type = 4146 # Variable c_int
DAQmxErrorWfmNameSameAsScriptName = -200634 # Variable c_int
DAQmx_Val_Position_RVDT = 10353 # Variable c_int
DAQmx_Exported_ChangeDetectEvent_OutputTerm = 8599 # Variable c_int
DAQmx_Val_AnlgWin = 10103 # Variable c_int
DAQmx_Val_PatternDoesNotMatch = 10253 # Variable c_int
DAQmxErrorInvalidTEDSPhysChanNotAI = -200969 # Variable c_int
DAQmx_SwitchChan_Usage = 6372 # Variable c_int
DAQmxErrorOperationNotPermittedWhileScanning = -200176 # Variable c_int
DAQmx_Val_AIHoldCmpltEvent = 12493 # Variable c_int
DAQmxErrorAIMinTooLarge = -200577 # Variable c_int
DAQmx_DigPattern_StartTrig_When = 5137 # Variable c_int
DAQmxErrorRoutingHardwareBusy_Routing = -89123 # Variable c_int
DAQmxWarningSampClkRateTooLow = 200027 # Variable c_int
DAQmx_AO_Voltage_Units = 4484 # Variable c_int
DAQmx_Val_Switch_Topology_2530_4_Wire_32x1_Mux = '2530/4-Wire 32x1 Mux' # Variable STRING
DAQmxErrorLabVIEWEmptyTaskOrChans = -200429 # Variable c_int
DAQmxErrorExportTwoSignalsOnSameTerminal = -200607 # Variable c_int
DAQmx_SampClk_Timebase_Src = 4872 # Variable c_int
DAQmxErrorTaskNotInDataNeighborhood = -200485 # Variable c_int
DAQmx_Val_Switch_Topology_2527_4_Wire_16x1_Mux = '2527/4-Wire 16x1 Mux' # Variable STRING
DAQmx_Val_Period = 10256 # Variable c_int
DAQmxErrorCabledModuleNotCapableOfRoutingAI = -200151 # Variable c_int
DAQmx_SampClk_ActiveEdge = 4865 # Variable c_int
DAQmxErrorRoutingSrcTermPXIStarInSlot2 = -200700 # Variable c_int
DAQmxErrorNoSyncPulseAnotherTaskRunning = -200761 # Variable c_int
DAQmxErrorMaxSoundPressureMicSensitivitRelatedAIPropertiesNotSupportedByDev = -200861 # Variable c_int
DAQmxErrorInvalidVoltageReadingDuringExtCal = -200446 # Variable c_int
DAQmx_PhysicalChan_TEDS_SerialNum = 8668 # Variable c_int
DAQmxErrorNotEnoughSampsWrittenForInitialXferRqstCondition = -200294 # Variable c_int
DAQmx_Buf_Input_OnbrdBufSize = 8970 # Variable c_int
DAQmx_SwitchDev_NumRelays = 6374 # Variable c_int
DAQmx_CI_Period_StartingEdge = 2130 # Variable c_int
DAQmxErrorResourcesInUseForRouteInTask_Routing = -89138 # Variable c_int
DAQmxErrorPhysicalChannelNotSpecified = -200099 # Variable c_int
DAQmxErrorWriteDataTypeTooSmall = -200790 # Variable c_int
DAQmx_AnlgWin_PauseTrig_Src = 4979 # Variable c_int
DAQmxErrorEmptyStringTermNameNotSupported = -200797 # Variable c_int
DAQmxErrorIfElseBlockNotAllowedInFiniteRepeatLoopInScript = -201014 # Variable c_int
DAQmxErrorWriteWhenTaskNotRunningCOTime = -200874 # Variable c_int
DAQmx_Sys_Scales = 4710 # Variable c_int
DAQmxErrorPALTransferStopped = -50404 # Variable c_int
DAQmx_AnlgLvl_PauseTrig_When = 4977 # Variable c_int
DAQmx_Val_BurstHandshake = 12548 # Variable c_int
DAQmx_CI_Encoder_AInput_DigFltr_MinPulseWidth = 8700 # Variable c_int
DAQmxErrorActionNotSupportedTaskNotWatchdog = -200635 # Variable c_int
DAQmxErrorDevAbsentOrUnavailable_Routing = -89130 # Variable c_int
DAQmx_Read_NumChans = 8571 # Variable c_int
DAQmx_Val_Switch_Topology_1192_8_SPDT = '1192/8-SPDT' # Variable STRING
DAQmx_Val_Software = 10292 # Variable c_int
DAQmx_DigEdge_StartTrig_DigFltr_TimebaseRate = 8742 # Variable c_int
DAQmxErrorCOWriteFreqOutOfRange = -200685 # Variable c_int
DAQmxErrorWriteToTEDSNotSupportedOnRT = -200828 # Variable c_int
DAQmxErrorAutoStartReadNotAllowedEventRegistered = -200984 # Variable c_int
DAQmx_Val_Linear = 10447 # Variable c_int
DAQmxErrorPALBadWriteCount = -50014 # Variable c_int
DAQmxErrorPALComponentNeverLoaded = -50261 # Variable c_int
DAQmx_Val_CurrReadPos = 10425 # Variable c_int
DAQmx_CI_Period_Term = 6308 # Variable c_int
DAQmx_AO_DevScalingCoeff = 6449 # Variable c_int
DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove_Routing = -89145 # Variable c_int
DAQmx_CI_PulseWidth_DigFltr_TimebaseSrc = 8716 # Variable c_int
DAQmx_AI_Coupling = 100 # Variable c_int
DAQmx_Val_Switch_Topology_2530_2_Wire_Quad_16x1_Mux = '2530/2-Wire Quad 16x1 Mux' # Variable STRING
DAQmx_Val_Switch_Topology_1128_1_Wire_64x1_Mux = '1128/1-Wire 64x1 Mux' # Variable STRING
DAQmxErrorAIMaxNotSpecified = -200695 # Variable c_int
DAQmxWarningPropertyVersionNew = 200024 # Variable c_int
DAQmx_SwitchChan_MaxDCCarryPwr = 1603 # Variable c_int
DAQmxErrorRequestedSignalInversionForRoutingNotPossible_Routing = -89122 # Variable c_int
DAQmxErrorInvalidSubsetLengthBeforeIfElseBlockInScript = -201009 # Variable c_int
DAQmx_AI_Rng_Low = 6166 # Variable c_int
DAQmx_Val_Switch_Topology_1129_2_Wire_16x16_Matrix = '1129/2-Wire 16x16 Matrix' # Variable STRING
DAQmx_CI_Count = 328 # Variable c_int
DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseSrc = 8721 # Variable c_int
DAQmx_Val_Save_Overwrite = 1 # Variable c_int
DAQmx_Val_USBbulk = 12590 # Variable c_int
DAQmx_AnlgEdge_StartTrig_Slope = 5015 # Variable c_int
DAQmxErrorEveryNSampsAcqIntoBufferNotForOutput = -200964 # Variable c_int
DAQmx_Val_Switch_Topology_1193_Quad_4x1_Terminated_Mux = '1193/Quad 4x1 Terminated Mux' # Variable STRING
DAQmx_Exported_CtrOutEvent_OutputTerm = 5911 # Variable c_int
DAQmx_Exported_SyncPulseEvent_OutputTerm = 8764 # Variable c_int
DAQmxErrorRangeSyntaxNumberTooBig = -200605 # Variable c_int
DAQmx_AI_Excit_VoltageOrCurrent = 6134 # Variable c_int
DAQmx_AI_Lowpass_CutoffFreq = 6147 # Variable c_int
DAQmx_DigEdge_RefTrig_Src = 5172 # Variable c_int
DAQmxErrorCantGetPropertyTaskNotRunning = -200973 # Variable c_int
DAQmx_Hshk_StartCond = 8899 # Variable c_int
DAQmxErrorNoChansOfGivenTypeInTask = -200611 # Variable c_int
DAQmxErrorInvalidIdentifierInListFollowingDeviceID = -200047 # Variable c_int
DAQmx_Val_QuarterBridge = 10270 # Variable c_int
DAQmx_AO_Max = 4486 # Variable c_int
DAQmx_DigLvl_PauseTrig_DigFltr_Enable = 8744 # Variable c_int
DAQmxErrorCalibrationFailed = -200157 # Variable c_int
DAQmxErrorInvalidAOChanOrder = -200219 # Variable c_int
DAQmxErrorInvalidCalLowPassCutoffFreq = -200857 # Variable c_int
DAQmxErrorInvalidGainBasedOnMinMax = -200258 # Variable c_int
DAQmxErrorInvalidAIChanOrder = -200618 # Variable c_int
DAQmx_Val_Switch_Topology_2501_2_Wire_4x6_Matrix = '2501/2-Wire 4x6 Matrix' # Variable STRING
DAQmx_Val_RisingSlope = 10280 # Variable c_int
DAQmxErrorPALComponentCircularDependency = -50259 # Variable c_int
DAQmxErrorDigFilterIntervalNotEqualForLines = -200646 # Variable c_int
DAQmx_DO_InvertLines = 4403 # Variable c_int
DAQmxErrorMultipleActivePhysChansNotSupported = -200752 # Variable c_int
DAQmx_Val_OnBrdMemEmpty = 10235 # Variable c_int
DAQmxWarningCOPrevDAQmxWriteSettingsOverwrittenForHWTimedSinglePoint = 200037 # Variable c_int
DAQmxErrorNoPathToDisconnect = -200182 # Variable c_int
DAQmxErrorEEPROMDataInvalid = -200152 # Variable c_int
DAQmx_Val_Switch_Topology_1191_Quad_4x1_Mux = '1191/Quad 4x1 Mux' # Variable STRING
DAQmx_AO_DAC_Offset_ExtSrc = 8788 # Variable c_int
DAQmx_Val_Temp_RTD = 10301 # Variable c_int
DAQmx_AnlgWin_PauseTrig_When = 4980 # Variable c_int
DAQmxErrorAIMinTooSmall = -200578 # Variable c_int
DAQmx_AIConv_Timebase_Src = 4921 # Variable c_int
DAQmxErrorInvalidWaveformLengthBeforeIfElseBlockInScript = -201008 # Variable c_int
DAQmx_AI_Thrmstr_R1 = 4193 # Variable c_int
DAQmx_Val_ActiveLow = 10096 # Variable c_int
DAQmx_SampQuant_SampPerChan = 4880 # Variable c_int
DAQmx_Val_Task_Abort = 6 # Variable c_int
DAQmxErrorSampClkRateUnavailable = -200660 # Variable c_int
DAQmxErrorInvalidExtClockFreqAndDivCombo = -200379 # Variable c_int
DAQmxErrorFREQOUTCannotProduceDesiredFrequency = -200148 # Variable c_int
DAQmxErrorTooManyEventsGenerated = -200992 # Variable c_int
DAQmx_Val_Switch_Topology_1130_4_Wire_64x1_Mux = '1130/4-Wire 64x1 Mux' # Variable STRING
DAQmxErrorWaitUntilDoneDoesNotIndicateDone = -200560 # Variable c_int
DAQmxErrorTEDSIncompatibleSensorAndMeasType = -200756 # Variable c_int
DAQmx_Val_Switch_Topology_2599_2_SPDT = '2599/2-SPDT' # Variable STRING
DAQmx_RealTime_NumOfWarmupIters = 8941 # Variable c_int
DAQmx_AI_RawDataCompressionType = 8920 # Variable c_int
DAQmx_AI_SoundPressure_Units = 5416 # Variable c_int
DAQmxWarningInputTerminationOverloaded = 200004 # Variable c_int
DAQmx_Val_DegC = 10143 # Variable c_int
DAQmxErrorEmptyPhysChanInPowerUpStatesArray = -200626 # Variable c_int
DAQmx_Val_DegF = 10144 # Variable c_int
DAQmxErrorInvalidTerm = -200254 # Variable c_int
DAQmx_Val_DegR = 10145 # Variable c_int
DAQmx_Val_Internal = 10200 # Variable c_int
DAQmx_CI_TwoEdgeSep_Units = 6316 # Variable c_int
DAQmx_SwitchScan_BreakMode = 4679 # Variable c_int
DAQmxErrorPALDeviceNotSupported = -50302 # Variable c_int
DAQmxErrorPALRetryLimitExceeded = -50412 # Variable c_int
DAQmxErrorDACRngLowNotMinusRefValNorZero = -200449 # Variable c_int
DAQmxErrorMasterTbRateMasterTbSrcMismatch = -200307 # Variable c_int
DAQmx_Write_SpaceAvail = 5216 # Variable c_int
DAQmx_SwitchChan_MaxACSwitchCurrent = 1606 # Variable c_int
DAQmx_Val_Strain_Gage = 10300 # Variable c_int
DAQmxErrorVirtualChanDoesNotExist = -200488 # Variable c_int
DAQmxErrorCannotTristateBusyTerm = -200252 # Variable c_int
DAQmx_Val_Switch_Topology_2530_1_Wire_4x32_Matrix = '2530/1-Wire 4x32 Matrix' # Variable STRING
DAQmxErrorPLLBecameUnlocked = -200246 # Variable c_int
DAQmx_AI_Impedance = 98 # Variable c_int
DAQmx_SwitchDev_SwitchChanList = 6375 # Variable c_int
DAQmx_Val_MostRecentSamp = 10428 # Variable c_int
DAQmxErrorInvalidSampAndMasterTimebaseRateCombo = -200173 # Variable c_int
DAQmxErrorFinitePulseTrainNotPossible = -200305 # Variable c_int
DAQmxWarningADCOverloaded = 200005 # Variable c_int
DAQmxErrorInvalidCalConstCalADCAdjustment = -200520 # Variable c_int
DAQmxErrorInvalidSampRateConsiderRIS = -200420 # Variable c_int
DAQmx_Val_Switch_Topology_2566_16_SPDT = '2566/16-SPDT' # Variable STRING
DAQmx_Val_Switch_Topology_1130_4_Wire_Quad_16x1_Mux = '1130/4-Wire Quad 16x1 Mux' # Variable STRING
DAQmx_ChangeDetect_DI_RisingEdgePhysicalChans = 8597 # Variable c_int
DAQmx_Dev_SerialNum = 1586 # Variable c_int
DAQmx_AnlgEdge_StartTrig_Hyst = 5013 # Variable c_int
DAQmx_Val_AHighBHigh = 10040 # Variable c_int
DAQmxErrorGlobalTaskNameAlreadyChanName = -200919 # Variable c_int
DAQmxErrorClearIsLastInstructionOfLoopInScript = -200037 # Variable c_int
DAQmxErrorConnectionNotPermittedOnChanReservedForRouting = -200189 # Variable c_int
DAQmxErrorZeroBasedChanIndexInvalid = -200612 # Variable c_int
DAQmxWarningPALFirmwareFault = 50151 # Variable c_int
DAQmx_AI_ACExcit_SyncEnable = 258 # Variable c_int
DAQmxErrorChanNotInTask = -200486 # Variable c_int
DAQmxErrorDuplicateDeviceIDInListWhenSettling = -200057 # Variable c_int
DAQmxWarningLowpassFilterSettlingTimeExceedsDriverTimeBetween2ADCConversions = 200039 # Variable c_int
DAQmxErrorSelfCalDateTimeNotDAQmx = -200541 # Variable c_int
DAQmx_Val_Switch_Topology_2530_2_Wire_Dual_32x1_Mux = '2530/2-Wire Dual 32x1 Mux' # Variable STRING
DAQmx_CI_Freq_DigFltr_TimebaseSrc = 8681 # Variable c_int
DAQmxErrorNoSyncPulseExtSampClkTimebase = -200762 # Variable c_int
DAQmxErrorValueOutOfRange = -54021 # Variable c_int
DAQmxErrorDeviceDoesNotSupportDMADataXferForNonBufferedAcq = -200734 # Variable c_int
DAQmxWarningPALTransferNotInProgress = 50402 # Variable c_int
DAQmxErrorBufferWithHWTimedSinglePointSampMode = -200690 # Variable c_int
DAQmxErrorWaveformPreviouslyAllocated = -200310 # Variable c_int
DAQmxErrorAnalogWaveformExpected = -200095 # Variable c_int
DAQmx_DigLvl_PauseTrig_Src = 4985 # Variable c_int
DAQmx_Val_Task_Commit = 3 # Variable c_int
DAQmx_AnlgEdge_StartTrig_Src = 5016 # Variable c_int
DAQmx_AI_ResistanceCfg = 6273 # Variable c_int
DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove = -200702 # Variable c_int
DAQmxErrorTaskVersionNew = -200470 # Variable c_int
DAQmx_AI_Rng_High = 6165 # Variable c_int
DAQmxErrorPALSyncTimedOut = -50550 # Variable c_int
DAQmxErrorTrigLineNotFoundSingleDevRoute = -200574 # Variable c_int
DAQmxErrorFullySpecifiedPathInListContainsRange = -200060 # Variable c_int
DAQmxWarningValueNotInSet = 54022 # Variable c_int
DAQmx_Val_Switch_Topology_2575_2_Wire_98x1_Mux = '2575/2-Wire 98x1 Mux' # Variable STRING
DAQmx_CI_Freq_StartingEdge = 1945 # Variable c_int
DAQmxErrorPALMemoryFull = -50352 # Variable c_int
DAQmxErrorDSFFailedToResetStream = -200586 # Variable c_int
DAQmxErrorInvalidActionInControlTask = -200538 # Variable c_int
DAQmxErrorMarkerPositionNotAlignedInScript = -200031 # Variable c_int
DAQmx_Val_None = 10230 # Variable c_int
DAQmxErrorDAQmxSignalEventTypeNotSupportedByChanTypesOrDevicesInTask = -200987 # Variable c_int
DAQmxWarningPALBadWriteMode = 50012 # Variable c_int
DAQmxErrorWriteFailedMultipleCtrsWithFREQOUT = -200844 # Variable c_int
DAQmxErrorPortConfiguredForOutput = -200121 # Variable c_int
DAQmxErrorHWTimedSinglePointAndDataXferNotProgIO = -200996 # Variable c_int
DAQmxWarningPALOSFault = 50202 # Variable c_int
DAQmx_Val_ReferenceTrigger = 12490 # Variable c_int
DAQmx_Write_RegenMode = 5203 # Variable c_int
DAQmx_Val_Switch_Topology_2527_2_Wire_32x1_Mux = '2527/2-Wire 32x1 Mux' # Variable STRING
DAQmxErrorInvalidTimingType = -200300 # Variable c_int
DAQmxErrorBufferNameExpectedInScript = -200026 # Variable c_int
DAQmxErrorConfiguredTEDSInterfaceDevNotDetected = -200958 # Variable c_int
DAQmx_AO_ReglitchEnable = 307 # Variable c_int
DAQmx_SwitchDev_Topology = 6461 # Variable c_int
DAQmx_AI_Strain_Units = 2433 # Variable c_int
DAQmx_Val_SameAsSampTimebase = 10284 # Variable c_int
DAQmxErrorNoChansSpecdForChangeDetect = -200751 # Variable c_int
DAQmxErrorAOMinMaxNotSupportedGivenDACRange = -200872 # Variable c_int
DAQmx_SwitchChan_Impedance = 1601 # Variable c_int
DAQmxErrorEventDelayOutOfRange = -200345 # Variable c_int
DAQmxErrorPALResourceBusy = -50106 # Variable c_int
DAQmxErrorChanDoesNotSupportCompression = -200956 # Variable c_int
DAQmxErrorTrigAIMinAIMax = -200422 # Variable c_int
DAQmxErrorCfgTEDSNotSupportedOnRT = -200808 # Variable c_int
DAQmx_Val_Low = 10214 # Variable c_int
DAQmx_Scale_Map_ScaledMax = 4649 # Variable c_int
DAQmx_Val_FirstSample = 10424 # Variable c_int
DAQmxErrorExtSampClkSrcNotSpecified = -200303 # Variable c_int
DAQmxErrorPortConfiguredForInput = -200120 # Variable c_int
DAQmx_DigEdge_RefTrig_Edge = 5168 # Variable c_int
DAQmx_Exported_HshkEvent_OutputTerm = 8890 # Variable c_int
DAQmx_Read_AutoStart = 6182 # Variable c_int
DAQmx_ExtCal_LastTemp = 6247 # Variable c_int
DAQmxErrorPALSoftwareFault = -50150 # Variable c_int
DAQmxErrorInterconnectBridgeRouteReserved = -54012 # Variable c_int
DAQmx_Val_ChanForAllLines = 1 # Variable c_int
DAQmx_Val_HandshakeTriggerAsserts = 12552 # Variable c_int
DAQmxErrorExtSampClkRateTooHighForBackplane = -200274 # Variable c_int
DAQmx_CI_SemiPeriod_Units = 6319 # Variable c_int
DAQmx_Read_RelativeTo = 6410 # Variable c_int
DAQmx_Val_PathStatus_Unsupported = 10433 # Variable c_int
DAQmxErrorAIDuringCounter0DMAConflict = -200078 # Variable c_int
DAQmx_DigEdge_ArmStartTrig_DigSync_Enable = 8753 # Variable c_int
DAQmxWarningPotentialGlitchDuringWrite = 200015 # Variable c_int
DAQmx_CI_PulseWidth_DigFltr_MinPulseWidth = 8715 # Variable c_int
DAQmx_AI_Min = 6110 # Variable c_int
DAQmx_Val_Switch_Topology_2569_100_SPST = '2569/100-SPST' # Variable STRING
DAQmx_AI_RVDT_Units = 2167 # Variable c_int
DAQmx_Val_Current = 10134 # Variable c_int
DAQmxErrorIncompatibleSensorOutputAndDeviceInputRanges = -200357 # Variable c_int
DAQmx_Val_N_Type_TC = 10077 # Variable c_int
DAQmxErrorTermWithoutDevInMultiDevTask = -200853 # Variable c_int
DAQmxErrorNoHWTimingWithOnDemand = -200731 # Variable c_int
DAQmx_SampClk_Rate = 4932 # Variable c_int
DAQmx_Val_Task_Unreserve = 5 # Variable c_int
DAQmxErrorRefTrigOutputTermNotSupportedGivenTimingType = -200912 # Variable c_int
DAQmxErrorExtSampClkRateTooLowForClkIn = -200275 # Variable c_int
DAQmxErrorInvalidReadPosDuringRIS = -200419 # Variable c_int
DAQmxErrorUnexpectedIDFollowingRelayNameInList = -200530 # Variable c_int
DAQmxErrorTEDSNotSupported = -200741 # Variable c_int
DAQmxErrorWriteBufferTooSmall = -200234 # Variable c_int
DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod = -200993 # Variable c_int
DAQmx_CI_Encoder_ZInput_DigFltr_MinPulseWidth = 8710 # Variable c_int
DAQmxError3InputPortCombinationGivenSampTimingType653x = -200931 # Variable c_int
DAQmxErrorReadNotCompleteBefore3SampClkEdges = -200843 # Variable c_int
DAQmxErrorRefTrigMasterSessionUnavailable = -200682 # Variable c_int
DAQmx_CI_Encoder_AInput_DigFltr_TimebaseSrc = 8701 # Variable c_int
DAQmxErrorSwitchDifferentSettlingTimeWhenScanning = -200178 # Variable c_int
DAQmx_Val_Once = 10244 # Variable c_int
DAQmxErrorRefTrigDigPatternChanNotTristated = -200888 # Variable c_int
DAQmx_AnlgWin_RefTrig_When = 5159 # Variable c_int
DAQmxErrorCanNotPerformOpWhileTaskRunning = -200479 # Variable c_int
DAQmxErrorRangeWithTooManyObjects = -200592 # Variable c_int
DAQmxErrorDevAlreadyInTask = -200481 # Variable c_int
DAQmx_Val_OnbrdMemCustomThreshold = 12577 # Variable c_int
DAQmxErrorInterruptsInsufficientDataXferMech = -200322 # Variable c_int
DAQmx_AI_Thrmcpl_CJCVal = 4150 # Variable c_int
DAQmxErrorCAPIReservedParamNotZero = -200491 # Variable c_int
DAQmx_Val_CounterOutputEvent = 12494 # Variable c_int
DAQmx_Scale_Descr = 4646 # Variable c_int
DAQmx_Val_Switch_Topology_1190_Quad_4x1_Mux = '1190/Quad 4x1 Mux' # Variable STRING
DAQmxErrorSCXI1126ThreshHystCombination = -200223 # Variable c_int
DAQmx_CI_Encoder_AInput_DigFltr_TimebaseRate = 8702 # Variable c_int
DAQmxErrorOutputBoardClkDCMBecameUnlocked = -200388 # Variable c_int
DAQmxErrorMemMapOnlyForProgIOXfer = -200169 # Variable c_int
DAQmxErrorVirtualTEDSDataFileError = -200827 # Variable c_int
DAQmxErrorInvalidRoutingDestinationTerminalName = -200041 # Variable c_int
DAQmx_Val_ClearExpiration = 1 # Variable c_int
DAQmxErrorTrigWindowAIMinAIMaxCombo = -200423 # Variable c_int
DAQmx_AI_Resistance_Units = 2389 # Variable c_int
DAQmx_AI_Thrmcpl_CJCChan = 4148 # Variable c_int
DAQmx_CI_AngEncoder_PulsesPerRev = 2165 # Variable c_int
DAQmx_CI_CountEdges_DigFltr_Enable = 8694 # Variable c_int
DAQmx_Val_Switch_Topology_2503_1_Wire_48x1_Mux = '2503/1-Wire 48x1 Mux' # Variable STRING
DAQmxWarningPALBadThreadMultitask = 50019 # Variable c_int
DAQmx_Write_CurrWritePos = 5208 # Variable c_int
DAQmxErrorRoutingDestTermPXIStarXNotInSlot2 = -200705 # Variable c_int
DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseRate = 8712 # Variable c_int
DAQmx_Val_Rising = 10280 # Variable c_int
DAQmx_Val_2Wire = 2 # Variable c_int
DAQmxErrorDigFilterAndSyncBothEnabled = -200770 # Variable c_int
DAQmxErrorMinAndMaxNotSymmetric = -200266 # Variable c_int
DAQmx_Val_Task_Verify = 2 # Variable c_int
DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandHWTimedSglPt = -200803 # Variable c_int
DAQmxErrorChanCalTableNumScaledNotEqualNumPrescaledVals = -200938 # Variable c_int
DAQmx_CI_PulseWidth_Units = 2083 # Variable c_int
DAQmxErrorPALFileFault = -50209 # Variable c_int
DAQmxErrorUnableToDetectExtStimulusFreqDuringCal = -200441 # Variable c_int
DAQmxErrorGetPropertyNotInputBufferedTask = -200455 # Variable c_int
DAQmx_AO_DAC_Offset_Val = 8789 # Variable c_int
DAQmx_Val_Switch_Topology_2532_2_Wire_4x64_Matrix = '2532/2-Wire 4x64 Matrix' # Variable STRING
DAQmx_Val_X4 = 10092 # Variable c_int
DAQmx_Val_X1 = 10090 # Variable c_int
DAQmx_Val_X2 = 10091 # Variable c_int
DAQmx_Val_Switch_Topology_1130_2_Wire_Quad_32x1_Mux = '1130/2-Wire Quad 32x1 Mux' # Variable STRING
DAQmxErrorWaitForNextSampClkDetected3OrMoreSampClks = -209803 # Variable c_int
DAQmxErrorPALComponentBusy = -50264 # Variable c_int
DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthByAnotherTask1PerDev = -200806 # Variable c_int
DAQmxWarningChanCalExpired = 200043 # Variable c_int
DAQmxErrorLinesUsedForHandshakingInputNotForStaticInput = -200725 # Variable c_int
DAQmxErrorReadNoInputChansInTask = -200460 # Variable c_int
DAQmxErrorEmptyString = -200467 # Variable c_int
DAQmxErrorOpNotSupportedWhenRefClkSrcNone = -200661 # Variable c_int
DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalNoIrqOnDev = -200920 # Variable c_int
DAQmxErrorInputFIFOOverflow = -200010 # Variable c_int
DAQmx_CI_LinEncoder_InitialPos = 2325 # Variable c_int
DAQmxErrorSamplesNoLongerAvailable = -200279 # Variable c_int
DAQmx_Val_J_Type_TC = 10072 # Variable c_int
DAQmx_Val_Switch_Topology_1160_16_SPDT = '1160/16-SPDT' # Variable STRING
DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseSrc = 8691 # Variable c_int
DAQmxErrorChanCalExpired = -200934 # Variable c_int
DAQmxWarningAIConvRateTooLow = 200018 # Variable c_int
DAQmx_AI_Microphone_Sensitivity = 5430 # Variable c_int
DAQmxErrorSuitableTimebaseNotFoundTimeCombo2 = -200746 # Variable c_int
DAQmx_CI_TwoEdgeSep_SecondEdge = 2100 # Variable c_int
DAQmx_Val_Temp_TC = 10303 # Variable c_int
DAQmxErrorAttrCannotBeRead = -200232 # Variable c_int
DAQmx_Val_Switch_Topology_1129_2_Wire_Quad_4x16_Matrix = '1129/2-Wire Quad 4x16 Matrix' # Variable STRING
DAQmxErrorCannotRegisterDAQmxSoftwareEventWhileTaskIsRunning = -200960 # Variable c_int
DAQmxErrorDAQmxSWEventsWithDifferentCallMechanisms = -200978 # Variable c_int
DAQmxErrorRoutingPathNotAvailable = -200044 # Variable c_int
DAQmxErrorCantMaintainExistingValueAOSync = -200793 # Variable c_int
DAQmx_CO_Pulse_Time_Units = 6358 # Variable c_int
DAQmx_AI_ChanCal_ScaleType = 8860 # Variable c_int
DAQmxErrorDevCannotBeAccessed = -201003 # Variable c_int
DAQmx_CO_CtrTimebase_DigFltr_MinPulseWidth = 8823 # Variable c_int
DAQmx_SampClk_Timebase_ActiveEdge = 6380 # Variable c_int
DAQmxErrorMultiDevsInTask = -200558 # Variable c_int
DAQmxErrorCVIFailedToLoadDAQmxDLL = -200397 # Variable c_int
DAQmxErrorInvalidCfgCalAdjustDirectPathOutputImpedance = -200514 # Variable c_int
DAQmxErrorInvalidDateTimeInEEPROM = -200501 # Variable c_int
DAQmx_AI_RTD_R0 = 4144 # Variable c_int
DAQmx_Val_Switch_Topology_2527_Independent = '2527/Independent' # Variable STRING
DAQmxErrorNoDevMemForWaveform = -200315 # Variable c_int
DAQmxErrorCannotSetPropertyWhenHWTimedSinglePointTaskIsRunning = -200994 # Variable c_int
DAQmx_Val_Toggle = 10307 # Variable c_int
DAQmxErrorSamplesNotYetAvailable = -200284 # Variable c_int
DAQmx_AI_Dither_Enable = 104 # Variable c_int
DAQmxWarningPALBadWriteCount = 50014 # Variable c_int
DAQmx_AnlgWin_StartTrig_Btm = 5122 # Variable c_int
DAQmxErrorTimebaseCalFreqVarianceTooLarge = -200723 # Variable c_int
DAQmxErrorPALValueConflict = -50000 # Variable c_int
DAQmxErrorInvalidDigDataWrite = -200562 # Variable c_int
DAQmx_ChangeDetect_DI_FallingEdgePhysicalChans = 8598 # Variable c_int
DAQmxErrorSwitchNotResetBeforeScan = -200199 # Variable c_int
DAQmx_Val_Cont = 10117 # Variable c_int
DAQmx_Scale_Table_ScaledVals = 4662 # Variable c_int
DAQmxErrorScriptNameSameAsWfmName = -200633 # Variable c_int
DAQmxErrorPALBusResetOccurred = -50800 # Variable c_int
DAQmx_CI_Freq_Div = 327 # Variable c_int
DAQmxErrorPropertyUnavailWhenUsingOnboardMemory = -200297 # Variable c_int
DAQmxErrorCppCantRemoveInvalidEventHandler = -200590 # Variable c_int
DAQmxErrorInvalidCalConstOffsetDACValue = -200517 # Variable c_int
DAQmxErrorInputCfgFailedBecauseWatchdogExpired = -200712 # Variable c_int
DAQmxErrorDigInputOverrun = -200715 # Variable c_int
DAQmx_Exported_RefTrig_OutputTerm = 1424 # Variable c_int
DAQmxErrorPALBadCount = -50008 # Variable c_int
DAQmxErrorPALOSInitializationFault = -50201 # Variable c_int
DAQmx_Val_Table = 10450 # Variable c_int
DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove = -200703 # Variable c_int
DAQmxErrorNoAvailTrigLinesOnDevice = -200227 # Variable c_int
DAQmx_AnlgEdge_RefTrig_Lvl = 5154 # Variable c_int
DAQmxErrorCalFunctionNotSupported = -200445 # Variable c_int
DAQmxErrorMemMapDataXferModeSampTimingCombo = -200260 # Variable c_int
DAQmx_Val_Pt3750 = 12481 # Variable c_int
DAQmxErrorInterpolationRateNotPossible = -200270 # Variable c_int
DAQmx_Exported_AIHoldCmpltEvent_PulsePolarity = 6382 # Variable c_int
DAQmxErrorDuplicateTask = -200089 # Variable c_int
DAQmxErrorReadDataTypeTooSmall = -200789 # Variable c_int
DAQmxErrorAcqStoppedToPreventInputBufferOverwriteOneDataXferMech = -200613 # Variable c_int
DAQmx_Val_Open = 10437 # Variable c_int
DAQmx_DigEdge_StartTrig_DigFltr_MinPulseWidth = 8740 # Variable c_int
DAQmx_Task_Channels = 4723 # Variable c_int
DAQmxErrorPatternMatcherMayBeUsedByOneTrigOnly = -200928 # Variable c_int
DAQmx_Val_Pt3916 = 10069 # Variable c_int
DAQmx_Exported_SampClkTimebase_OutputTerm = 6393 # Variable c_int
DAQmxErrorInvalidAttributeValue = -200077 # Variable c_int
DAQmx_Val_Pt3911 = 12482 # Variable c_int
DAQmxErrorGlobalChanNameAlreadyTaskName = -200918 # Variable c_int
DAQmxErrorInversionNotSupportedByHW_Routing = -89133 # Variable c_int
DAQmx_SwitchDev_PwrDownLatchRelaysAfterSettling = 8923 # Variable c_int
DAQmx_AI_DevScalingCoeff = 6448 # Variable c_int
DAQmx_Read_WaitMode = 8754 # Variable c_int
DAQmx_AI_Excit_DCorAC = 6139 # Variable c_int
DAQmxErrorDigSyncNotAvailableOnTerm = -200773 # Variable c_int
DAQmxWarningLowpassFilterSettlingTimeExceedsUserTimeBetween2ADCConversions = 200038 # Variable c_int
DAQmx_Val_Switch_Topology_1193_Independent = '1193/Independent' # Variable STRING
DAQmx_AIConv_Src = 5378 # Variable c_int
DAQmx_SampTimingType = 4935 # Variable c_int
DAQmxWarningPALDispatcherAlreadyExported = 50500 # Variable c_int
DAQmx_Exported_AdvTrig_OutputTerm = 5701 # Variable c_int
DAQmxWarningPALBadDataSize = 50005 # Variable c_int
DAQmxErrorPALBadWindowType = -50016 # Variable c_int
DAQmxErrorUnsupportedSignalTypeExportSignal = -200375 # Variable c_int
DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandBufSizeZero = -200802 # Variable c_int
DAQmxErrorTimeoutExceeded = -200221 # Variable c_int
DAQmxErrorRoutingDestTermPXIStarInSlot2 = -200701 # Variable c_int
DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunningOrCommitted = -200472 # Variable c_int
DAQmxErrorMStudioPropertyGetWhileTaskNotVerified = -200593 # Variable c_int
DAQmxErrorCounterNoTimebaseEdgesBetweenGates = -200140 # Variable c_int
DAQmxErrorHWTimedSinglePointOddNumChansInAITask = -200820 # Variable c_int
DAQmxErrorRangeWithoutAConnectActionInList = -200052 # Variable c_int
DAQmxErrorPALMessageQueueFull = -50108 # Variable c_int
DAQmx_CI_Encoder_BInputTerm = 8606 # Variable c_int
DAQmx_AnlgLvl_PauseTrig_Hyst = 4968 # Variable c_int
DAQmxErrorCOInvalidTimingSrcDueToSignal = -200801 # Variable c_int
DAQmx_AI_Temp_Units = 4147 # Variable c_int
DAQmxErrorChanDoesNotSupportCJC = -200976 # Variable c_int
DAQmxErrorCustomScaleNameUsed = -200356 # Variable c_int
DAQmxErrorTrigLineNotFoundSingleDevRoute_Routing = -89140 # Variable c_int
DAQmx_PhysicalChan_TEDS_BitStream = 8671 # Variable c_int
DAQmx_Val_Voltage_CustomWithExcitation = 10323 # Variable c_int
DAQmxErrorPALMemoryAlignmentFault = -50351 # Variable c_int
DAQmxErrorAttributeNotSupportedInTaskContext = -200452 # Variable c_int
DAQmxErrorInvalidRefClkRate = -200427 # Variable c_int
DAQmxErrorDeviceDoesNotSupportScanning = -200068 # Variable c_int
DAQmxWarningRateViolatesMaxADCRate = 200012 # Variable c_int
DAQmxErrorWhenAcqCompAndNumSampsPerChanExceedsOnBrdBufSize = -200865 # Variable c_int
DAQmx_Val_CountUp = 10128 # Variable c_int
DAQmxErrorPALResourceAmbiguous = -50107 # Variable c_int
DAQmxErrorDCMLock = -200385 # Variable c_int
DAQmxErrorTwoWaitForTrigsAfterConnectionInScanlist = -200638 # Variable c_int
DAQmx_Val_WriteToPROM = 12539 # Variable c_int
DAQmx_CI_Encoder_AInput_DigSync_Enable = 8703 # Variable c_int
DAQmxErrorMeasCalAdjustMainPathPostAmpGainAndOffset = -200504 # Variable c_int
DAQmx_Val_Switch_Topology_1193_Dual_16x1_Mux = '1193/Dual 16x1 Mux' # Variable STRING
DAQmxErrorCannotSelfCalDuringExtCal = -200522 # Variable c_int
DAQmx_CI_CountEdges_CountDir_DigSync_Enable = 8693 # Variable c_int
DAQmx_Exported_RdyForXferEvent_Lvl_ActiveLvl = 8886 # Variable c_int
DAQmxErrorInvalidSampClkSrc = -200414 # Variable c_int
DAQmx_SampClk_Timebase_Rate = 4867 # Variable c_int
DAQmxErrorCtrMinMax = -200527 # Variable c_int
DAQmxErrorInvalidRangeOfObjectsSyntaxInString = -200498 # Variable c_int
DAQmxErrorMultipleWritesBetweenSampClks = -200748 # Variable c_int
DAQmxErrorCannotGetPropertyWhenTaskNotCommittedOrRunning = -200556 # Variable c_int
DAQmxErrorCantSaveNonPortMultiLineDigChanSoInteractiveEditsAllowed = -200921 # Variable c_int
DAQmxErrorCounterOutputPauseTriggerInvalid = -200144 # Variable c_int
DAQmxErrorLinesUsedForStaticInputNotForHandshakingControl = -200728 # Variable c_int
DAQmx_CI_CtrTimebase_DigFltr_Enable = 8817 # Variable c_int
DAQmxErrorDSFReadyForOutputNotAsserted = -200585 # Variable c_int
DAQmxErrorExpectedConnectOperatorInList = -200062 # Variable c_int
DAQmx_SwitchChan_MaxDCCarryCurrent = 1607 # Variable c_int
DAQmxErrorPALBadReadOffset = -50010 # Variable c_int
DAQmx_CI_TwoEdgeSep_First_DigFltr_MinPulseWidth = 8720 # Variable c_int
DAQmxErrorBracketPairingMismatchInList = -200104 # Variable c_int
DAQmxErrorInconsistentChannelDirections = -200011 # Variable c_int
DAQmxErrorExplanationNotFound = -200235 # Variable c_int
DAQmx_Val_MaintainExistingValue = 12528 # Variable c_int
DAQmx_Read_TotalSampPerChanAcquired = 6442 # Variable c_int
DAQmx_SampClk_DigFltr_MinPulseWidth = 8735 # Variable c_int
DAQmxErrorRoutingSrcTermPXIStarInSlot2_Routing = -89143 # Variable c_int
DAQmx_CI_TwoEdgeSep_First_DigFltr_Enable = 8719 # Variable c_int
DAQmxWarningPALResourceAmbiguous = 50107 # Variable c_int
DAQmxErrorPALReceiverSocketInvalid = -50503 # Variable c_int
DAQmxErrorNoCommonTrigLineForImmedRoute = -200396 # Variable c_int
DAQmx_SwitchChan_MaxACVoltage = 1617 # Variable c_int
DAQmxErrorPALResourceReserved = -50103 # Variable c_int
DAQmx_AI_Bridge_InitialVoltage = 6125 # Variable c_int
DAQmx_AI_ChanCal_HasValidCalInfo = 8855 # Variable c_int
DAQmxErrorRefTrigTypeNotSupportedGivenTimingType = -200907 # Variable c_int
DAQmx_Val_Transferred_From_Buffer = 2 # Variable c_int
DAQmx_CO_Pulse_Freq_Units = 6357 # Variable c_int
DAQmxErrorWhenAcqCompAndNoRefTrig = -200864 # Variable c_int
DAQmx_Val_Task_Start = 0 # Variable c_int
DAQmxErrorCouldNotDownloadFirmwareHWDamaged = -200962 # Variable c_int
DAQmxErrorWriteNumChansMismatch = -200524 # Variable c_int
DAQmxErrorNoAdvTrigForMultiDevScan = -200323 # Variable c_int
DAQmxErrorTooManyChansForAnalogPauseTrig = -200263 # Variable c_int
DAQmx_AI_TEDS_Units = 8672 # Variable c_int
DAQmx_Sys_DevNames = 6459 # Variable c_int
DAQmxErrorCannotPerformOpWhenTaskNotReserved = -200664 # Variable c_int
DAQmx_Val_Switch_Topology_1175_2_Wire_98x1_Mux = '1175/2-Wire 98x1 Mux' # Variable STRING
DAQmxErrorCannotTristateTerm_Routing = -89128 # Variable c_int
DAQmxErrorHWTimedSinglePointAOAndDataXferNotProgIO = -200769 # Variable c_int
DAQmx_Val_GND = 10066 # Variable c_int
DAQmxErrorInvalidTask = -200088 # Variable c_int
DAQmxErrorNoDivisorForExternalSignal = -200130 # Variable c_int
DAQmx_SwitchChan_MaxDCSwitchCurrent = 1605 # Variable c_int
DAQmx_AO_LoadImpedance = 289 # Variable c_int
DAQmxErrorRepeatedAIPhysicalChan = -200620 # Variable c_int
DAQmx_AnlgWin_RefTrig_Coupling = 6231 # Variable c_int
DAQmxErrorDigInputNotSupported = -200647 # Variable c_int
DAQmxErrorSampClkOutputTermIncludesStartTrigSrc = -200954 # Variable c_int
DAQmx_AI_SoundPressure_MaxSoundPressureLvl = 8762 # Variable c_int
DAQmxErrorCantResetExpiredWatchdog = -200644 # Variable c_int
DAQmxErrorInvalidSyntaxForPhysicalChannelRange = -200086 # Variable c_int
DAQmxErrorNonZeroBufferSizeInProgIOXfer = -200172 # Variable c_int
DAQmxErrorCannotWriteAfterStartWithOnboardMemory = -200295 # Variable c_int
DAQmx_Val_QuarterBridgeII = 10272 # Variable c_int
TRUE = 1 # Variable c_long
DAQmx_AdvTrig_Type = 4965 # Variable c_int
DAQmx_PhysicalChan_TEDS_VersionLetter = 8670 # Variable c_int
DAQmxErrorDataSizeMoreThanSizeOfEEPROMOnTEDS = -200825 # Variable c_int
DAQmx_Val_K_Type_TC = 10073 # Variable c_int
DAQmxErrorTEDSLegacyTemplateIDInvalidOrUnsupported = -200766 # Variable c_int
DAQmx_CI_CountEdges_ActiveEdge = 1687 # Variable c_int
DAQmxErrorRepeatedNumberInScaledValues = -200599 # Variable c_int
DAQmx_Exported_AdvTrig_Pulse_WidthUnits = 5703 # Variable c_int
DAQmxErrorInvalidWaitDurationBeforeIfElseBlockInScript = -201011 # Variable c_int
DAQmx_CI_SemiPeriod_Term = 6320 # Variable c_int
DAQmx_AI_LossyLSBRemoval_CompressedSampSize = 8921 # Variable c_int
DAQmxErrorSuppliedCurrentDataOutsideSpecifiedRange = -200076 # Variable c_int
DAQmxErrorSampPerChanNotMultipleOfIncr = -200344 # Variable c_int
DAQmx_Val_Chan = 10113 # Variable c_int
DAQmxErrorRoutingNotSupportedForDevice = -200039 # Variable c_int
DAQmxErrorCOSampModeSampTimingTypeSampClkConflict = -200778 # Variable c_int
DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunning = -200846 # Variable c_int
DAQmx_CI_LinEncoder_Units = 6313 # Variable c_int
DAQmx_Val_Switch_Topology_1130_2_Wire_Octal_16x1_Mux = '1130/2-Wire Octal 16x1 Mux' # Variable STRING
DAQmx_Exported_HshkEvent_Interlocked_DeassertDelay = 8895 # Variable c_int
DAQmx_CI_CountEdges_DigFltr_TimebaseSrc = 8696 # Variable c_int
DAQmxErrorLines4To7ConfiguredForOutput = -200125 # Variable c_int
DAQmx_Val_SampleCompleteEvent = 12530 # Variable c_int
DAQmxErrorStrainGageCalibration = -200380 # Variable c_int
DAQmxWarningPALIrrelevantAttribute = 50001 # Variable c_int
DAQmxErrorOperationOnlyPermittedWhileScanning = -200177 # Variable c_int
DAQmx_CI_Prescaler = 8761 # Variable c_int
DAQmxErrorReversePolynomialCoefNotSpecd = -200325 # Variable c_int
DAQmx_Val_OnBrdMemHalfFullOrLess = 10239 # Variable c_int
DAQmxErrorOnDemandNotSupportedWithHWTimedSinglePoint = -200997 # Variable c_int
DAQmxErrorPALLogicalBufferEmpty = -50406 # Variable c_int
DAQmx_AI_Lowpass_SwitchCap_ExtClkDiv = 6278 # Variable c_int
DAQmx_PhysicalChan_TEDS_VersionNum = 8669 # Variable c_int
DAQmxErrorInternalTimebaseSourceRateCombo = -200134 # Variable c_int
DAQmx_Val_E_Type_TC = 10055 # Variable c_int
DAQmxErrorRoutingDestTermPXIStarInSlot2_Routing = -89144 # Variable c_int
DAQmxErrorRepeatedNumberInPreScaledValues = -200598 # Variable c_int
DAQmx_Val_Pt3928 = 12483 # Variable c_int
DAQmx_Val_PathStatus_AlreadyExists = 10432 # Variable c_int
DAQmxErrorWaitModeValueNotSupportedNonBuffered = -200924 # Variable c_int
DAQmx_Val_Pt3920 = 10053 # Variable c_int
DAQmx_Val_Polynomial = 10449 # Variable c_int
DAQmx_Val_Implicit = 10451 # Variable c_int
DAQmx_Val_T_Type_TC = 10086 # Variable c_int
DAQmxErrorCAPICannotRegisterSyncEventsFromMultipleThreads = -200990 # Variable c_int
DAQmxErrorPrptyGetSpecdActiveChanFailedDueToDifftVals = -200657 # Variable c_int
DAQmxErrorZeroSlopeLinearScale = -200409 # Variable c_int
DAQmx_DigLvl_PauseTrig_DigFltr_MinPulseWidth = 8745 # Variable c_int
DAQmxErrorPALMemoryPageLockFailed = -50353 # Variable c_int
DAQmxErrorNoRefTrigConfigured = -200282 # Variable c_int
DAQmxErrorPALThreadControllerIsNotThreadCreator = -50602 # Variable c_int
DAQmxError3OutputPortCombinationGivenSampTimingType653x = -200932 # Variable c_int
DAQmx_CO_Prescaler = 8813 # Variable c_int
DAQmxErrorAIEveryNSampsEventIntervalNotMultipleOf2 = -200970 # Variable c_int
DAQmxErrorReferenceCurrentInvalid = -200154 # Variable c_int
DAQmx_AI_LVDT_Units = 2320 # Variable c_int
DAQmxErrorLines0To3ConfiguredForInput = -200122 # Variable c_int
DAQmx_Val_DMA = 10054 # Variable c_int
DAQmx_DigPattern_RefTrig_When = 5176 # Variable c_int
DAQmxErrorCalChanReversePolyCoefNotSpecd = -200941 # Variable c_int
DAQmxErrorTopologyNotSupportedByCfgTermBlock = -200256 # Variable c_int
DAQmx_Val_Accelerometer = 10356 # Variable c_int
DAQmx_CI_Period_Div = 6446 # Variable c_int
DAQmxWarningPALBadReadMode = 50009 # Variable c_int
DAQmx_DO_DataXferMech = 8806 # Variable c_int
DAQmxErrorPALComponentTooOld = -50252 # Variable c_int
DAQmx_Write_SleepTime = 8882 # Variable c_int
DAQmx_AIConv_TimebaseDiv = 4917 # Variable c_int
DAQmxErrorCOReadyForNewValNotSupportedWithOnDemand = -200999 # Variable c_int
DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2_Routing = -89149 # Variable c_int
DAQmxErrorDevNotInTask = -200482 # Variable c_int
DAQmx_Val_Switch_Topology_2501_1_Wire_48x1_Mux = '2501/1-Wire 48x1 Mux' # Variable STRING
DAQmx_Val_NoChange = 10160 # Variable c_int
DAQmxErrorAIMaxTooLarge = -200579 # Variable c_int
DAQmxErrorPALCalculationOverflow = -50175 # Variable c_int
DAQmx_DigEdge_StartTrig_Src = 5127 # Variable c_int
DAQmx_CI_CtrTimebaseSrc = 323 # Variable c_int
DAQmxErrorDevOnlySupportsSampClkTimingAI = -200757 # Variable c_int
DAQmx_DI_DataXferReqCond = 8804 # Variable c_int
DAQmxErrorPhysicalChanNotSupportedGivenSampTimingType653x = -200897 # Variable c_int
DAQmxErrorDevOnlySupportsSampClkTimingAO = -200758 # Variable c_int
DAQmx_PhysicalChan_TEDS_TemplateIDs = 8847 # Variable c_int
DAQmxErrorInvalidExcitValForScaling = -200318 # Variable c_int
DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2_Routing = -89147 # Variable c_int
DAQmxErrorDisconnectionRequiredInScanlist = -200639 # Variable c_int
DAQmxErrorMultiChanTypesInTask = -200559 # Variable c_int
DAQmxErrorResourceAlreadyReserved = -200022 # Variable c_int
DAQmxErrorNumSampsToWaitNotGreaterThanZeroInScript = -200850 # Variable c_int
DAQmxErrorCannotCalculateNumSampsTaskNotStarted = -200343 # Variable c_int
DAQmxErrorMemMapAndHWTimedSinglePoint = -200995 # Variable c_int
DAQmx_DigEdge_StartTrig_DigFltr_Enable = 8739 # Variable c_int
DAQmxErrorSetupCalNeededBeforeAdjustCal = -201005 # Variable c_int
DAQmxWarningPALResourceNotAvailable = 50101 # Variable c_int
DAQmxErrorInvalidIdentifierInListAtEndOfSwitchAction = -200046 # Variable c_int
DAQmxErrorExternalTimebaseRateNotKnownForDelay = -200149 # Variable c_int
DAQmx_CO_CtrTimebase_DigSync_Enable = 8826 # Variable c_int
DAQmx_Val_SoundPressure_Microphone = 10354 # Variable c_int
DAQmx_CI_CountEdges_Dir = 1686 # Variable c_int
DAQmx_CI_CountEdges_InitialCnt = 1688 # Variable c_int
DAQmxErrorProgIODataXferForBufferedAO = -200767 # Variable c_int
DAQmxErrorPALBadLibrarySpecifier = -50018 # Variable c_int
DAQmxErrorCalChanForwardPolyCoefNotSpecd = -200940 # Variable c_int
DAQmxErrorFREQOUTCannotProduceDesiredFrequency2 = -200736 # Variable c_int
DAQmxErrorTooManyPretrigPlusMinPostTrigSamps = -200213 # Variable c_int
DAQmx_Val_PatternMatches = 10254 # Variable c_int
DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_8x32_Matrix = '2532/1-Wire Dual 8x32 Matrix' # Variable STRING
DAQmxErrorDriverDeviceGUIDNotFound_Routing = -88705 # Variable c_int
DAQmxErrorTooManyPostTrigSampsPerChan = -200575 # Variable c_int
DAQmxErrorDigFilterIntervalAlreadyCfgd = -200645 # Variable c_int
DAQmxErrorAIConvRateTooHigh = -200335 # Variable c_int
DAQmx_AI_RawSampSize = 8922 # Variable c_int
DAQmx_AI_Bridge_ShuntCal_Select = 8661 # Variable c_int
DAQmx_Val_ReservedForRouting = 10441 # Variable c_int
DAQmx_AI_AutoZeroMode = 5984 # Variable c_int
DAQmx_Cal_DevTemp = 8763 # Variable c_int
DAQmx_AO_DAC_Rng_Low = 6189 # Variable c_int
DAQmxErrorCppCantRemoveOtherObjectsEventHandler = -200588 # Variable c_int
DAQmxErrorDigPrptyCannotBeSetPerLine = -200641 # Variable c_int
DAQmx_AnlgLvl_PauseTrig_Src = 4976 # Variable c_int
DAQmxErrorStartTrigTypeNotSupportedGivenTimingType = -200904 # Variable c_int
DAQmx_Sys_NIDAQMajorVersion = 4722 # Variable c_int
DAQmxErrorPhysChanDevNotInTask = -200648 # Variable c_int
DAQmxErrorAOMinMaxNotSupportedDACRangeTooSmall = -200873 # Variable c_int
DAQmx_CI_CtrTimebaseRate = 6322 # Variable c_int
DAQmx_Exported_AdvCmpltEvent_Pulse_Width = 5716 # Variable c_int
DAQmx_Exported_AdvTrig_Pulse_Polarity = 5702 # Variable c_int
DAQmxErrorPXIStarAndClock10Sync = -200885 # Variable c_int
DAQmx_Val_SameAsMasterTimebase = 10282 # Variable c_int
DAQmxWarningPALBadSelector = 50003 # Variable c_int
DAQmxErrorCAPIChanIndexInvalid = -200570 # Variable c_int
DAQmx_DI_DigFltr_MinPulseWidth = 8663 # Variable c_int
DAQmx_Read_DigitalLines_BytesPerChan = 8572 # Variable c_int
DAQmx_CO_Pulse_Ticks_InitialDelay = 664 # Variable c_int
DAQmx_SampQuant_SampMode = 4864 # Variable c_int
DAQmxErrorUnexpectedIdentifierInFullySpecifiedPathInList = -200204 # Variable c_int
DAQmxErrorCounterMaxMinRangeTime = -200138 # Variable c_int
DAQmxErrorAOBufferSizeZeroForSampClkTimingType = -200859 # Variable c_int
DAQmxErrorCIInvalidTimingSrcForEventCntDueToSampMode = -200799 # Variable c_int
DAQmxErrorPALSocketListenerInvalid = -50502 # Variable c_int
DAQmxErrorReadyForTransferOutputTermNotSupportedGivenTimingType = -200913 # Variable c_int
DAQmx_Val_WDTExpiredEvent = 12512 # Variable c_int
DAQmxErrorPALCommunicationsFault = -50401 # Variable c_int
DAQmx_AI_ChanCal_Poly_ReverseCoeff = 8864 # Variable c_int
DAQmxErrorUnexpectedSwitchActionInList = -200065 # Variable c_int
DAQmx_CI_DataXferMech = 512 # Variable c_int
DAQmxErrorVirtualTEDSFileNotFound = -200784 # Variable c_int
DAQmx_AI_Thrmcpl_Type = 4176 # Variable c_int
DAQmx_Sys_Tasks = 4711 # Variable c_int
DAQmxErrorStopTriggerHasNotOccurred = -200008 # Variable c_int
DAQmxErrorNonBufferedAOAndDataXferNotProgIO = -200768 # Variable c_int
DAQmx_AI_CurrentShunt_Resistance = 6131 # Variable c_int
DAQmx_Val_Interlocked = 12549 # Variable c_int
DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherProperty = -200774 # Variable c_int
DAQmx_Val_Switch_Topology_2532_1_Wire_16x32_Matrix = '2532/1-Wire 16x32 Matrix' # Variable STRING
DAQmxErrorSamplesNoLongerWriteable = -200289 # Variable c_int
DAQmxErrorMeasCalAdjustOscillatorPhaseDAC = -200521 # Variable c_int
DAQmx_Read_ChangeDetect_HasOverflowed = 8596 # Variable c_int
DAQmx_Val_Switch_Topology_2527_1_Wire_64x1_Mux = '2527/1-Wire 64x1 Mux' # Variable STRING
DAQmxErrorDeviceNameNotFound_Routing = -88717 # Variable c_int
DAQmxErrorDataXferCustomThresholdNotSpecified = -200943 # Variable c_int
DAQmx_CI_TwoEdgeSep_First_DigSync_Enable = 8723 # Variable c_int
DAQmxErrorSelfCalFailedExtNoiseOrRefVoltageOutOfCal = -200545 # Variable c_int
DAQmx_Cal_UserDefinedInfo_MaxSize = 6428 # Variable c_int
DAQmx_Val_Switch_Topology_1127_4_Wire_16x1_Mux = '1127/4-Wire 16x1 Mux' # Variable STRING
DAQmxErrorTrailingSpaceInString = -200554 # Variable c_int
DAQmxErrorDigitalTerminalSpecifiedMoreThanOnce = -200014 # Variable c_int
DAQmx_AI_ChanCal_Verif_AcqVals = 8866 # Variable c_int
DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalWhenDMA = -200877 # Variable c_int
DAQmx_AI_DataXferCustomThreshold = 8972 # Variable c_int
DAQmxErrorCanNotPerformOpWhenNoDevInTask = -200477 # Variable c_int
DAQmxWarningPLLUnlocked = 200007 # Variable c_int
DAQmxErrorEveryNSampsTransferredFromBufferNotForInput = -200965 # Variable c_int
DAQmx_Buf_Output_BufSize = 6253 # Variable c_int
DAQmxErrorRefTrigDigPatternChanNotInTask = -200889 # Variable c_int
DAQmx_Val_mVoltsPerVoltPerMilliInch = 12505 # Variable c_int
DAQmx_AI_ChanCal_Poly_ForwardCoeff = 8863 # Variable c_int
DAQmxErrorClearTEDSNotSupportedOnRT = -200809 # Variable c_int
DAQmx_Val_Switch_Topology_1194_Quad_4x1_Mux = '1194/Quad 4x1 Mux' # Variable STRING
DAQmxErrorCOWritePulseHighTicksNotSupported = -200688 # Variable c_int
DAQmx_Val_OpenCollector = 12574 # Variable c_int
DAQmx_CO_CtrTimebaseSrc = 825 # Variable c_int
DAQmxErrorPrptyGetSpecdSingleActiveChanFailedDueToDifftVals = -200659 # Variable c_int
DAQmxErrorInvalidCfgCalAdjustMainPreAmpOffset = -200510 # Variable c_int
DAQmxErrorWriteChanTypeMismatch = -200526 # Variable c_int
DAQmxErrorPALFileCloseFault = -50205 # Variable c_int
DAQmxErrorCantConfigureTEDSForChan = -200791 # Variable c_int
DAQmx_CI_CountEdges_DirTerm = 8673 # Variable c_int
DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseSrc = 8746 # Variable c_int
DAQmx_CI_CtrTimebaseActiveEdge = 322 # Variable c_int
DAQmxWarningSampClkRateViolatesSettlingTimeForGen = 200040 # Variable c_int
DAQmxErrorMeasCalAdjustMainPathPreAmpOffset = -200502 # Variable c_int
DAQmxErrorInvalidRefClkSrcGivenSampClkSrc = -200383 # Variable c_int
DAQmx_AO_DAC_Rng_High = 6190 # Variable c_int
DAQmx_CO_Count = 659 # Variable c_int
DAQmx_DO_UseOnlyOnBrdMem = 8805 # Variable c_int
DAQmx_Val_Switch_Topology_2503_4_Wire_12x1_Mux = '2503/4-Wire 12x1 Mux' # Variable STRING
DAQmxErrorDevOnboardMemOverflowDuringHWTimedNonBufferedGen = -200795 # Variable c_int
DAQmxErrorDigFilterMinPulseWidthSetWhenTristateIsFalse = -200733 # Variable c_int
DAQmxWarningPALResourceNotReserved = 50102 # Variable c_int
DAQmx_PersistedTask_AllowInteractiveEditing = 8909 # Variable c_int
DAQmxErrorPALBadWriteOffset = -50013 # Variable c_int
DAQmxErrorCannotConnectChannelToItself = -200187 # Variable c_int
DAQmxErrorInvalidTriggerLineInList = -200048 # Variable c_int
DAQmx_DO_Tristate = 6387 # Variable c_int
DAQmxErrorSamplesCanNotYetBeWritten = -200292 # Variable c_int
DAQmx_Val_Switch_Topology_1175_2_Wire_95x1_Mux = '1175/2-Wire 95x1 Mux' # Variable STRING
DAQmxErrorSelfTestFailed = -200020 # Variable c_int
DAQmx_SwitchChan_MaxACSwitchPwr = 1604 # Variable c_int
DAQmxErrorCantSyncToExtStimulusFreqDuringCal = -200442 # Variable c_int
DAQmx_SelfCal_LastTemp = 6244 # Variable c_int
DAQmx_MasterTimebase_Src = 4931 # Variable c_int
DAQmx_Exported_WatchdogExpiredEvent_OutputTerm = 8618 # Variable c_int
DAQmx_SwitchChan_MaxACCarryCurrent = 1608 # Variable c_int
DAQmxErrorDevCannotProduceMinPulseWidth = -200777 # Variable c_int
DAQmx_ChanType = 6271 # Variable c_int
DAQmx_CI_CtrTimebase_DigSync_Enable = 8821 # Variable c_int
DAQmxWarningSampValCoercedToMax = 200021 # Variable c_int
DAQmxErrorInvalidTrigCouplingExceptForExtTrigChan = -200548 # Variable c_int
DAQmx_DigEdge_StartTrig_Edge = 5124 # Variable c_int
DAQmxErrorMarkerOutsideWaveformInScript = -200029 # Variable c_int
DAQmxErrorAOMinMaxNotSupportedDACRefValTooSmall = -200868 # Variable c_int
DAQmx_HshkTrig_Type = 8887 # Variable c_int
DAQmx_AI_RVDT_Sensitivity = 2307 # Variable c_int
DAQmx_Val_Switch_Topology_2501_4_Wire_12x1_Mux = '2501/4-Wire 12x1 Mux' # Variable STRING
DAQmxErrorUnexpectedEndOfActionsInList = -200196 # Variable c_int
DAQmxWarningRateViolatesSettlingTime = 200011 # Variable c_int
DAQmxErrorDotNetAPINotUnsigned32BitNumber = -200499 # Variable c_int
DAQmx_DO_OutputDriveType = 4407 # Variable c_int
DAQmxErrorACCouplingNotAllowedWith50OhmImpedance = -200411 # Variable c_int
DAQmxErrorInvalidSignalModifier_Routing = -89150 # Variable c_int
DAQmxErrorPALMemoryConfigurationFault = -50350 # Variable c_int
DAQmxErrorDuplicatePhysicalChansNotSupported = -200072 # Variable c_int
DAQmxErrorCantSavePerLineConfigDigChanSoInteractiveEditsAllowed = -200922 # Variable c_int
DAQmx_AI_Thrmcpl_CJCSrc = 4149 # Variable c_int
DAQmx_AI_ResolutionUnits = 5988 # Variable c_int
DAQmxErrorInvalidJumperedAttr = -200259 # Variable c_int
DAQmxErrorPrptyGetSpecdActiveItemFailedDueToDifftValues = -200708 # Variable c_int
DAQmx_Val_ZeroVolts = 12526 # Variable c_int
DAQmxErrorSuppliedVoltageDataOutsideSpecifiedRange = -200075 # Variable c_int
DAQmxErrorReversePolyOrderNotPositive = -200402 # Variable c_int
DAQmxWarningPALFunctionNotFound = 50255 # Variable c_int
DAQmx_AnlgWin_RefTrig_Top = 5161 # Variable c_int
DAQmxErrorExtMasterTimebaseRateNotSpecified = -200304 # Variable c_int
DAQmxErrorPropertyValNotValidTermName = -200354 # Variable c_int
DAQmx_CI_GPS_SyncMethod = 4242 # Variable c_int
DAQmxErrorCounterTimebaseRateNotSpecified = -200143 # Variable c_int
DAQmxErrorExpectedTerminatorInList = -200063 # Variable c_int
DAQmxErrorInvalidSampModeForPositionMeas = -200813 # Variable c_int
DAQmx_Exported_SampClk_Pulse_Polarity = 5732 # Variable c_int
DAQmx_AI_MemMapEnable = 6284 # Variable c_int
DAQmx_Val_AboveLvl = 10093 # Variable c_int
DAQmxErrorInvalidCalGain = -200749 # Variable c_int
DAQmxWarningWriteNotCompleteBeforeSampClk = 209801 # Variable c_int
DAQmxErrorRoutingDestTermPXIChassisNotIdentified = -200699 # Variable c_int
DAQmxErrorIncorrectPassword = -200110 # Variable c_int
DAQmxErrorGenStoppedToPreventIntermediateBufferRegenOfOldSamples = -200291 # Variable c_int
DAQmxErrorWriteFailsBufferSizeAutoConfigured = -200547 # Variable c_int
DAQmx_AI_StrainGage_Cfg = 2434 # Variable c_int
DAQmx_Exported_CtrOutEvent_Pulse_Polarity = 5912 # Variable c_int
DAQmxErrorResourceNotInPool_Routing = -88708 # Variable c_int
DAQmx_Val_AccelUnit_g = 10186 # Variable c_int
DAQmx_Val_CountEdges = 10125 # Variable c_int
DAQmxErrorNoPatternMatcherAvailable = -200382 # Variable c_int
DAQmx_Val_Switch_Topology_1161_8_SPDT = '1161/8-SPDT' # Variable STRING
DAQmxErrorSwitchChanInUse = -200200 # Variable c_int
DAQmxErrorPALDispatcherAlreadyExported = -50500 # Variable c_int
DAQmx_CI_AngEncoder_InitialAngle = 2177 # Variable c_int
DAQmxErrorChanSizeTooBigForU32PortWrite = -200566 # Variable c_int
DAQmxErrorInvalidAIOffsetCalConst = -200717 # Variable c_int
DAQmx_CI_Encoder_AInput_DigFltr_Enable = 8699 # Variable c_int
DAQmxErrorBuiltInCJCSrcNotSupported = -200576 # Variable c_int
DAQmxErrorSignalEventAlreadyRegistered = -200949 # Variable c_int
DAQmxErrorPALBadDataSize = -50005 # Variable c_int
DAQmx_AnlgEdge_RefTrig_Src = 5156 # Variable c_int
DAQmxWarningReadOffsetCoercion = 200019 # Variable c_int
DAQmx_AI_LVDT_SensitivityUnits = 8602 # Variable c_int
DAQmx_Val_TwoPulseCounting = 10313 # Variable c_int
DAQmxErrorUnableToLocateErrorResources = -200500 # Variable c_int
DAQmxErrorPasswordRequired = -200111 # Variable c_int
DAQmxErrorSensorValTooLow = -200536 # Variable c_int
DAQmx_Val_Freq_Voltage = 10181 # Variable c_int
DAQmx_Val_Voltage = 10322 # Variable c_int
DAQmxErrorStartTrigDigPatternChanNotTristated = -200886 # Variable c_int
DAQmxErrorScaledMinEqualMax = -200603 # Variable c_int
DAQmx_Val_InsideWin = 10199 # Variable c_int
DAQmxErrorWaveformWriteOutOfBounds = -200311 # Variable c_int
DAQmxErrorCannotDetectChangesWhenTristateIsFalse = -200730 # Variable c_int
DAQmx_Val_Switch_Topology_1127_2_Wire_4x8_Matrix = '1127/2-Wire 4x8 Matrix' # Variable STRING
DAQmx_Val_LeavingWin = 10208 # Variable c_int
DAQmxErrorTemperatureOutOfRangeForCalibration = -200113 # Variable c_int
DAQmx_Val_LeftJustified = 10209 # Variable c_int
DAQmx_Val_AnlgEdge = 10099 # Variable c_int
DAQmxErrorCalibrationSessionAlreadyOpen = -200108 # Variable c_int
DAQmx_Val_Switch_Topology_1129_2_Wire_4x64_Matrix = '1129/2-Wire 4x64 Matrix' # Variable STRING
DAQmx_DelayFromSampClk_DelayUnits = 4868 # Variable c_int
DAQmxErrorPALFunctionObsolete = -50254 # Variable c_int
DAQmx_Val_Switch_Topology_2501_1_Wire_48x1_Amplified_Mux = '2501/1-Wire 48x1 Amplified Mux' # Variable STRING
DAQmxErrorDifftInternalAIInputSrcs = -200677 # Variable c_int
DAQmx_AI_Accel_Units = 1651 # Variable c_int
DAQmxErrorPALMemoryBlockCheckFailed = -50354 # Variable c_int
DAQmxErrorDeviceIDNotSpecifiedInList = -200055 # Variable c_int
DAQmxWarningPossiblyInvalidCTRSampsInFiniteDMAAcq = 200028 # Variable c_int
DAQmx_Val_GroupByChannel = 0 # Variable c_int
DAQmxErrorPropertyValNotSupportedByHW = -200355 # Variable c_int
DAQmxErrorDifferentPrptyValsNotSupportedOnDev = -200629 # Variable c_int
DAQmx_Exported_RdyForXferEvent_OutputTerm = 8885 # Variable c_int
DAQmxErrorDACAllowConnToGndNotSupportedByDevWhenRefSrcExt = -200974 # Variable c_int
DAQmx_Val_GroupByScanNumber = 1 # Variable c_int
DAQmxErrorAnalogMultiSampWriteNotSupported = -200539 # Variable c_int
DAQmx_Val_AdvCmpltEvent = 12492 # Variable c_int
DAQmxErrorScriptHasInvalidCharacter = -200023 # Variable c_int
DAQmx_Val_10MHzRefClock = 12536 # Variable c_int
DAQmxErrorPALSocketListenerAlreadyRegistered = -50501 # Variable c_int
DAQmxErrorChangeDetectionOutputTermNotSupportedGivenTimingType = -200914 # Variable c_int
DAQmxErrorInvalidSubsetLengthWithinLoopInScript = -200249 # Variable c_int
DAQmxErrorSwitchOperationNotSupported = -200193 # Variable c_int
DAQmxWarningPALResourceNotInitialized = 50104 # Variable c_int
DAQmxErrorActivePhysChanNotSpecdWhenGetting1LinePrpty = -200624 # Variable c_int
DAQmxErrorGetPropertyNotOutputBufferedTask = -200454 # Variable c_int
DAQmx_AO_Gain = 280 # Variable c_int
DAQmxErrorDataVoltageLowAndHighIncompatible = -200902 # Variable c_int
DAQmxErrorNoRegenWhenUsingBrdMem = -200656 # Variable c_int
DAQmxError2OutputPortCombinationGivenSampTimingType653x = -200930 # Variable c_int
DAQmx_Val_Switch_Topology_1130_1_Wire_8x32_Matrix = '1130/1-Wire 8x32 Matrix' # Variable STRING
DAQmxErrorCannotCreateChannelAfterTaskVerified = -200160 # Variable c_int
DAQmx_Val_SampleClock = 12487 # Variable c_int
DAQmxErrorProcedureNameExpectedInScript = -200025 # Variable c_int
DAQmxErrorIncorrectNumChannelsToWrite = -200101 # Variable c_int
DAQmxErrorTrigBusLineNotAvail = -200226 # Variable c_int
DAQmx_AI_Accel_Sensitivity = 1682 # Variable c_int
DAQmxErrorReferenceFrequencyInvalid = -200156 # Variable c_int
DAQmxErrorPrescalerNot1ForInputTerminal = -200841 # Variable c_int
DAQmxErrorTEDSTemplateParametersNotSupported = -200754 # Variable c_int
DAQmxErrorActivePhysChanTooManyLinesSpecdWhenGettingPrpty = -200625 # Variable c_int
DAQmxErrorReversePowerProtectionActivated = -200617 # Variable c_int
DAQmx_Val_Switch_Topology_2593_Independent = '2593/Independent' # Variable STRING
DAQmxErrorParsingTEDSData = -200753 # Variable c_int
DAQmxErrorOnlyFrontEndChanOpsDuringScan = -200377 # Variable c_int
DAQmxErrorMultScanOpsInOneChassis = -200619 # Variable c_int
DAQmxErrorChannelNameGenerationNumberTooBig = -200600 # Variable c_int
DAQmxErrorPreScaledMinEqualMax = -200602 # Variable c_int
DAQmx_Val_Switch_Topology_1130_1_Wire_4x64_Matrix = '1130/1-Wire 4x64 Matrix' # Variable STRING
DAQmx_PauseTrig_Type = 4966 # Variable c_int
DAQmx_SwitchDev_Settled = 4675 # Variable c_int
DAQmx_AnlgWin_PauseTrig_Top = 4982 # Variable c_int
DAQmx_Val_FiniteSamps = 10178 # Variable c_int
DAQmxErrorPALFeatureDisabled = -50265 # Variable c_int
DAQmx_SyncPulse_MinDelayToStart = 8767 # Variable c_int
DAQmx_DelayFromSampClk_Delay = 4887 # Variable c_int
DAQmxErrorZeroForwardPolyScaleCoeffs = -200407 # Variable c_int
DAQmx_Val_LossyLSBRemoval = 12556 # Variable c_int
DAQmxErrorInvalidAIGainCalConst = -200718 # Variable c_int
DAQmxErrorReadAllAvailableDataWithoutBuffer = -200340 # Variable c_int
DAQmx_Val_Switch_Topology_2598_Dual_Transfer = '2598/Dual Transfer' # Variable STRING
DAQmxErrorInterconnectLineReserved = -54010 # Variable c_int
DAQmxErrorChanCalTableScaledValsNotSpecd = -200937 # Variable c_int
DAQmx_RefClk_Src = 4886 # Variable c_int
DAQmx_Hshk_SampleInputDataWhen = 8900 # Variable c_int
DAQmx_Val_Temp_BuiltInSensor = 10311 # Variable c_int
DAQmx_Val_Diff = 10106 # Variable c_int
DAQmx_ArmStartTrig_Type = 5140 # Variable c_int
DAQmx_Val_AnlgLvl = 10101 # Variable c_int
DAQmx_Val_OnDemand = 10390 # Variable c_int
DAQmx_AI_SampAndHold_Enable = 6170 # Variable c_int
DAQmx_PersistedChan_Author = 8912 # Variable c_int
DAQmxErrorNULLPtr = -200604 # Variable c_int
DAQmxWarningRateViolatesMinADCRate = 200035 # Variable c_int
DAQmx_Exported_StartTrig_OutputTerm = 1412 # Variable c_int
DAQmxErrorInvalidCloseAction = -200440 # Variable c_int
DAQmxErrorInvalidRelayName = -200202 # Variable c_int
DAQmxErrorCannotPerformOpWhenTaskNotRunning = -200475 # Variable c_int
DAQmxErrorChangeDetectionChanNotTristated = -200925 # Variable c_int
DAQmxErrorVirtualChanNameUsed = -200171 # Variable c_int
DAQmx_Val_Switch_Topology_1195_Quad_4x1_Mux = '1195/Quad 4x1 Mux' # Variable STRING
DAQmxErrorFailedToEnableHighSpeedInputClock = -200627 # Variable c_int
DAQmx_AO_IdleOutputBehavior = 8768 # Variable c_int
DAQmx_Val_Volts = 10348 # Variable c_int
DAQmxErrorCantSaveChanWithPolyCalScaleAndAllowInteractiveEdit = -200977 # Variable c_int
DAQmx_WatchdogExpirTrig_Type = 8611 # Variable c_int
DAQmxErrorOnboardMemTooSmall = -200341 # Variable c_int
DAQmxErrorPALBadReadMode = -50009 # Variable c_int
DAQmxErrorRouteSrcAndDestSame = -200326 # Variable c_int
DAQmxErrorInvalidCalVoltageForGivenGain = -200750 # Variable c_int
DAQmxErrorExtCalAdjustExtRefVoltageFailed = -200546 # Variable c_int
DAQmxErrorCantUsePort1AloneGivenSampTimingTypeOn653x = -200899 # Variable c_int
DAQmx_Scale_Map_PreScaledMin = 4658 # Variable c_int
DAQmxErrorSyncNoDevSampClkTimebaseOrSyncPulseInPXISlot2 = -200852 # Variable c_int
DAQmx_Val_Switch_Topology_1128_2_Wire_32x1_Mux = '1128/2-Wire 32x1 Mux' # Variable STRING
DAQmx_Val_5Wire = 5 # Variable c_int
DAQmx_Val_Switch_Topology_1128_4_Wire_16x1_Mux = '1128/4-Wire 16x1 Mux' # Variable STRING
DAQmxErrorInternalSampClkNotRisingEdge = -200890 # Variable c_int
DAQmx_Val_Switch_Topology_1130_1_Wire_Quad_64x1_Mux = '1130/1-Wire Quad 64x1 Mux' # Variable STRING
DAQmxErrorPALMessageUnderflow = -50651 # Variable c_int
DAQmxErrorPALBusError = -50413 # Variable c_int
DAQmx_Val_AandB = 12515 # Variable c_int
DAQmxErrorInvalidCharInPattern = -200496 # Variable c_int
DAQmxErrorWaveformInScriptNotInMem = -200028 # Variable c_int
DAQmx_AO_DAC_Ref_Val = 6194 # Variable c_int
DAQmxErrorCOWritePulseLowTicksNotSupported = -200689 # Variable c_int
DAQmx_CI_GPS_SyncSrc = 4243 # Variable c_int
DAQmxErrorRepeatedPhysicalChan = -200371 # Variable c_int
DAQmx_CO_CtrTimebase_DigFltr_TimebaseSrc = 8824 # Variable c_int
DAQmx_Watchdog_HasExpired = 8616 # Variable c_int
DAQmxErrorEveryNSamplesAcqIntoBufferEventNotSupportedByDevice = -200981 # Variable c_int
DAQmx_Val_CountDown = 10124 # Variable c_int
DAQmx_Val_Falling = 10171 # Variable c_int
DAQmxErrorChangeDetectionChanNotInTask = -200926 # Variable c_int
DAQmxErrorLabVIEWInvalidTaskOrChans = -200428 # Variable c_int
DAQmx_Hshk_DelayAfterXfer = 8898 # Variable c_int
DAQmx_Val_AI = 10100 # Variable c_int
DAQmx_PersistedChan_AllowInteractiveEditing = 8913 # Variable c_int
DAQmx_Val_Switch_Topology_2532_1_Wire_8x64_Matrix = '2532/1-Wire 8x64 Matrix' # Variable STRING
DAQmxErrorReferenceResistanceInvalid = -200155 # Variable c_int
DAQmx_Val_Save_AllowInteractiveDeletion = 4 # Variable c_int
DAQmxErrorValueInvalid = -54023 # Variable c_int
DAQmxErrorPALTransferOverread = -50411 # Variable c_int
DAQmx_CO_Pulse_LowTicks = 4465 # Variable c_int
DAQmx_RefTrig_Type = 5145 # Variable c_int
DAQmx_AO_OutputImpedance = 5264 # Variable c_int
DAQmx_CI_LinEncoder_DistPerPulse = 2321 # Variable c_int
DAQmx_Val_Switch_Topology_2565_16_SPST = '2565/16-SPST' # Variable STRING
DAQmx_CO_CtrTimebase_DigFltr_TimebaseRate = 8825 # Variable c_int
DAQmx_Val_AC = 10045 # Variable c_int
DAQmxErrorPALBadWriteMode = -50012 # Variable c_int
DAQmx_Val_WaitForHandshakeTriggerDeassert = 12551 # Variable c_int
DAQmx_PersistedChan_AllowInteractiveDeletion = 8914 # Variable c_int
DAQmx_Val_Hz = 10373 # Variable c_int
DAQmx_Scale_Poly_ForwardCoeff = 4660 # Variable c_int
DAQmx_StartTrig_Delay = 6230 # Variable c_int
DAQmx_AO_Resolution = 6188 # Variable c_int
DAQmx_Val_Amps = 10342 # Variable c_int
DAQmxErrorOddTotalBufferSizeToWrite = -200693 # Variable c_int
DAQmxErrorActionSeparatorRequiredAfterBreakingConnectionInScanlist = -200637 # Variable c_int
DAQmx_Val_B = 12514 # Variable c_int
DAQmx_Val_A = 12513 # Variable c_int
DAQmx_AI_Bridge_ShuntCal_GainAdjust = 6463 # Variable c_int
DAQmx_Val_Switch_Topology_2529_2_Wire_8x16_Matrix = '2529/2-Wire 8x16 Matrix' # Variable STRING
DAQmxErrorInvalidAOGainCalConst = -200720 # Variable c_int
DAQmx_Val_High = 10192 # Variable c_int
DAQmxErrorWriteWhenTaskNotRunningCOTicks = -200876 # Variable c_int
DAQmx_Exported_HshkEvent_Interlocked_AssertedLvl = 8893 # Variable c_int
DAQmx_AI_Excit_UseMultiplexed = 8576 # Variable c_int
DAQmxErrorAOCallWriteBeforeStartForSampClkTimingType = -200858 # Variable c_int
DAQmx_Val_Switch_Topology_1163R_Octal_4x1_Mux = '1163R/Octal 4x1 Mux' # Variable STRING
DAQmxWarningPXIDevTempExceedsMaxOpTemp = 200030 # Variable c_int
DAQmxErrorCouldNotConnectToServer_Routing = -88900 # Variable c_int
DAQmx_Val_Switch_Topology_2532_1_Wire_4x128_Matrix = '2532/1-Wire 4x128 Matrix' # Variable STRING
DAQmxErrorLeadingSpaceInString = -200553 # Variable c_int
DAQmxErrorInvalidRecordNum = -200410 # Variable c_int
DAQmx_Interlocked_HshkTrig_AssertedLvl = 8889 # Variable c_int
DAQmx_AI_ChanCal_OperatorName = 8867 # Variable c_int
DAQmxErrorUnitsNotFromCustomScale = -200447 # Variable c_int
DAQmx_Val_Task_Stop = 1 # Variable c_int
DAQmx_Val_DigPattern = 10398 # Variable c_int
DAQmxErrorTEDSLinearMappingSlopeZero = -200764 # Variable c_int
DAQmxErrorCtrExportSignalNotPossible = -200359 # Variable c_int
DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo = -200136 # Variable c_int
DAQmxErrorAttrCannotBeSet = -200231 # Variable c_int
DAQmx_SampClk_DigFltr_Enable = 8734 # Variable c_int
DAQmxErrorSubsetOutsideWaveformInScript = -200030 # Variable c_int
DAQmx_Val_BreakBeforeMake = 10110 # Variable c_int
DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseSrc = 8751 # Variable c_int
DAQmx_Val_NRSE = 10078 # Variable c_int
DAQmxErrorNoPolyScaleCoeffs = -200404 # Variable c_int
DAQmx_ExtCal_RecommendedInterval = 6248 # Variable c_int
DAQmxErrorPrescalerNot1ForTimebaseSrc = -200840 # Variable c_int
DAQmx_Val_Switch_Topology_2529_2_Wire_Dual_4x16_Matrix = '2529/2-Wire Dual 4x16 Matrix' # Variable STRING
DAQmx_DI_NumLines = 8568 # Variable c_int
DAQmxErrorChansAlreadyConnected = -200184 # Variable c_int
DAQmxErrorDelayFromStartTrigTooLong = -200334 # Variable c_int
DAQmxErrorInvalidCharInDigPatternString = -200901 # Variable c_int
DAQmx_DigEdge_WatchdogExpirTrig_Edge = 8613 # Variable c_int
DAQmx_CI_CtrTimebase_DigFltr_TimebaseSrc = 8819 # Variable c_int
DAQmx_PhysicalChan_TEDS_MfgID = 8666 # Variable c_int
DAQmx_Buf_Input_BufSize = 6252 # Variable c_int
DAQmx_Val_ContSamps = 10123 # Variable c_int
DAQmx_Val_AHighBLow = 10041 # Variable c_int
DAQmx_CI_Freq_Term = 6306 # Variable c_int
DAQmx_Val_DoNotWrite = 12540 # Variable c_int
DAQmxErrorTooManyChans = -200168 # Variable c_int
DAQmxErrorMultiRecWithRIS = -200416 # Variable c_int
DAQmx_CI_Max = 6300 # Variable c_int
DAQmx_Val_Handshake = 10389 # Variable c_int
DAQmx_Val_Switch_Topology_2591_4x1_Mux = '2591/4x1 Mux' # Variable STRING
DAQmx_Val_FullBridge = 10182 # Variable c_int
DAQmxErrorMoreThanOneActiveChannelSpecified = -200097 # Variable c_int
DAQmxErrorPALTransferAborted = -50405 # Variable c_int
DAQmxErrorChanDuplicatedInPath = -200183 # Variable c_int
DAQmx_CO_Pulse_Time_InitialDelay = 6332 # Variable c_int
DAQmx_Val_Switch_Topology_2593_16x1_Mux = '2593/16x1 Mux' # Variable STRING
DAQmx_Val_Switch_Topology_2594_4x1_Mux = '2594/4x1 Mux' # Variable STRING
DAQmx_Val_Switch_Topology_2570_40_SPDT = '2570/40-SPDT' # Variable STRING
DAQmxErrorTaskCannotBeSavedSoInteractiveEditsAllowed = -200883 # Variable c_int
DAQmxErrorDifferentDITristateValsForChansInTask = -200724 # Variable c_int
DAQmxErrorSensorValTooHigh = -200535 # Variable c_int
DAQmxWarningPALBadWindowType = 50016 # Variable c_int
DAQmx_DigPattern_StartTrig_Src = 5136 # Variable c_int
DAQmxErrorPALComponentImageCorrupt = -50257 # Variable c_int
DAQmxErrorTooManyPhysicalChansInList = -200071 # Variable c_int
DAQmx_CI_PulseWidth_StartingEdge = 2085 # Variable c_int
DAQmxErrorGenerateOrFiniteWaitInstructionExpectedBeforeIfElseBlockInScript = -201007 # Variable c_int
DAQmxErrorBufferAndDataXferMode = -200216 # Variable c_int
DAQmx_Val_Sleep = 12547 # Variable c_int
DAQmxErrorFailedToAcquireCalData = -200697 # Variable c_int
DAQmxErrorInconsistentUnitsSpecified = -200212 # Variable c_int
DAQmxErrorSampClkRateDoesntMatchSampClkSrc = -201002 # Variable c_int
DAQmx_Val_Inches = 10379 # Variable c_int
DAQmxSuccess = 0 # Variable c_int
DAQmxErrorInvalidRoutingSourceTerminalName = -200040 # Variable c_int
DAQmx_Exported_20MHzTimebase_OutputTerm = 5719 # Variable c_int
DAQmx_Val_GPS_Timestamp = 10362 # Variable c_int
DAQmx_AI_ForceReadFromChan = 6392 # Variable c_int
DAQmxErrorGenStoppedToPreventRegenOfOldSamples = -200290 # Variable c_int
DAQmxErrorCannotReadWhenAutoStartFalseOnDemandAndTaskNotRunning = -200832 # Variable c_int
DAQmxErrorInvalidInstallation = -200683 # Variable c_int
DAQmxWarningPALOSUnsupported = 50200 # Variable c_int
DAQmx_CI_Min = 6301 # Variable c_int
DAQmx_AnlgEdge_RefTrig_Coupling = 8757 # Variable c_int
DAQmxErrorInputBufferSizeNotEqualSampsPerChanForFiniteSampMode = -200737 # Variable c_int
DAQmx_AnlgEdge_RefTrig_Hyst = 5153 # Variable c_int
DAQmxErrorEventOutputTermIncludesTrigSrc = -200952 # Variable c_int
DAQmxErrorInvalidSubsetLengthInScript = -200032 # Variable c_int
DAQmxErrorExcitationNotSupportedWhenTermCfgDiff = -200817 # Variable c_int
DAQmx_CI_TwoEdgeSep_Second_DigFltr_Enable = 8724 # Variable c_int
DAQmxErrorChanSizeTooBigForU16PortWrite = -200879 # Variable c_int
DAQmx_Val_FallingSlope = 10171 # Variable c_int
DAQmxErrorInvalidCfgCalAdjustMainPathPostAmpGainAndOffset = -200512 # Variable c_int
DAQmxErrorCouldNotReserveRequestedTrigLine_Routing = -89126 # Variable c_int
DAQmx_Val_ResetTimer = 0 # Variable c_int
DAQmxErrorNoChangeDetectOnNonInputDigLineForDev = -200798 # Variable c_int
DAQmx_Val_Switch_Topology_1130_1_Wire_Octal_32x1_Mux = '1130/1-Wire Octal 32x1 Mux' # Variable STRING
DAQmx_DI_Tristate = 6288 # Variable c_int
DAQmxErrorPALDiskFull = -50203 # Variable c_int
DAQmxErrorPhysicalChanDoesNotExist = -200170 # Variable c_int
DAQmx_Val_Switch_Topology_2596_Dual_6x1_Mux = '2596/Dual 6x1 Mux' # Variable STRING
DAQmx_AO_ResolutionUnits = 6187 # Variable c_int
DAQmxErrorOutputBufferEmpty = -200462 # Variable c_int
DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherTask = -200775 # Variable c_int
DAQmxErrorOutputCantStartChangedBufferSize = -200567 # Variable c_int
DAQmxErrorFunctionNotInLibrary = -200091 # Variable c_int
DAQmxErrorPALFileOpenFault = -50204 # Variable c_int
DAQmxErrorCannotUnregisterDAQmxSoftwareEventWhileTaskIsRunning = -200986 # Variable c_int
DAQmxWarningPALComponentInitializationFault = 50258 # Variable c_int
DAQmxErrorNonbufferedReadMoreThanSampsPerChan = -200655 # Variable c_int
DAQmx_Val_Action_Commit = 0 # Variable c_int
DAQmxErrorInvalidExtTrigImpedance = -200426 # Variable c_int
DAQmxErrorResourcesInUseForRoute_Routing = -89137 # Variable c_int
DAQmx_AI_LVDT_Sensitivity = 2361 # Variable c_int
DAQmx_Val_Pascals = 10081 # Variable c_int
DAQmxErrorStartFailedDueToWriteFailure = -200946 # Variable c_int
DAQmxErrorTooManyChansForAnalogRefTrig = -200264 # Variable c_int
DAQmx_CI_DupCountPrevent = 8620 # Variable c_int
DAQmxWarningAISampRateTooLow = 200017 # Variable c_int
DAQmx_CI_TwoEdgeSep_Second_DigSync_Enable = 8728 # Variable c_int
DAQmxErrorStartTrigConflictWithCOHWTimedSinglePt = -200787 # Variable c_int
DAQmxErrorDigOutputOverrun = -200716 # Variable c_int
DAQmx_RealTime_ConvLateErrorsToWarnings = 8942 # Variable c_int
DAQmx_Val_RSE = 10083 # Variable c_int
DAQmxErrorCAPICannotPerformTaskOperationInAsyncCallback = -200968 # Variable c_int
DAQmxWarningPALFeatureNotSupported = 50256 # Variable c_int
DAQmxErrorCannotHandshakeWhenTristateIsFalse = -200729 # Variable c_int
DAQmxErrorFunctionNotSupportedForDeviceTasks = -200092 # Variable c_int
DAQmxErrorTrigWhenOnDemandSampTiming = -200262 # Variable c_int
DAQmxErrorPALBadAddressSpace = -50017 # Variable c_int
DAQmx_Exported_AIConvClk_OutputTerm = 5767 # Variable c_int
DAQmxErrorDACRngHighNotEqualRefVal = -200448 # Variable c_int
DAQmxErrorCJCChanNotSpecd = -200360 # Variable c_int
DAQmx_Val_Switch_Topology_1130_Independent = '1130/Independent' # Variable STRING
DAQmx_Val_ALowBLow = 10043 # Variable c_int
DAQmx_CO_Pulse_HighTicks = 4457 # Variable c_int
DAQmxErrorPLLNotLocked = -201015 # Variable c_int
DAQmxErrorSCXIModuleNotFound = -200073 # Variable c_int
DAQmx_Val_Switch_Topology_2530_2_Wire_4x16_Matrix = '2530/2-Wire 4x16 Matrix' # Variable STRING
DAQmxErrorReadWaitNextSampClkWaitMismatchOne = -200988 # Variable c_int
DAQmxErrorRoutingHardwareBusy = -200043 # Variable c_int
DAQmxErrorTEDSSensorNotDetected = -200709 # Variable c_int
DAQmxErrorInvalidTimingSrcDueToSampTimingType = -200785 # Variable c_int
DAQmxWarningPALPhysicalBufferEmpty = 50408 # Variable c_int
DAQmxWarningPALSyncAbandoned = 50551 # Variable c_int
DAQmxErrorRefTrigDigPatternSizeDoesNotMatchSourceSize = -200895 # Variable c_int
DAQmx_MasterTimebase_Rate = 5269 # Variable c_int
DAQmxErrorIntExcitSrcNotAvailable = -200161 # Variable c_int
DAQmx_Val_mVoltsPerVoltPerDegree = 12507 # Variable c_int
DAQmx_AI_ChanCal_EnableCal = 8856 # Variable c_int
DAQmx_Read_ChannelsToRead = 6179 # Variable c_int
DAQmx_AI_StrainGage_GageFactor = 2452 # Variable c_int
DAQmx_Val_WriteToEEPROM = 12538 # Variable c_int
DAQmxWarningPALBadOffset = 50007 # Variable c_int
DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseRate = 8752 # Variable c_int
DAQmxErrorInvalidTerm_Routing = -89129 # Variable c_int
DAQmxErrorLinesAlreadyReservedForOutput = -200597 # Variable c_int
DAQmxErrorCantSetPowerupStateOnDigInChan = -200650 # Variable c_int
DAQmx_CI_TwoEdgeSep_FirstTerm = 6317 # Variable c_int
DAQmxErrorMinNotLessThanMax = -200082 # Variable c_int
DAQmx_CI_TwoEdgeSep_Second_DigFltr_MinPulseWidth = 8725 # Variable c_int
DAQmxErrorPALBadOffset = -50007 # Variable c_int
DAQmxErrorInvalidTopology = -200198 # Variable c_int
DAQmxErrorCAPINoExtendedErrorInfoAvailable = -200399 # Variable c_int
DAQmx_Val_Switch_Topology_2593_Dual_4x1_Terminated_Mux = '2593/Dual 4x1 Terminated Mux' # Variable STRING
DAQmxErrorInvalidOutputVoltageAtSampClkRate = -200392 # Variable c_int
DAQmx_Exported_AdvCmpltEvent_OutputTerm = 5713 # Variable c_int
DAQmx_AI_ACExcit_Freq = 257 # Variable c_int
DAQmxWarningSampClkRateAboveDevSpecs = 200036 # Variable c_int
DAQmxErrorMoreThanOneTerminal = -200098 # Variable c_int
DAQmxErrorDuplicateDeviceName_Routing = -88715 # Variable c_int
DAQmxErrorConnectOperatorInvalidAtPointInList = -200066 # Variable c_int
DAQmx_AnlgEdge_StartTrig_Lvl = 5014 # Variable c_int
DAQmxWarningPALResourceInitialized = 50105 # Variable c_int
DAQmxErrorPhysicalChanNotOnThisConnector = -200851 # Variable c_int
DAQmxErrorAttributeInconsistentAcrossRepeatedPhysicalChannels = -200128 # Variable c_int
DAQmxErrorChanSizeTooBigForU8PortWrite = -200565 # Variable c_int
DAQmx_CI_CtrTimebaseMasterTimebaseDiv = 6323 # Variable c_int
DAQmx_Val_20MHzTimebaseClock = 12486 # Variable c_int
DAQmxErrorSampClkRateTooLowForDivDown = -200272 # Variable c_int
DAQmx_AO_DAC_Ref_ExtSrc = 8786 # Variable c_int
DAQmx_Val_3Wire = 3 # Variable c_int
DAQmx_Val_ActiveDrive = 12573 # Variable c_int
DAQmx_Val_Ticks = 10304 # Variable c_int
DAQmxErrorIntegerExpectedInScript = -200247 # Variable c_int
DAQmxErrorCOWritePulseLowTimeOutOfRange = -200687 # Variable c_int
DAQmx_SampClk_Timebase_MasterTimebaseDiv = 4869 # Variable c_int
DAQmxErrorSuitableTimebaseNotFoundTimeCombo = -200137 # Variable c_int
DAQmxErrorCJCChanAlreadyUsed = -200352 # Variable c_int
DAQmxErrorChanAlreadyInTask = -200489 # Variable c_int
DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthBySameTask1PerDev = -200807 # Variable c_int
DAQmxErrorPropertyNotSupportedForScaleType = -200601 # Variable c_int
DAQmxWarningPALBadMode = 50006 # Variable c_int
DAQmx_DigEdge_StartTrig_DigFltr_TimebaseSrc = 8741 # Variable c_int
DAQmx_Val_Switch_Topology_2503_2_Wire_Quad_6x1_Mux = '2503/2-Wire Quad 6x1 Mux' # Variable STRING
DAQmxErrorWriteToTEDSFailed = -200836 # Variable c_int
DAQmx_CO_Pulse_LowTime = 6331 # Variable c_int
DAQmxErrorHystTrigLevelAIMax = -200425 # Variable c_int
DAQmx_RefTrig_PretrigSamples = 5189 # Variable c_int
DAQmxErrorPropertyNotSupportedForTimingSrc = -200739 # Variable c_int
DAQmx_Val_Switch_Topology_1193_Dual_8x1_Terminated_Mux = '1193/Dual 8x1 Terminated Mux' # Variable STRING
DAQmxErrorTypeUnknown = -54020 # Variable c_int
DAQmxErrorCounterMaxMinRangeFreq = -200139 # Variable c_int
DAQmx_Val_NoAction = 10227 # Variable c_int
DAQmxErrorTimingSrcTaskStartedBeforeTimedLoop = -200740 # Variable c_int
DAQmx_AnlgLvl_PauseTrig_Lvl = 4969 # Variable c_int
DAQmx_Val_Closed = 10438 # Variable c_int
DAQmxErrorPhysicalChansForChangeDetectionAndPatternMatch653x = -200892 # Variable c_int
DAQmxErrorPowerupStateNotSpecdForEntirePort = -200652 # Variable c_int
DAQmxErrorReadNotCompleteBeforeSampClk = -209800 # Variable c_int
DAQmx_Val_Switch_Topology_1193_16x1_Terminated_Mux = '1193/16x1 Terminated Mux' # Variable STRING
DAQmx_Exported_CtrOutEvent_Toggle_IdleState = 6250 # Variable c_int
DAQmxErrorPolyCoeffsInconsistent = -200537 # Variable c_int
DAQmxErrorOperationTimedOut = -200474 # Variable c_int
DAQmxErrorLoadTaskFailsBecauseNoTimingOnDev = -200494 # Variable c_int
DAQmxErrorHardwareNotResponding = -200175 # Variable c_int
DAQmxErrorSCXIModuleIncorrect = -200107 # Variable c_int
DAQmxErrorSampClkDCMLock = -200239 # Variable c_int
DAQmxErrorPartialUseOfPhysicalLinesWithinPortNotSupported653x = -200898 # Variable c_int
DAQmx_Exported_AdvTrig_Pulse_Width = 5704 # Variable c_int
DAQmx_AI_Bridge_ShuntCal_Enable = 148 # Variable c_int
DAQmxErrorDoneEventAlreadyRegistered = -200950 # Variable c_int
DAQmxErrorPortConfiguredForStaticDigitalOps = -200119 # Variable c_int
DAQmx_StartTrig_Retriggerable = 6415 # Variable c_int
DAQmx_Val_Switch_Topology_2532_1_Wire_Sixteen_2x16_Matrix = '2532/1-Wire Sixteen 2x16 Matrix' # Variable STRING
DAQmx_Watchdog_Timeout = 8617 # Variable c_int
DAQmxErrorInvalidNumCalADCReadsToAverage = -200515 # Variable c_int
DAQmxWarningPALTransferAborted = 50405 # Variable c_int
DAQmxErrorInvalidRoutingSourceTerminalName_Routing = -89120 # Variable c_int
DAQmxErrorReferenceVoltageInvalid = -200153 # Variable c_int
DAQmxErrorCounterOverflow = -200141 # Variable c_int
DAQmxErrorLinesUsedForHandshakingControlNotForStaticInput = -200727 # Variable c_int
DAQmxErrorEveryNSamplesEventNotSupportedForNonBufferedTasks = -200848 # Variable c_int
DAQmxErrorClearIsLastInstructionInIfElseBlockInScript = -201012 # Variable c_int
DAQmxErrorHandshakeTrigTypeNotSupportedGivenTimingType = -200905 # Variable c_int
DAQmxErrorTEDSMinElecValGEMaxElecVal = -200816 # Variable c_int
DAQmxErrorCannotUpdatePulseGenProperty = -200301 # Variable c_int
DAQmxErrorWaitModePropertyNotSupportedNonBuffered = -200923 # Variable c_int
DAQmx_CI_PulseWidth_DigFltr_Enable = 8714 # Variable c_int
DAQmx_Val_Save_AllowInteractiveEditing = 2 # Variable c_int
DAQmx_Val_WhenAcqComplete = 12546 # Variable c_int
DAQmxErrorInvalidCalConstOscillatorFreqDACValue = -200519 # Variable c_int
DAQmx_Val_mVoltsPerVoltPerMillimeter = 12506 # Variable c_int
DAQmxErrorExternalSampClkAndRefClkThruSameTerm = -200276 # Variable c_int
DAQmx_Val_Switch_Topology_1130_1_Wire_256x1_Mux = '1130/1-Wire 256x1 Mux' # Variable STRING
DAQmxErrorResourcesInUseForInversion_Routing = -89134 # Variable c_int
DAQmxErrorPALOSFault = -50202 # Variable c_int
DAQmx_CI_CountEdges_CountDir_DigFltr_MinPulseWidth = 8690 # Variable c_int
DAQmxErrorBufferWithWaitMode = -200691 # Variable c_int
DAQmxErrorPALOSUnsupported = -50200 # Variable c_int
DAQmx_Read_AvailSampPerChan = 4643 # Variable c_int
DAQmx_DigEdge_ArmStartTrig_Edge = 5141 # Variable c_int
DAQmx_AI_Excit_Src = 6132 # Variable c_int
DAQmxErrorPALBadPointer = -50004 # Variable c_int
DAQmxErrorMeasCalAdjustMainPathOutputImpedance = -200506 # Variable c_int
DAQmxErrorResourcesInUseForProperty = -200353 # Variable c_int
DAQmxErrorTriggerPolarityConflict = -200206 # Variable c_int
DAQmx_Val_Switch_Topology_2501_2_Wire_Dual_12x1_Mux = '2501/2-Wire Dual 12x1 Mux' # Variable STRING
DAQmxErrorDigFilterEnableSetWhenTristateIsFalse = -200732 # Variable c_int
DAQmxErrorProductOfAOMaxAndGainTooLarge = -200267 # Variable c_int
DAQmxErrorEveryNSampsEventIntervalZeroNotSupported = -200880 # Variable c_int
DAQmxErrorInterconnectBusNotFound = -54002 # Variable c_int
DAQmx_Val_Switch_Topology_2590_4x1_Mux = '2590/4x1 Mux' # Variable STRING
DAQmx_AI_Excit_ActualVal = 6275 # Variable c_int
DAQmxErrorDeviceRemoved = -200045 # Variable c_int
DAQmx_DigPattern_StartTrig_Pattern = 8582 # Variable c_int
DAQmxErrorDSFReadyForStartClock = -200631 # Variable c_int
DAQmx_AI_ChanCal_Table_PreScaledVals = 8861 # Variable c_int
DAQmxWarningPALTransferInProgress = 50403 # Variable c_int
DAQmxErrorEveryNSampsTransferredFromBufferEventNotSupportedByDevice = -200980 # Variable c_int
DAQmx_Val_BelowLvl = 10107 # Variable c_int
DAQmx_Val_FromCustomScale = 10065 # Variable c_int
DAQmxErrorRuntimeAborting_Routing = -88710 # Variable c_int
DAQmxWarningPALComponentAlreadyLoaded = 50260 # Variable c_int
DAQmx_Val_OnBrdMemMoreThanHalfFull = 10237 # Variable c_int
DAQmx_SampClk_DigFltr_TimebaseSrc = 8736 # Variable c_int
DAQmx_Watchdog_DO_ExpirState = 8615 # Variable c_int
DAQmx_Val_Custom = 10137 # Variable c_int
DAQmx_Val_Switch_Topology_2593_8x1_Terminated_Mux = '2593/8x1 Terminated Mux' # Variable STRING
DAQmxErrorSwitchActionInListSpansMultipleDevices = -200053 # Variable c_int
DAQmxErrorMarkerPosInvalidForLoopInScript = -200248 # Variable c_int
DAQmxErrorDataOverwrittenInDeviceMemory = -200004 # Variable c_int
DAQmxErrorInvalidDelaySampRateBelowPhaseShiftDCMThresh = -200381 # Variable c_int
DAQmx_Val_Interrupts = 10204 # Variable c_int
DAQmxErrorSampClkRateExtSampClkTimebaseRateMismatch = -200786 # Variable c_int
DAQmx_AnlgEdge_StartTrig_Coupling = 8755 # Variable c_int
DAQmxErrorOutputBufferSizeNotMultOfXferSize = -200838 # Variable c_int
DAQmxWarningPALBadAddressClass = 50015 # Variable c_int
DAQmxErrorDifftAIInputSrcInOneChanGroup = -200676 # Variable c_int
DAQmx_Val_OnBrdMemNotEmpty = 10241 # Variable c_int
DAQmx_Val_Degrees = 10146 # Variable c_int
DAQmxErrorPALBadThreadMultitask = -50019 # Variable c_int
DAQmxErrorInvalidNumSampsToWrite = -200622 # Variable c_int
DAQmxWarningRISAcqCompletedSomeBinsNotFilled = 200029 # Variable c_int
DAQmx_Cal_UserDefinedInfo = 6241 # Variable c_int
DAQmxErrorCAPISyncCallbackNotSupportedInLVRT = -200942 # Variable c_int
DAQmxErrorExportSignalPolarityNotSupportedByHW = -200364 # Variable c_int
DAQmxErrorWroteMultiSampsUsingSingleSampWrite = -200673 # Variable c_int
DAQmx_AnlgWin_RefTrig_Btm = 5160 # Variable c_int
DAQmxErrorRefAndPauseTrigConfigured = -200628 # Variable c_int
DAQmxErrorOutputFIFOUnderflow2 = -200621 # Variable c_int
DAQmxErrorForwardPolynomialCoefNotSpecd = -200351 # Variable c_int
DAQmx_Val_Switch_Topology_2530_1_Wire_Dual_64x1_Mux = '2530/1-Wire Dual 64x1 Mux' # Variable STRING
DAQmx_Val_Finite = 10172 # Variable c_int
DAQmx_Val_Freq = 10179 # Variable c_int
DAQmxErrorControlLineConflictOnPortC = -200126 # Variable c_int
DAQmx_Val_Switch_Topology_2597_6x1_Terminated_Mux = '2597/6x1 Terminated Mux' # Variable STRING
DAQmxErrorExtCalNotComplete = -200443 # Variable c_int
DAQmxErrorInputFIFOUnderflow = -200017 # Variable c_int
DAQmxErrorEventPulseWidthOutOfRange = -200346 # Variable c_int
DAQmxErrorNoDevMemForScript = -200317 # Variable c_int
DAQmxErrorActiveChannelNotSpecified = -200093 # Variable c_int
DAQmxErrorAttributeNotSettableWhenTaskIsRunning = -200450 # Variable c_int
DAQmxErrorInvalidWaveformLengthWithinLoopInScript = -200250 # Variable c_int
DAQmxErrorCannotStoreCalConst = -200074 # Variable c_int
DAQmxErrorDisconnectPathNotSameAsExistingPath = -200190 # Variable c_int
DAQmxWarningStoppedBeforeDone = 200010 # Variable c_int
DAQmx_CI_Encoder_ZInputTerm = 8607 # Variable c_int
DAQmxErrorMismatchedInputArraySizes = -200672 # Variable c_int
DAQmx_AI_Excit_UseForScaling = 6140 # Variable c_int
DAQmxErrorSampClockOutputTermNotSupportedGivenTimingType = -200910 # Variable c_int
DAQmxErrorCIInvalidTimingSrcForSampClkDueToSampTimingType = -200800 # Variable c_int
DAQmx_SampClk_TimebaseDiv = 6379 # Variable c_int
DAQmxErrorExtRefClkRateNotSpecified = -200735 # Variable c_int
DAQmxErrorAttemptToEnableLineNotPreviouslyDisabled = -200497 # Variable c_int
DAQmx_Val_Switch_Topology_2503_2_Wire_24x1_Mux = '2503/2-Wire 24x1 Mux' # Variable STRING
DAQmxErrorPALVersionMismatch = -50250 # Variable c_int
DAQmxErrorBufferTooSmallForString = -200228 # Variable c_int
DAQmx_Val_ChannelCurrent = 1 # Variable c_int
DAQmx_Val_TwoEdgeSep = 10267 # Variable c_int
DAQmxErrorSampClkDCMBecameUnlocked = -200240 # Variable c_int
DAQmxErrorChannelSizeTooBigForPortWriteType = -200465 # Variable c_int
DAQmx_Val_HalfBridgeI = 10188 # Variable c_int
DAQmxErrorMStudioNoReversePolyScaleCoeffs = -200782 # Variable c_int
DAQmxErrorScanListCannotBeTimed = -200067 # Variable c_int
DAQmxErrorClkOutPhaseShiftDCMBecameUnlocked = -200389 # Variable c_int
DAQmxErrorChanCalRepeatedNumberInPreScaledVals = -200939 # Variable c_int
DAQmx_Val_Switch_Topology_1175_1_Wire_196x1_Mux = '1175/1-Wire 196x1 Mux' # Variable STRING
DAQmxErrorDataXferRequestConditionNotSpecifiedForCustomThreshold = -200944 # Variable c_int
DAQmxErrorCppDotNetAPINegativeBufferSize = -200591 # Variable c_int
DAQmx_PersistedTask_Author = 8908 # Variable c_int
DAQmxWarningOutputGainTooHighForRFFreq = 200032 # Variable c_int
DAQmx_CO_CtrTimebaseActiveEdge = 833 # Variable c_int
DAQmx_Val_MetersPerSecondSquared = 12470 # Variable c_int
DAQmxErrorPALWaitInterrupted = -50700 # Variable c_int
DAQmx_Val_Switch_Topology_1129_2_Wire_Dual_8x16_Matrix = '1129/2-Wire Dual 8x16 Matrix' # Variable STRING
DAQmxErrorPALFileReadFault = -50207 # Variable c_int
DAQmx_Val_Switch_Topology_2586_10_SPST = '2586/10-SPST' # Variable STRING
DAQmx_Val_Tristate = 10310 # Variable c_int
DAQmx_Val_HighImpedance = 12527 # Variable c_int
DAQmx_Val_BuiltIn = 10200 # Variable c_int
DAQmx_Sys_GlobalChans = 4709 # Variable c_int
DAQmx_AI_Lowpass_SwitchCap_ClkSrc = 6276 # Variable c_int
DAQmxErrorRouteFailedBecauseWatchdogExpired = -200681 # Variable c_int
DAQmxErrorLabVIEWVersionDoesntSupportDAQmxEvents = -201000 # Variable c_int
DAQmxWarningPALBadReadCount = 50011 # Variable c_int
DAQmx_CI_Freq_DigSync_Enable = 8683 # Variable c_int
DAQmxErrorCompressedSampSizeExceedsResolution = -200957 # Variable c_int
DAQmx_Val_LowFreq1Ctr = 10105 # Variable c_int
DAQmxErrorInconsistentAnalogTrigSettings = -200261 # Variable c_int
DAQmx_AI_CurrentShunt_Loc = 6130 # Variable c_int
DAQmxErrorCanNotPerformOpWhenNoChansInTask = -200478 # Variable c_int
DAQmxErrorRefClkRateRefClkSrcMismatch = -200744 # Variable c_int
DAQmx_Val_Switch_Topology_1193_Quad_8x1_Mux = '1193/Quad 8x1 Mux' # Variable STRING
DAQmxErrorPasswordTooLong = -200109 # Variable c_int
DAQmx_Val_DoNotAllowRegen = 10158 # Variable c_int
DAQmx_Val_ActiveHigh = 10095 # Variable c_int
DAQmx_CI_MeasType = 6304 # Variable c_int
DAQmxErrorOffsetTooLarge = -200269 # Variable c_int
DAQmxErrorImmedTrigDuringRISMode = -200418 # Variable c_int
DAQmx_DigEdge_AdvTrig_Src = 4962 # Variable c_int
DAQmx_Read_RawDataWidth = 8570 # Variable c_int
DAQmx_SyncPulse_Src = 8765 # Variable c_int
DAQmxErrorInvalidDTInsideWfmDataType = -200327 # Variable c_int
DAQmxErrorDelayFromSampClkTooLong = -200337 # Variable c_int
DAQmx_AI_Voltage_Units = 4244 # Variable c_int
DAQmxErrorPortReservedForHandshaking = -200118 # Variable c_int
DAQmxErrorCannotReadWhenAutoStartFalseHWTimedSinglePtAndTaskNotRunning = -200833 # Variable c_int
DAQmxErrorAttrCannotBeReset = -200236 # Variable c_int
DAQmxErrorChannelNameNotSpecifiedInList = -200056 # Variable c_int
DAQmxErrorRefTrigWhenContinuous = -200358 # Variable c_int
DAQmx_Val_Switch_Topology_1130_1_Wire_Dual_128x1_Mux = '1130/1-Wire Dual 128x1 Mux' # Variable STRING
DAQmx_PhysicalChan_TEDS_ModelNum = 8667 # Variable c_int
DAQmxErrorInternalTimebaseSourceDivisorCombo = -200135 # Variable c_int
DAQmxWarningMultipleWritesBetweenSampClks = 200033 # Variable c_int
DAQmxErrorCVIFunctionNotFoundInDAQmxDLL = -200398 # Variable c_int
DAQmx_Val_EverySample = 10164 # Variable c_int
DAQmx_CI_Freq_MeasMeth = 324 # Variable c_int
DAQmx_Val_Switch_Topology_2527_1_Wire_Dual_32x1_Mux = '2527/1-Wire Dual 32x1 Mux' # Variable STRING
DAQmxErrorNoCommonTrigLineForRoute_Routing = -89139 # Variable c_int
DAQmx_Val_Switch_Topology_2501_2_Wire_Quad_6x1_Mux = '2501/2-Wire Quad 6x1 Mux' # Variable STRING
DAQmxErrorCalibrationHandleInvalid = -200112 # Variable c_int
DAQmx_SelfCal_Supported = 6240 # Variable c_int
DAQmxErrorRoutingDestTermPXIStarXNotInSlot2_Routing = -89148 # Variable c_int
DAQmxErrorNonBufferedAndDataXferInterrupts = -200845 # Variable c_int
DAQmx_SwitchScan_WaitingForAdv = 6105 # Variable c_int
DAQmxErrorInputSignalSlowerThanMeasTime = -200302 # Variable c_int
DAQmxErrorMemMapEnabledForHWTimedNonBufferedAO = -200796 # Variable c_int
DAQmx_AO_Min = 4487 # Variable c_int
DAQmxErrorEveryNSampsAcqIntoBufferEventAlreadyRegistered = -200966 # Variable c_int
DAQmx_Val_Switch_Topology_2530_Independent = '2530/Independent' # Variable STRING
DAQmx_AO_CustomScaleName = 4488 # Variable c_int
DAQmx_CI_Period_DigFltr_TimebaseSrc = 8686 # Variable c_int
DAQmxErrorInsufficientOnBoardMemForNumRecsAndSamps = -200413 # Variable c_int
DAQmxErrorPALFeatureNotSupported = -50256 # Variable c_int
DAQmx_PersistedTask_AllowInteractiveDeletion = 8910 # Variable c_int
DAQmxErrorMeasCalAdjustOscillatorFrequency = -200508 # Variable c_int
DAQmx_CO_AutoIncrCnt = 661 # Variable c_int
DAQmxErrorCannotSetPropertyWhenTaskRunning = -200557 # Variable c_int
DAQmx_DigEdge_StartTrig_DigSync_Enable = 8743 # Variable c_int
DAQmx_Val_Resistance = 10278 # Variable c_int
DAQmxErrorDelayFromStartTrigTooShort = -200333 # Variable c_int
DAQmx_AO_DAC_Ref_AllowConnToGnd = 6192 # Variable c_int
DAQmxErrorMeasCalAdjustMainPathPreAmpGain = -200503 # Variable c_int
DAQmx_CI_TwoEdgeSep_SecondTerm = 6318 # Variable c_int
DAQmxErrorInternalTimebaseRateDivisorSourceCombo = -200133 # Variable c_int
DAQmxErrorSCXIDevNotUsablePowerTurnedOff = -200835 # Variable c_int
DAQmx_Val_Auto = -1 # Variable c_int
DAQmxErrorF64PrptyValNotUnsignedInt = -200394 # Variable c_int
DAQmxWarningPALBadWriteOffset = 50013 # Variable c_int
DAQmxErrorOutputBufSizeTooSmallToStartGen = -200609 # Variable c_int
DAQmxErrorResourcesInUseForInversion = -200365 # Variable c_int
DAQmx_AI_ChanCal_Verif_RefVals = 8865 # Variable c_int
DAQmxErrorIdentifierTooLongInScript = -200533 # Variable c_int
DAQmx_Scale_PreScaledUnits = 6391 # Variable c_int
DAQmxErrorCollectionDoesNotMatchChanType = -200569 # Variable c_int
DAQmx_Val_Switch_Topology_2532_2_Wire_8x32_Matrix = '2532/2-Wire 8x32 Matrix' # Variable STRING
DAQmxErrorAIInputBufferSizeNotMultOfXferSize = -200763 # Variable c_int
DAQmx_Val_Source = 10439 # Variable c_int
DAQmxErrorCantUseOnlyOnBoardMemWithProgrammedIO = -200819 # Variable c_int
DAQmx_Val_Switch_Topology_1129_2_Wire_8x32_Matrix = '1129/2-Wire 8x32 Matrix' # Variable STRING
DAQmx_DigEdge_WatchdogExpirTrig_Src = 8612 # Variable c_int
DAQmx_CI_SemiPeriod_DigSync_Enable = 8733 # Variable c_int
DAQmxErrorCantExceedRelayDriveLimit = -200671 # Variable c_int
DAQmxErrorSwitchOperationChansSpanMultipleDevsInList = -200596 # Variable c_int
DAQmx_AI_DataXferReqCond = 6283 # Variable c_int
DAQmx_Val_Strain = 10299 # Variable c_int
DAQmxErrorDigitalOutputNotSupported = -200012 # Variable c_int
DAQmxErrorFailedToEnableHighSpeedOutput = -200615 # Variable c_int
DAQmxErrorNeedLabVIEW711PatchToUseDAQmxEvents = -200947 # Variable c_int
DAQmxErrorWatchdogTimeoutOutOfRangeAndNotSpecialVal = -200668 # Variable c_int
DAQmx_Scale_Table_PreScaledVals = 4663 # Variable c_int
DAQmxErrorInconsistentExcit = -200257 # Variable c_int
DAQmxErrorConnectionSeparatorAtEndOfList = -200059 # Variable c_int
DAQmxErrorSampClkTbMasterTbDivNotAppropriateForSampTbSrc = -200309 # Variable c_int
DAQmxErrorCOCannotKeepUpInHWTimedSinglePoint = -209805 # Variable c_int
DAQmx_Val_ExtControlled = 10326 # Variable c_int
DAQmx_AO_DAC_Offset_Src = 8787 # Variable c_int
DAQmx_Val_HighFreq2Ctr = 10157 # Variable c_int
DAQmx_Exported_SampClk_OutputTerm = 5731 # Variable c_int
DAQmx_Val_Switch_Topology_2530_2_Wire_64x1_Mux = '2530/2-Wire 64x1 Mux' # Variable STRING
DAQmx_Val_ChangeDetection = 12504 # Variable c_int
DAQmxErrorNumSampsToWaitNotMultipleOfAlignmentQuantumInScript = -200849 # Variable c_int
DAQmxErrorResourcesInUseForRouteInTask = -200370 # Variable c_int
DAQmxErrorSwitchCannotDriveMultipleTrigLines = -200203 # Variable c_int
DAQmx_Val_Switch_Topology_1169_100_SPST = '1169/100-SPST' # Variable STRING
DAQmx_AI_ChanCal_Table_ScaledVals = 8862 # Variable c_int
DAQmx_CO_CtrTimebase_DigFltr_Enable = 8822 # Variable c_int
DAQmx_SwitchDev_NumSwitchChans = 6376 # Variable c_int
DAQmxErrorPALComponentNotUnloadable = -50262 # Variable c_int
DAQmxErrorCannotProduceMinPulseWidthGivenPropertyValues = -200776 # Variable c_int
DAQmxErrorCantUsePort3AloneGivenSampTimingTypeOn653x = -200900 # Variable c_int
DAQmx_CI_Encoder_ZIndexVal = 2184 # Variable c_int
DAQmxErrorNoMemMapWhenHWTimedSinglePoint = -200679 # Variable c_int
DAQmxErrorCtrHWTimedSinglePointAndDataXferNotProgIO = -200842 # Variable c_int
DAQmxWarningPretrigCoercion = 200020 # Variable c_int
DAQmxErrorOutputBufferUnderwrite = -200166 # Variable c_int
DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove_Routing = -89146 # Variable c_int
DAQmxErrorInvalidAODataWrite = -200561 # Variable c_int
DAQmxErrorInternalAIInputSrcInMultChanGroups = -200675 # Variable c_int
DAQmxWarningWaitForNextSampClkDetectedMissedSampClk = 209802 # Variable c_int
DAQmx_Val_PseudoDiff = 12529 # Variable c_int
DAQmxErrorPowerBudgetExceeded = -200195 # Variable c_int
DAQmxErrorNumLinesMismatchInReadOrWrite = -200463 # Variable c_int
DAQmxErrorWaitForNextSampClkDetectedMissedSampClk = -209802 # Variable c_int
DAQmxErrorTableScaleNumPreScaledAndScaledValsNotEqual = -200350 # Variable c_int
DAQmxErrorSimultaneousAOWhenNotOnDemandTiming = -200831 # Variable c_int
DAQmxErrorCanExportOnlyDigEdgeTrigs = -200896 # Variable c_int
DAQmx_Val_VoltsPerG = 12510 # Variable c_int
DAQmx_Val_SemiPeriod = 10289 # Variable c_int
DAQmx_Write_TotalSampPerChanGenerated = 6443 # Variable c_int
DAQmx_Val_PathStatus_ChannelInUse = 10434 # Variable c_int
DAQmxErrorSamplesWillNeverBeGenerated = -200288 # Variable c_int
DAQmxErrorAOMinMaxNotSupportedGivenDACRangeAndOffsetVal = -200871 # Variable c_int
DAQmx_Val_PathStatus_Available = 10431 # Variable c_int
DAQmxErrorVoltageExcitIncompatibleWith2WireCfg = -200162 # Variable c_int
DAQmx_Exported_HshkEvent_Interlocked_AssertOnStart = 8894 # Variable c_int
DAQmx_AI_RawSampJustification = 80 # Variable c_int
DAQmxErrorLeadingUnderscoreInString = -200555 # Variable c_int
DAQmx_Val_mVoltsPerVoltPerRadian = 12508 # Variable c_int
DAQmxErrorNegativeWriteSampleNumber = -200287 # Variable c_int
DAQmxErrorDataXferCustomThresholdNotDMAXferMethodSpecifiedForDev = -200945 # Variable c_int
DAQmxErrorChangeDetectionRisingAndFallingEdgeChanDontMatch = -200893 # Variable c_int
DAQmx_SampClk_MaxRate = 8904 # Variable c_int
DAQmx_Val_Switch_Topology_2501_2_Wire_24x1_Amplified_Mux = '2501/2-Wire 24x1 Amplified Mux' # Variable STRING
DAQmx_AO_EnhancedImageRejectionEnable = 8769 # Variable c_int
DAQmxErrorStartTrigDelayWithExtSampClk = -200436 # Variable c_int
DAQmx_AI_Bridge_Balance_FinePot = 6388 # Variable c_int
DAQmxWarningPALMemoryAlignmentFault = 50351 # Variable c_int
DAQmx_Val_ChanPerLine = 0 # Variable c_int
DAQmx_PersistedScale_AllowInteractiveDeletion = 8918 # Variable c_int
DAQmxErrorInvalidTrigTypeSendsSWTrig = -200372 # Variable c_int
DAQmxErrorDifftSyncPulseSrcAndSampClkTimebaseSrcDevMultiDevTask = -200854 # Variable c_int
DAQmxErrorTooManyChansForInternalAIInputSrc = -200710 # Variable c_int
DAQmx_CI_CtrTimebase_DigFltr_MinPulseWidth = 8818 # Variable c_int
DAQmxErrorInvalidCfgCalAdjustMainPathPreAmpGain = -200511 # Variable c_int
DAQmx_CI_Encoder_ZIndexPhase = 2185 # Variable c_int
DAQmxErrorChanSizeTooBigForU16PortRead = -200878 # Variable c_int
DAQmx_AI_LeadWireResistance = 6126 # Variable c_int
DAQmx_Val_FirstPretrigSamp = 10427 # Variable c_int
DAQmxErrorInternalClkDCMBecameUnlocked = -200386 # Variable c_int
DAQmx_Read_SleepTime = 8880 # Variable c_int
DAQmx_Val_Switch_Topology_2529_2_Wire_4x32_Matrix = '2529/2-Wire 4x32 Matrix' # Variable STRING
DAQmxErrorStartTrigSrcEqualToSampClkSrc = -200953 # Variable c_int
DAQmxErrorCOReadyForNewValNotSupportedWithHWTimedSinglePoint = -200975 # Variable c_int
DAQmx_RefClk_Rate = 4885 # Variable c_int
DAQmxWarningPALLogicalBufferEmpty = 50406 # Variable c_int
DAQmxErrorCppCantRemoveEventHandlerTwice = -200589 # Variable c_int
DAQmx_CI_CountEdges_CountDir_DigFltr_Enable = 8689 # Variable c_int
DAQmx_Val_Switch_Topology_2576_2_Wire_Sixteen_4x1_Mux = '2576/2-Wire Sixteen 4x1 Mux' # Variable STRING
DAQmxErrorCannotReadPastEndOfRecord = -200614 # Variable c_int
DAQmxErrorTEDSMappingMethodInvalidOrUnsupported = -200765 # Variable c_int
DAQmxErrorRelayNameNotSpecifiedInList = -200531 # Variable c_int
DAQmx_AI_Atten = 6145 # Variable c_int
DAQmx_Val_Meters = 10219 # Variable c_int
DAQmx_Exported_AIHoldCmpltEvent_OutputTerm = 6381 # Variable c_int
DAQmxErrorAIMaxTooSmall = -200580 # Variable c_int
DAQmxErrorLibraryNotPresent = -200090 # Variable c_int
DAQmx_CI_SemiPeriod_DigFltr_TimebaseSrc = 8731 # Variable c_int
DAQmxErrorInconsistentNumSamplesToWrite = -200103 # Variable c_int
DAQmx_Exported_ChangeDetectEvent_Pulse_Polarity = 8963 # Variable c_int
DAQmxErrorCOWriteDutyCycleOutOfRange = -200684 # Variable c_int
DAQmx_AI_Max = 6109 # Variable c_int
DAQmx_Val_Switch_Topology_2568_31_SPST = '2568/31-SPST' # Variable STRING
DAQmx_Val_Pulse_Ticks = 10268 # Variable c_int
DAQmxErrorAOMinMaxNotSupportedDACOffsetValInappropriate = -200870 # Variable c_int
DAQmxError20MhzTimebaseNotSupportedGivenTimingType = -200909 # Variable c_int
DAQmx_Val_AllowRegen = 10097 # Variable c_int
DAQmxErrorCustomScaleDoesNotExist = -200378 # Variable c_int
DAQmxErrorAOPropertiesCauseVoltageOverMax = -200582 # Variable c_int
DAQmx_Write_RelativeTo = 6412 # Variable c_int
DAQmxErrorMaxSoundPressureAndMicSensitivityNotSupportedByDev = -200860 # Variable c_int
DAQmxErrorHystTrigLevelAIMin = -200421 # Variable c_int
DAQmxErrorRoutingPathNotAvailable_Routing = -89124 # Variable c_int
DAQmxErrorDelayFromSampClkWithExtConv = -200435 # Variable c_int
DAQmx_PhysicalChanName = 6389 # Variable c_int
DAQmx_Val_Switch_Topology_2503_2_Wire_4x6_Matrix = '2503/2-Wire 4x6 Matrix' # Variable STRING
DAQmx_CI_PulseWidth_DigSync_Enable = 8718 # Variable c_int
DAQmxErrorWaveformLengthNotMultipleOfIncr = -200400 # Variable c_int
DAQmx_Val_Temp_Thrmstr = 10302 # Variable c_int
DAQmxErrorTrigWhenAOHWTimedSinglePtSampMode = -200812 # Variable c_int
DAQmxErrorInvalidDeviceID = -200220 # Variable c_int
DAQmxErrorDevAbsentOrUnavailable = -200324 # Variable c_int
DAQmx_Val_Switch_Topology_1129_2_Wire_Dual_4x32_Matrix = '1129/2-Wire Dual 4x32 Matrix' # Variable STRING
DAQmx_AI_StrainGage_PoissonRatio = 2456 # Variable c_int
DAQmxErrorDigLinesReservedOrUnavailable = -200587 # Variable c_int
DAQmxErrorPALBadDevice = -50002 # Variable c_int
DAQmxErrorSampleTimingTypeAndDataXferMode = -200218 # Variable c_int
DAQmxWarningReadNotCompleteBeforeSampClk = 209800 # Variable c_int
DAQmxErrorCAPIReservedParamNotNULLNorEmpty = -200493 # Variable c_int
DAQmx_Val_ChannelVoltage = 0 # Variable c_int
DAQmxErrorPALComponentNotFound = -50251 # Variable c_int
DAQmx_StartTrig_DelayUnits = 6344 # Variable c_int
DAQmxErrorAttributeNotQueryableUnlessTaskIsCommitted = -200451 # Variable c_int
DAQmxErrorRouteNotSupportedByHW_Routing = -89136 # Variable c_int
DAQmxErrorCannotHandshakeWithPort0 = -200127 # Variable c_int
DAQmx_Val_PPS = 10080 # Variable c_int
DAQmxErrorNoWatchdogOutputOnPortReservedForInput = -200667 # Variable c_int
DAQmx_Val_B_Type_TC = 10047 # Variable c_int
DAQmx_RealTime_ReportMissedSamp = 8985 # Variable c_int
DAQmx_CI_CountEdges_DigFltr_TimebaseRate = 8697 # Variable c_int
DAQmxErrorPrptyGetImpliedActiveChanFailedDueToDifftVals = -200658 # Variable c_int
DAQmx_CI_Period_DigFltr_Enable = 8684 # Variable c_int
DAQmxErrorInvalidCfgCalAdjustMainPathOutputImpedance = -200513 # Variable c_int
DAQmxErrorCannotReadWhenAutoStartFalseAndTaskNotRunningOrCommitted = -200473 # Variable c_int
DAQmx_Val_DigLvl = 10152 # Variable c_int
DAQmx_AnlgWin_StartTrig_Coupling = 8756 # Variable c_int
DAQmxWarningPALFunctionObsolete = 50254 # Variable c_int
DAQmx_SwitchDev_NumColumns = 6378 # Variable c_int
DAQmxErrorScriptDataUnderflow = -200316 # Variable c_int
DAQmx_SwitchScan_RepeatMode = 4680 # Variable c_int
DAQmx_AO_DAC_Ref_ConnToGnd = 304 # Variable c_int
DAQmxErrorUnexpectedSeparatorInList = -200064 # Variable c_int
DAQmxErrorMultipleRelaysForSingleRelayOp = -200211 # Variable c_int
DAQmx_AnlgWin_StartTrig_Src = 5120 # Variable c_int
DAQmxErrorMStudioNoForwardPolyScaleCoeffsUseCalc = -200780 # Variable c_int
DAQmxErrorPALComponentTooNew = -50253 # Variable c_int
DAQmxErrorAODuringCounter1DMAConflict = -200079 # Variable c_int
DAQmx_Val_SampClkPeriods = 10286 # Variable c_int
DAQmx_DigEdge_ArmStartTrig_Src = 5143 # Variable c_int
DAQmx_AO_UseOnlyOnBrdMem = 6202 # Variable c_int
DAQmx_Buf_Output_OnbrdBufSize = 8971 # Variable c_int
DAQmxErrorTEDSMinPhysValGEMaxPhysVal = -200815 # Variable c_int
DAQmxErrorInvalidAnalogTrigSrc = -200265 # Variable c_int
DAQmxWarningPALTransferOverwritten = 50410 # Variable c_int
DAQmx_Val_Acquired_Into_Buffer = 1 # Variable c_int
DAQmxErrorOutputFIFOUnderflow = -200016 # Variable c_int
DAQmxErrorMarkerPosInvalidBeforeIfElseBlockInScript = -201010 # Variable c_int
DAQmx_Val_Switch_Topology_2527_2_Wire_Dual_16x1_Mux = '2527/2-Wire Dual 16x1 Mux' # Variable STRING
DAQmxErrorDSFStopClock = -200632 # Variable c_int
DAQmx_Val_QuarterBridgeI = 10271 # Variable c_int
DAQmxErrorPALResourceNotAvailable = -50101 # Variable c_int
DAQmx_CO_PulseDone = 6414 # Variable c_int
DAQmx_AI_Bridge_Balance_CoarsePot = 6129 # Variable c_int
DAQmxErrorTrigLineNotFound = -200224 # Variable c_int
DAQmx_Val_WaitForInterrupt = 12523 # Variable c_int
DAQmxErrorCannotOpenTopologyCfgFile = -200328 # Variable c_int
DAQmx_AI_Freq_Hyst = 2068 # Variable c_int
DAQmxErrorCouldNotReserveLinesForSCXIControl = -200158 # Variable c_int
DAQmx_DigPattern_RefTrig_Src = 5175 # Variable c_int
DAQmxErrorInvalidRangeStatementCharInList = -200208 # Variable c_int
DAQmxErrorPALBadAddressClass = -50015 # Variable c_int
DAQmxErrorNoCommonTrigLineForTaskRoute = -200395 # Variable c_int
DAQmxErrorSamplesWillNeverBeAvailable = -200278 # Variable c_int
DAQmxErrorRuntimeAborted_Routing = -88709 # Variable c_int
DAQmxErrorLines4To7ConfiguredForInput = -200124 # Variable c_int
DAQmx_CI_TwoEdgeSep_FirstEdge = 2099 # Variable c_int
DAQmx_Val_Switch_Topology_2501_2_Wire_24x1_Mux = '2501/2-Wire 24x1 Mux' # Variable STRING
DAQmxErrorInvalidAcqTypeForFREQOUT = -200747 # Variable c_int
DAQmxErrorExpectedSeparatorInList = -200061 # Variable c_int
DAQmx_Val_Switch_Topology_1127_1_Wire_64x1_Mux = '1127/1-Wire 64x1 Mux' # Variable STRING
DAQmx_CI_Encoder_ZInput_DigFltr_Enable = 8709 # Variable c_int
DAQmx_AI_Gain = 6168 # Variable c_int
DAQmxErrorFewerThan2PreScaledVals = -200434 # Variable c_int
DAQmxErrorRoutingDestTermPXIChassisNotIdentified_Routing = -89142 # Variable c_int
DAQmxErrorOnlyContinuousScanSupported = -200192 # Variable c_int
DAQmxErrorMStudioInvalidPolyDirection = -200594 # Variable c_int
DAQmx_CI_OutputState = 329 # Variable c_int
DAQmxErrorInvalidCalConstGainDACValue = -200516 # Variable c_int
DAQmx_CI_PulseWidth_Term = 6314 # Variable c_int
DAQmxWarningCAPIStringTruncatedToFitBuffer = 200026 # Variable c_int
DAQmxErrorExtCalFunctionOutsideExtCalSession = -200439 # Variable c_int
DAQmxErrorGlobalChanCannotBeSavedSoInteractiveEditsAllowed = -200884 # Variable c_int
DAQmxErrorExtCalConstsInvalid = -200437 # Variable c_int
DAQmx_Val_ChangeDetectionEvent = 12511 # Variable c_int
DAQmx_AnlgEdge_RefTrig_Slope = 5155 # Variable c_int
DAQmx_DI_DigFltr_Enable = 8662 # Variable c_int
DAQmxWarningCounter0DMADuringAIConflict = 200008 # Variable c_int
DAQmxErrorCODAQmxWriteMultipleChans = -200794 # Variable c_int
DAQmxErrorInvalidAdvanceEventTriggerType = -200070 # Variable c_int
DAQmxErrorIntermediateBufferSizeNotMultipleOfIncr = -200347 # Variable c_int
DAQmx_DigPattern_RefTrig_Pattern = 8583 # Variable c_int
DAQmxErrorWaveformNameTooLong = -200534 # Variable c_int
DAQmxErrorAOEveryNSampsEventIntervalNotMultipleOf2 = -200917 # Variable c_int
DAQmx_AO_Current_Units = 4361 # Variable c_int
DAQmx_Sys_NIDAQMinorVersion = 6435 # Variable c_int
DAQmx_AIConv_ActiveEdge = 6227 # Variable c_int
DAQmxErrorResourcesInUseForProperty_Routing = -89132 # Variable c_int
DAQmx_SampClk_DigSync_Enable = 8738 # Variable c_int
DAQmxErrorSCXI1122ResistanceChanNotSupportedForCfg = -200105 # Variable c_int
DAQmxErrorCannotHaveCJTempWithOtherChans = -200167 # Variable c_int
DAQmxErrorStartTrigDigPatternChanNotInTask = -200887 # Variable c_int
DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2 = -200706 # Variable c_int
DAQmxErrorCannotReadRelativeToRefTrigUntilDone = -200281 # Variable c_int
DAQmxErrorDAQmxCantRetrieveStringDueToUnknownChar = -200810 # Variable c_int
DAQmxErrorClkDoublerDCMLock = -200241 # Variable c_int
DAQmx_CI_Period_Units = 6307 # Variable c_int
DAQmx_CO_RdyForNewVal = 8959 # Variable c_int
DAQmxErrorDigFilterNotAvailableOnTerm = -200772 # Variable c_int
DAQmx_Exported_HshkEvent_Pulse_Polarity = 8896 # Variable c_int
DAQmx_Val_Switch_Topology_1130_2_Wire_4x32_Matrix = '1130/2-Wire 4x32 Matrix' # Variable STRING
DAQmxWarningPALMemoryHeapNotEmpty = 50355 # Variable c_int
DAQmx_Scale_ScaledUnits = 6427 # Variable c_int
DAQmx_Write_WaitMode = 8881 # Variable c_int
DAQmx_CI_Period_MeasMeth = 6444 # Variable c_int
DAQmxErrorZeroReversePolyScaleCoeffs = -200408 # Variable c_int
DAQmx_CI_Timestamp_InitialSeconds = 8884 # Variable c_int
DAQmxErrorDifferentInternalAIInputSources = -200573 # Variable c_int
DAQmxErrorInvalidCalArea = -200438 # Variable c_int
DAQmxErrorDifferentAIInputSrcInOneChanGroup = -200572 # Variable c_int
DAQmxWarningTooManyInterruptsPerSecond = 200014 # Variable c_int
DAQmx_Val_HandshakeTriggerDeasserts = 12553 # Variable c_int
DAQmx_Val_PathStatus_SourceChannelConflict = 10435 # Variable c_int
DAQmxErrorReadBufferTooSmall = -200229 # Variable c_int
DAQmx_Val_Cfg_Default = -1 # Variable c_int
DAQmxErrorLinesUsedForStaticInputNotForHandshakingInput = -200726 # Variable c_int
DAQmx_CO_Pulse_HighTime = 6330 # Variable c_int
DAQmx_CI_Encoder_ZInput_DigSync_Enable = 8713 # Variable c_int
DAQmxErrorRegisterNotWritable = -200393 # Variable c_int
DAQmxErrorStartTrigOutputTermNotSupportedGivenTimingType = -200911 # Variable c_int
DAQmxErrorCannotTristate8255OutputLines = -200116 # Variable c_int
DAQmxErrorNoLastExtCalDateTimeLastExtCalNotDAQmx = -200804 # Variable c_int
DAQmxErrorCAPIReservedParamNotNULL = -200492 # Variable c_int
DAQmx_SwitchChan_Bandwidth = 1600 # Variable c_int
DAQmx_Val_Switch_Topology_2567_Independent = '2567/Independent' # Variable STRING
DAQmxErrorInvalidCalConstOscillatorPhaseDACValue = -200518 # Variable c_int
DAQmxErrorResourceNotFound = -54000 # Variable c_int
DAQmxErrorRouteSrcAndDestSame_Routing = -89131 # Variable c_int
DAQmxErrorCorruptedTEDSMemory = -200742 # Variable c_int
DAQmxErrorCannotScanWithCurrentTopology = -200205 # Variable c_int
DAQmxWarningOutputGainTooLowForRFFreq = 200031 # Variable c_int
DAQmxErrorAOMinMaxNotInDACRange = -200759 # Variable c_int
DAQmxErrorInputFIFOOverflow2 = -200361 # Variable c_int
DAQmx_AO_TermCfg = 6286 # Variable c_int
DAQmx_Val_Action_Cancel = 1 # Variable c_int
DAQmxErrorSampClkSrcInvalidForOutputValidForInput = -200610 # Variable c_int
DAQmxErrorSampleRateNumChansConvertPeriodCombo = -200081 # Variable c_int
DAQmxErrorNumPtsToComputeNotPositive = -200401 # Variable c_int
DAQmx_AI_RVDT_SensitivityUnits = 8603 # Variable c_int
DAQmxErrorStartTrigDigPatternSizeDoesNotMatchSourceSize = -200894 # Variable c_int
DAQmxErrorAIMinNotSpecified = -200694 # Variable c_int
DAQmx_CI_CountEdges_DigFltr_MinPulseWidth = 8695 # Variable c_int
DAQmxErrorPALDMALinkEventMissed = -50450 # Variable c_int
DAQmxErrorBridgeOffsetNullingCalNotSupported = -200696 # Variable c_int
DAQmxWarningCounter1DMADuringAOConflict = 200009 # Variable c_int
DAQmx_Write_DigitalLines_BytesPerChan = 8575 # Variable c_int
DAQmx_Task_Complete = 4724 # Variable c_int
DAQmx_AO_MemMapEnable = 6287 # Variable c_int
DAQmx_CI_PulseWidth_DigFltr_TimebaseRate = 8717 # Variable c_int
DAQmxErrorOffsetTooSmall = -200268 # Variable c_int
DAQmxErrorChannelNotAvailableInParallelMode = -200150 # Variable c_int
DAQmxErrorCannotGetPropertyWhenTaskNotReservedCommittedOrRunning = -200983 # Variable c_int
DAQmx_AIConv_Rate = 6216 # Variable c_int
DAQmxErrorRoutingSrcTermPXIChassisNotIdentified = -200698 # Variable c_int
DAQmx_Val_AdvanceTrigger = 12488 # Variable c_int
DAQmx_Val_Switch_Topology_1127_2_Wire_32x1_Mux = '1127/2-Wire 32x1 Mux' # Variable STRING
DAQmxErrorRoutingSrcTermPXIChassisNotIdentified_Routing = -89141 # Variable c_int
DAQmx_AI_Bridge_NomResistance = 6124 # Variable c_int
DAQmxErrorInvalidCharInString = -200552 # Variable c_int
DAQmxErrorPALMessageOverflow = -50650 # Variable c_int
DAQmxErrorTrigLineNotFound_Routing = -89125 # Variable c_int
DAQmx_Val_AO = 10102 # Variable c_int
DAQmxErrorBuiltInTempSensorNotSupported = -200255 # Variable c_int
DAQmxErrorWatchdogExpirationStateNotEqualForLinesInPort = -200665 # Variable c_int
DAQmx_Val_Switch_Topology_1130_1_Wire_Sixteen_16x1_Mux = '1130/1-Wire Sixteen 16x1 Mux' # Variable STRING
DAQmx_Read_Offset = 6411 # Variable c_int
DAQmxErrorNoTEDSTerminalBlock = -200743 # Variable c_int
DAQmxErrorReadWaitNextSampClkWaitMismatchTwo = -200989 # Variable c_int
DAQmxErrorOverloadedChansExistNotRead = -200362 # Variable c_int
DAQmxErrorPALIrrelevantAttribute = -50001 # Variable c_int
DAQmx_Exported_AdvCmpltEvent_Pulse_Polarity = 5714 # Variable c_int
DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseRate = 8727 # Variable c_int
DAQmxErrorMemMapAndBuffer = -200215 # Variable c_int
DAQmxErrorExtCalTemperatureNotDAQmx = -200544 # Variable c_int
DAQmx_Val_OutsideWin = 10251 # Variable c_int
DAQmx_Val_Load = 10440 # Variable c_int
DAQmxErrorPXIDevTempCausedShutDown = -200623 # Variable c_int
DAQmx_CI_SemiPeriod_DigFltr_Enable = 8729 # Variable c_int
DAQmxErrorPALTransferNotInProgress = -50402 # Variable c_int
DAQmx_AI_Current_Units = 1793 # Variable c_int
DAQmxErrorIntermediateBufferFull = -200495 # Variable c_int
DAQmx_AI_Freq_ThreshVoltage = 2069 # Variable c_int
DAQmxErrorAOSampTimingTypeDifferentIn2Tasks = -200963 # Variable c_int
DAQmx_DigLvl_PauseTrig_DigSync_Enable = 8748 # Variable c_int
DAQmxErrorInvalidNumberSamplesToRead = -200096 # Variable c_int
DAQmxErrorNoDMAChansAvailable = -200251 # Variable c_int
DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_16x16_Matrix = '2532/1-Wire Dual 16x16 Matrix' # Variable STRING
DAQmx_Val_HalfBridgeII = 10189 # Variable c_int
DAQmxErrorWatchdogTimerNotSupported = -200662 # Variable c_int
DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2 = -200704 # Variable c_int
DAQmxErrorMultipleChansNotSupportedDuringCalSetup = -201004 # Variable c_int
DAQmxErrorCantSaveTaskWithoutReplace = -200484 # Variable c_int
DAQmx_Exported_AdvCmpltEvent_Delay = 5975 # Variable c_int
DAQmx_CI_SemiPeriod_StartingEdge = 8958 # Variable c_int
DAQmx_Val_Kelvins = 10325 # Variable c_int
DAQmx_Val_SampClk = 10388 # Variable c_int
DAQmx_Val_Switch_Topology_1128_2_Wire_4x8_Matrix = '1128/2-Wire 4x8 Matrix' # Variable STRING
DAQmx_CI_Freq_MeasTime = 325 # Variable c_int
DAQmxErrorNoChansSpecdForPatternSource = -200927 # Variable c_int
DAQmx_AI_Lowpass_Enable = 6146 # Variable c_int
DAQmxErrorCounterStartPauseTriggerConflict = -200146 # Variable c_int
DAQmxErrorPALFileWriteFault = -50208 # Variable c_int
DAQmxErrorMStudioNoReversePolyScaleCoeffsUseCalc = -200779 # Variable c_int
DAQmxErrorPALFirmwareFault = -50151 # Variable c_int
DAQmxErrorMemMapAndSimultaneousAO = -200830 # Variable c_int
DAQmx_Val_HalfBridge = 10187 # Variable c_int
DAQmxWarningPALBadDevice = 50002 # Variable c_int
DAQmxErrorSampClkTimebaseDCMBecameUnlocked = -200238 # Variable c_int
DAQmxErrorSemicolonDoesNotFollowRangeInList = -200054 # Variable c_int
DAQmx_Val_Position_AngEncoder = 10360 # Variable c_int
DAQmxErrorCannotAddNewDevsAfterTaskConfiguration = -200855 # Variable c_int
DAQmxErrorMeasuredBridgeOffsetTooHigh = -200788 # Variable c_int
DAQmxErrorReversePolyOrderLessThanNumPtsToCompute = -200403 # Variable c_int
DAQmx_Val_SynchronousEventCallbacks = 1 # Variable c_int
DAQmxErrorDataLineReservedForDynamicOutput = -200384 # Variable c_int
DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseSrc = 8711 # Variable c_int
DAQmxErrorPALThreadHasNoThreadObject = -50601 # Variable c_int
DAQmx_Val_DoNotOverwriteUnreadSamps = 10159 # Variable c_int
DAQmxErrorInvalidPhysicalChanForCal = -200444 # Variable c_int
DAQmx_AO_DAC_Ref_Src = 306 # Variable c_int
DAQmxErrorEndpointNotFound = -54001 # Variable c_int
DAQmxErrorSubsetStartOffsetNotAlignedInScript = -200033 # Variable c_int
DAQmx_AO_DataXferMech = 308 # Variable c_int
DAQmx_Exported_AIConvClk_Pulse_Polarity = 5768 # Variable c_int
DAQmxWarningPALBadReadOffset = 50010 # Variable c_int
DAQmxErrorSwitchDevShutDownDueToHighTemp = -200818 # Variable c_int
DAQmx_Val_Task_Reserve = 4 # Variable c_int
DAQmx_AnlgWin_StartTrig_When = 5121 # Variable c_int
DAQmx_AI_Accel_SensitivityUnits = 8604 # Variable c_int
DAQmxErrorChanCalScaleTypeNotSet = -200935 # Variable c_int
DAQmx_CI_Freq_DigFltr_Enable = 8679 # Variable c_int
DAQmxErrorExplicitConnectionExists = -200179 # Variable c_int
DAQmx_Val_Pulse_Freq = 10119 # Variable c_int
DAQmx_Scale_Poly_ReverseCoeff = 4661 # Variable c_int
DAQmxErrorPropertyNotSupportedNotOutputTask = -200456 # Variable c_int
DAQmxErrorAOMinMaxNotSupportedGivenDACRefVal = -200867 # Variable c_int
DAQmxErrorScriptHasInvalidIdentifier = -200024 # Variable c_int
DAQmxErrorResourcesInUseForInversionInTask = -200366 # Variable c_int
DAQmx_AI_Lowpass_SwitchCap_OutClkDiv = 6279 # Variable c_int
DAQmx_CI_TCReached = 336 # Variable c_int
DAQmx_Val_mVoltsPerG = 12509 # Variable c_int
DAQmxErrorActiveChanNotSpecdWhenGetting1LinePrpty = -200642 # Variable c_int
DAQmxErrorMStudioNoPolyScaleCoeffsUseCalc = -200781 # Variable c_int
DAQmxErrorStreamDCMLock = -200313 # Variable c_int
DAQmx_CO_Pulse_Freq_InitialDelay = 665 # Variable c_int
DAQmxErrorAOMinMaxNotSupportedGivenDACRefAndOffsetVal = -200866 # Variable c_int
DAQmxErrorHWTimedSinglePointNotSupportedAI = -200821 # Variable c_int
DAQmx_SwitchChan_MaxACCarryPwr = 1602 # Variable c_int
DAQmxErrorSampsPerChanTooBig = -200306 # Variable c_int
DAQmx_CO_CtrTimebaseMasterTimebaseDiv = 6339 # Variable c_int
DAQmxErrorPALResourceNotReserved = -50102 # Variable c_int
DAQmx_Exported_CtrOutEvent_OutputBehavior = 5967 # Variable c_int
DAQmxErrorChanSizeTooBigForU8PortRead = -200563 # Variable c_int
DAQmxErrorAOMinMaxNotSupportedGivenDACOffsetVal = -200869 # Variable c_int
DAQmxErrorEveryNSampsTransferredFromBufferEventAlreadyRegistered = -200967 # Variable c_int
DAQmxErrorAcqStoppedDriverCantXferDataFastEnough = -200714 # Variable c_int
DAQmxErrorInvalidPhysChanType = -200430 # Variable c_int
DAQmx_Val_4Wire = 4 # Variable c_int
DAQmx_CI_Period_DigSync_Enable = 8688 # Variable c_int
DAQmxErrorAOPropertiesCauseVoltageBelowMin = -200583 # Variable c_int
DAQmx_CI_NumPossiblyInvalidSamps = 6460 # Variable c_int
DAQmx_AI_ChanCal_ApplyCalIfExp = 8857 # Variable c_int
DAQmxErrorPulseActiveAtStart = -200339 # Variable c_int
DAQmx_Exported_DividedSampClkTimebase_OutputTerm = 8609 # Variable c_int
DAQmx_Write_RawDataWidth = 8573 # Variable c_int
DAQmxErrorAttrNotSupported = -200197 # Variable c_int
DAQmx_Val_Switch_Topology_2530_4_Wire_Dual_16x1_Mux = '2530/4-Wire Dual 16x1 Mux' # Variable STRING
DAQmx_Write_Offset = 6413 # Variable c_int
DAQmxErrorInvalidIDInListAtBeginningOfSwitchOperation = -200595 # Variable c_int
DAQmxErrorCOMultipleWritesBetweenSampClks = -200951 # Variable c_int
DAQmx_AnlgWin_RefTrig_Src = 5158 # Variable c_int
DAQmxErrorPALFunctionNotFound = -50255 # Variable c_int
DAQmxErrorPortDoesNotSupportHandshakingDataIO = -200117 # Variable c_int
DAQmxErrorDACRefValNotSet = -200540 # Variable c_int
DAQmx_AI_CustomScaleName = 6112 # Variable c_int
DAQmxErrorTDCNotEnabledDuringRISMode = -200417 # Variable c_int
DAQmxErrorCalPasswordNotSupported = -201006 # Variable c_int
DAQmx_Val_Immediate = 10198 # Variable c_int
DAQmx_StartTrig_Type = 5011 # Variable c_int
DAQmx_OnDemand_SimultaneousAOEnable = 8608 # Variable c_int
DAQmxErrorIdentifierInListTooLong = -200058 # Variable c_int
DAQmxErrorAttributeInconsistentAcrossChannelsOnDevice = -200106 # Variable c_int
DAQmx_Val_Switch_Topology_2575_1_Wire_196x1_Mux = '2575/1-Wire 196x1 Mux' # Variable STRING
DAQmxErrorWriteWhenTaskNotRunningCOFreq = -200875 # Variable c_int
DAQmx_SwitchChan_MaxDCSwitchPwr = 1609 # Variable c_int
DAQmxErrorSampClkRateNotSupportedWithEARDisabled = -201001 # Variable c_int
DAQmxErrorCabledModuleCannotRouteConvClk = -200319 # Variable c_int
DAQmx_CO_Pulse_DutyCyc = 4470 # Variable c_int
DAQmxErrorNoMoreSpace = -200293 # Variable c_int
DAQmxErrorDDCClkOutDCMLock = -200243 # Variable c_int
DAQmxWarningPALComponentNotUnloadable = 50262 # Variable c_int
DAQmxErrorNoPathAvailableBetween2SwitchChans = -200180 # Variable c_int
DAQmx_ChanDescr = 6438 # Variable c_int
DAQmx_CI_Freq_DigFltr_MinPulseWidth = 8680 # Variable c_int
DAQmx_Val_Poll = 12524 # Variable c_int
DAQmxErrorSignalEventsNotSupportedByDevice = -200982 # Variable c_int
DAQmx_Scale_Lin_YIntercept = 4648 # Variable c_int
DAQmxErrorDuplicateDevIDInList = -200209 # Variable c_int
DAQmx_DigEdge_AdvTrig_DigFltr_Enable = 8760 # Variable c_int
DAQmx_CI_Encoder_BInput_DigFltr_TimebaseRate = 8707 # Variable c_int
NULL = 0 # Variable c_long
DAQmx_Interlocked_HshkTrig_Src = 8888 # Variable c_int
DAQmxErrorPALComponentAlreadyInstalled = -50263 # Variable c_int
DAQmxErrorPALBadSelector = -50003 # Variable c_int
DAQmxErrorTimeStampOverwritten = -200009 # Variable c_int
DAQmx_Val_Switch_Topology_2503_2_Wire_Dual_12x1_Mux = '2503/2-Wire Dual 12x1 Mux' # Variable STRING
DAQmx_AnlgLvl_PauseTrig_Coupling = 8758 # Variable c_int
DAQmx_Exported_10MHzRefClk_OutputTerm = 8814 # Variable c_int
DAQmxErrorMultipleCounterInputTask = -200147 # Variable c_int
DAQmxErrorAutoStartWriteNotAllowedEventRegistered = -200985 # Variable c_int
DAQmx_Val_Pt3851 = 10071 # Variable c_int
DAQmx_Val_DigEdge = 10150 # Variable c_int
DAQmxErrorDACRngLowNotEqualToMinusRefVal = -200670 # Variable c_int
DAQmxErrorPALResourceNotInitialized = -50104 # Variable c_int
DAQmxErrorCIOnboardClockNotSupportedAsInputTerm = -200814 # Variable c_int
DAQmxErrorSampClockSourceNotSupportedGivenTimingType = -200908 # Variable c_int
DAQmx_Val_RefTrig = 10426 # Variable c_int
DAQmxErrorInvalidChannel = -200087 # Variable c_int
DAQmxErrorCanExportOnlyOnboardSampClk = -200891 # Variable c_int
DAQmxErrorDifferentRawDataFormats = -200955 # Variable c_int
DAQmx_CO_OutputState = 660 # Variable c_int
DAQmx_Val_FullBridgeII = 10184 # Variable c_int
DAQmx_AI_Freq_Units = 2054 # Variable c_int
DAQmx_Val_Switch_Topology_2530_1_Wire_8x16_Matrix = '2530/1-Wire 8x16 Matrix' # Variable STRING
DAQmx_Val_Switch_Topology_2530_1_Wire_Octal_16x1_Mux = '2530/1-Wire Octal 16x1 Mux' # Variable STRING
DAQmxErrorPowerupStateNotSupported = -200663 # Variable c_int
DAQmxErrorCantSetPropertyTaskNotRunning = -200972 # Variable c_int
DAQmx_CO_Pulse_IdleState = 4464 # Variable c_int
DAQmxErrorPALResourceOwnedBySystem = -50100 # Variable c_int
__all__ = ['DAQmxSetSampClkSrc',
           'DAQmxErrorChannelNotReservedForRouting',
           'DAQmxSetCITwoEdgeSepSecondDigSyncEnable',
           'DAQmx_Val_FullBridgeIII', 'DAQmxTaskControl',
           'DAQmxGetReadSleepTime', 'DAQmx_AI_RTD_A',
           'DAQmxErrorCantSetWatchdogExpirationOnDigInChan',
           'DAQmxGetCIDataXferMech',
           'DAQmxErrorSampToWritePerChanNotMultipleOfIncr',
           'DAQmxResetAIDataXferCustomThreshold',
           'DAQmxErrorMemMapDataXferModeSampTimingCombo',
           'DAQmxWarningPALTransferOverread', 'DAQmxLoadTask',
           'DAQmxErrorWriteNotCompleteBeforeSampClk',
           'DAQmxSetBufferAttribute', 'DAQmxCreateAIResistanceChan',
           'DAQmxGetCICountEdgesActiveEdge', 'DAQmxGetSysDevNames',
           'DAQmx_Exported_AdvCmpltEvent_Pulse_Polarity',
           'DAQmx_Val_Switch_Topology_2575_2_Wire_95x1_Mux',
           'DAQmxSwitchCreateScanList', 'DAQmxResetAITempUnits',
           'DAQmx_Val_Lvl', 'DAQmxErrorHWUnexpectedlyPoweredOffAndOn',
           'DAQmx_AI_Excit_Val', 'DAQmx_AI_RTD_B',
           'DAQmxGetAIStrainUnits',
           'DAQmxErrorDigitalWaveformExpected',
           'DAQmxGetSampClkDigFltrEnable', 'DAQmxGetAIExcitActualVal',
           'DAQmxErrorCAPISyncEventsTaskStateChangeNotAllowedFromDifferentThread',
           'DAQmxGetCITimestampInitialSeconds',
           'DAQmxSetCOPulseFreqInitialDelay',
           'DAQmxSetSwitchDevAutoConnAnlgBus',
           'DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseRate',
           'DAQmxErrorInterpolationRateNotPossible',
           'DAQmxErrorRequestedSignalInversionForRoutingNotPossible',
           'DAQmx_Val_Bits', 'DAQmxSetCIEncoderBInputDigSyncEnable',
           'DAQmx_AO_MemMapEnable', 'DAQmxResetAIChanCalScaleType',
           'DAQmxResetCIFreqDigSyncEnable',
           'DAQmxErrorInvalidRoutingSourceTerminalName_Routing',
           'DAQmxErrorNoMemMapWhenHWTimedSinglePoint',
           'DAQmxErrorSelfCalTemperatureNotDAQmx',
           'DAQmxGetAIChanCalVerifRefVals',
           'DAQmx_CI_SemiPeriod_DigFltr_TimebaseRate',
           'DAQmxGetAnlgEdgeRefTrigSlope',
           'DAQmxGetDigEdgeRefTrigEdge',
           'DAQmx_SwitchDev_SettlingTime', 'DAQmxSetHshkTrigType',
           'DAQmx_AIConv_MaxRate', 'DAQmxErrorInvalidAsynOpHandle',
           'DAQmx_CI_SemiPeriod_DigFltr_MinPulseWidth',
           'DAQmxSetWriteWaitMode',
           'DAQmxErrorSendAdvCmpltAfterWaitForTrigInScanlist',
           'DAQmx_AI_MemMapEnable', 'DAQmxSetAIConvSrc',
           'DAQmxTristateOutputTerm',
           'DAQmxErrorTimebaseCalFailedToConverge',
           'DAQmx_SwitchDev_RelayList',
           'DAQmxGetExportedSampClkOutputBehavior',
           'DAQmxGetPersistedChanAllowInteractiveDeletion',
           'DAQmxGetAIAccelSensitivityUnits',
           'DAQmxCreateCITwoEdgeSepChan',
           'DAQmxErrorExtCalConstsInvalid',
           'DAQmxGetCISemiPeriodDigFltrMinPulseWidth',
           'DAQmxErrorInvalidChanName', 'DAQmxRestoreLastExtCalConst',
           'DAQmxSetHshkSampleInputDataWhen',
           'DAQmxGetCITwoEdgeSepSecondDigFltrEnable',
           'DAQmxErrorMeasCalAdjustDirectPathOutputImpedance',
           'DAQmxErrorCantAllowConnectDACToGnd',
           'DAQmxGetNthTaskChannel',
           'DAQmxErrorPALPhysicalBufferEmpty', 'DAQmxSetCIMin',
           'DAQmxErrorResourcesInUseForInversionInTask_Routing',
           'DAQmxErrorSampPerChanNotMultOfXferSize',
           'DAQmxErrorHandshakeEventOutputTermNotSupportedGivenTimingType',
           'DAQmxGetCIEncoderZInputDigFltrTimebaseSrc',
           'DAQmxErrorPALTransferTimedOut',
           'DAQmxErrorSensorInvalidCompletionResistance',
           'DAQmx_Val_Open', 'DAQmxGetAITermCfg',
           'DAQmxSetCICustomScaleName',
           'DAQmxErrorSpecifiedAttrNotValid',
           'DAQmxSetAnlgWinStartTrigSrc', 'DAQmxDisableRefTrig',
           'DAQmxResetAIBridgeShuntCalGainAdjust',
           'DAQmxSetAIThrmcplType',
           'DAQmx_Val_Switch_Topology_1127_2_Wire_32x1_Mux',
           'DAQmxErrorNoForwardPolyScaleCoeffs',
           'DAQmxResetExportedDividedSampClkTimebaseOutputTerm',
           'DAQmxResetAOMax', 'DAQmxErrorAIMinTooLarge',
           'DAQmxSetAIInputSrc', 'DAQmxErrorPALTransferNotInProgress',
           'DAQmxErrorChannelSizeTooBigForPortReadType',
           'DAQmxErrorSimulationCannotBeDisabledForDevCreatedAsSimulatedDev',
           'DAQmxSetAnlgWinRefTrigWhen',
           'DAQmxGetAIRawDataCompressionType',
           'DAQmxErrorInvalidAIAttenuation', 'DAQmxMSeriesCalAdjust',
           'DAQmxGetAIACExcitWireMode',
           'DAQmxCfgBurstHandshakingTimingImportClock',
           'DAQmxResetExported20MHzTimebaseOutputTerm',
           'DAQmxErrorAOPropertiesCauseVoltageOverMax',
           'DAQmxErrorBufferWithOnDemandSampTiming',
           'DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseSrc',
           'DAQmxGetDigEdgeArmStartTrigSrc',
           'DAQmxErrorChanSizeTooBigForU32PortRead',
           'DAQmxCreateAIVoltageChanWithExcit',
           'DAQmx_AI_ChanCal_Desc',
           'DAQmxErrorCantSetPropertyTaskNotRunningCommitted',
           'DAQmx_CO_Pulse_Freq', 'DAQmxErrorWfmNameSameAsScriptName',
           'DAQmxErrorDataNotAvailable', 'DAQmx_SwitchChan_WireMode',
           'DAQmx_RealTime_WaitForNextSampClkWaitMode',
           'DAQmxSetScaleAttribute', 'DAQmxSetCIPeriodDigFltrEnable',
           'DAQmxSetCICtrTimebaseDigFltrTimebaseSrc',
           'DAQmxGetAIACExcitFreq', 'DAQmxWarningPALHardwareFault',
           'DAQmx_Val_RightJustified',
           'DAQmxErrorCouldNotDownloadFirmwareFileMissingOrDamaged',
           'DAQmxErrorCOWritePulseHighTimeOutOfRange',
           'DAQmxErrorWaveformNotInMem',
           'DAQmxCreateTEDSAIMicrophoneChan',
           'DAQmxCfgDigEdgeAdvTrig',
           'DAQmxErrorInterconnectBridgeRouteNotPossible',
           'DAQmxSSeriesCalAdjust', 'DAQmxGetDigEdgeAdvTrigEdge',
           'DAQmxErrorPropertyNotSupportedWhenRefClkSrcNone',
           'DAQmxGetCISemiPeriodDigFltrEnable',
           'DAQmxErrorFewerThan2ScaledValues',
           'DAQmxGetAnlgWinPauseTrigCoupling', 'DAQmxResetCIFreqDiv',
           'DAQmx_Val_PPS', 'DAQmxGetCOPulseDone',
           'DAQmx_SwitchChan_Usage', 'DAQmx_AI_Thrmstr_A',
           'DAQmx_AI_Thrmstr_B', 'DAQmx_AI_Thrmstr_C',
           'DAQmx_Task_NumChans', 'DAQmx_Val_QuarterBridge',
           'DAQmxErrorAnalogTrigChanNotFirstInScanList',
           'DAQmxSetSampClkTimebaseRate',
           'DAQmxGetCIPulseWidthDigFltrTimebaseSrc',
           'DAQmx_Exported_HshkEvent_Pulse_Width',
           'DAQmxCfgBurstHandshakingTimingExportClock',
           'DAQmx_DigEdge_AdvTrig_Src',
           'DAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc',
           'DAQmx_SampClk_Src', 'DAQmxGetAIChanCalExpDate',
           'DAQmxErrorSampClkTimebaseDCMLock',
           'DAQmxErrorEveryNSampsEventAlreadyRegistered',
           'DAQmxResetAICurrentShuntResistance',
           'DAQmxErrorDevAbsentOrUnavailable',
           'DAQmxWarningPALBadPointer', 'DAQmx_Val_DoNotAllowRegen',
           'DAQmxSetDIDataXferReqCond',
           'DAQmxErrorNegativeReadSampleNumber',
           'DAQmxErrorCannotReadWhenAutoStartFalseBufSizeZeroAndTaskNotRunning',
           'DAQmxResetSampClkTimebaseActiveEdge',
           'DAQmxGetRefClkRate', 'DAQmxGetPhysicalChanAttribute',
           'DAQmxErrorChanCalTablePreScaledValsNotSpecd',
           'DAQmx_Val_FullBridgeI',
           'DAQmxSetExportedCtrOutEventToggleIdleState',
           'DAQmxCreateTEDSAIVoltageChanWithExcit',
           'DAQmxGetAILowpassEnable', 'DAQmx_Val_AIHoldCmpltEvent',
           'DAQmxSetSampClkDigFltrTimebaseSrc',
           'DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseRate',
           'DAQmx_DigEdge_AdvTrig_Edge',
           'DAQmxWarningPALResourceOwnedBySystem',
           'DAQmxGetCOOutputType', 'DAQmxResetStartTrigDelay',
           'DAQmxSetReadAttribute', 'DAQmxCreateTEDSAIResistanceChan',
           'DAQmxSetDigEdgeStartTrigEdge', 'DAQmxErrorScriptNotInMem',
           'DAQmxSetCIFreqDigFltrMinPulseWidth',
           'DAQmxErrorPhysChanMeasType',
           'DAQmxWarningPALValueConflict',
           'DAQmxSetCICountEdgesCountDirDigFltrEnable',
           'DAQmx_Val_PulseWidth', 'DAQmxErrorPLLLock',
           'DAQmx_Val_WaitForHandshakeTriggerAssert',
           'DAQmxSetDigEdgeStartTrigSrc',
           'DAQmxErrorInadequateResolutionForTimebaseCal',
           'DAQmx_Val_Pt3911', 'DAQmxResetTrigAttribute',
           'DAQmxGetExportedHshkEventPulseWidth', 'DAQmxGetAIMax',
           'DAQmxErrorInvalidRefClkSrc', 'DAQmx_CO_Pulse_Term',
           'DAQmx_DO_DataXferReqCond', 'DAQmxResetAODACRngLow',
           'DAQmxResetAISampAndHoldEnable',
           'DAQmx_CI_Freq_DigFltr_TimebaseRate',
           'DAQmxResetAIChanCalVerifAcqVals',
           'DAQmxErrorWaitForNextSampClkNotSupported',
           'DAQmxErrorWaveformLengthNotMultipleOfIncr',
           'DAQmxSetAOTermCfg', 'DAQmxErrorNoAnalogTrigHW',
           'DAQmx_StartTrig_Type',
           'DAQmxResetCISemiPeriodDigFltrEnable',
           'DAQmxSetAODACRefSrc',
           'DAQmx_AI_Lowpass_SwitchCap_ExtClkFreq',
           'DAQmxErrorPauseTrigTypeNotSupportedGivenTimingType',
           'DAQmxErrorWriteOffsetNotMultOfIncr', 'DAQmx_Val_Seconds',
           'DAQmxPerformBridgeOffsetNullingCal',
           'DAQmxGetCITwoEdgeSepUnits',
           'DAQmxSetAIChanCalTableScaledVals',
           'DAQmxGetDOOutputDriveType',
           'DAQmx_Exported_HshkEvent_Delay',
           'DAQmx_AnlgWin_PauseTrig_Coupling', 'DAQmx_Val_Resistance',
           'DAQmx_AnlgWin_PauseTrig_Btm',
           'DAQmxResetAnlgLvlPauseTrigCoupling',
           'DAQmxErrorPhysChanOutputType',
           'DAQmxErrorInvalidIdentifierFollowingSeparatorInList',
           'DAQmxGetCIPeriodDigFltrEnable',
           'DAQmxErrorNoReversePolyScaleCoeffs',
           'DAQmxErrorPALComponentAlreadyLoaded',
           'DAQmxResetDigEdgeAdvTrigSrc',
           'DAQmxSetAnalogPowerUpStates',
           'DAQmxErrorPhysChanNotInTask', 'DAQmx_Val_FullBridgeII',
           'DAQmxErrorRefClkSrcNotSupported',
           'DAQmxResetAIDataXferMech',
           'DAQmxErrorPALComponentInitializationFault',
           'DAQmx_Exported_HshkEvent_OutputBehavior',
           'DAQmxGetSampClkMaxRate', 'DAQmx_Val_CountEdges',
           'DAQmxResetAnlgWinRefTrigSrc',
           'DAQmx_Val_Position_LinEncoder',
           'DAQmxSetCIEncoderZInputDigFltrMinPulseWidth',
           'DAQmx_Val_LosslessPacking',
           'DAQmxGetAnlgEdgeStartTrigCoupling',
           'DAQmxErrorResourcesInUseForRoute',
           'DAQmx_Val_Switch_Topology_1166_32_SPDT',
           'DAQmxGetCITwoEdgeSepSecondEdge', 'DAQmx_CI_Period_Units',
           'DAQmxErrorPALTransferInProgress', 'DAQmx_AI_TermCfg',
           'DAQmxGetSampTimingType',
           'DAQmxSetCIEncoderBInputDigFltrMinPulseWidth',
           'DAQmxErrorExtCalDateTimeNotDAQmx',
           'DAQmxErrorLineNumIncompatibleWithVideoSignalFormat',
           'DAQmx_Sys_GlobalChans', 'DAQmx_SwitchChan_MaxDCVoltage',
           'DAQmxResetDigLvlPauseTrigDigFltrEnable',
           'DAQmxSwitchWaitForSettling',
           'DAQmxSetCIFreqDigFltrTimebaseSrc',
           'DAQmxErrorPALDeviceNotFound',
           'DAQmxErrorCantUsePort1AloneGivenSampTimingTypeOn653x',
           'DAQmxErrorMStudioMultiplePhysChansNotSupported',
           'DAQmx_Val_Switch_Topology_1161_8_SPDT',
           'DAQmxGetAIChanCalHasValidCalInfo',
           'DAQmxErrorCounterTimebaseRateNotFound',
           'DAQmxResetCIEncoderAInputTerm', 'DAQmxDeviceSupportsCal',
           'DAQmx_CO_CtrTimebaseRate',
           'DAQmxGetCalUserDefinedInfoMaxSize', 'DAQmx_Val_MapRanges',
           'DAQmxSetAIExcitActualVal',
           'DAQmx_Val_Switch_Topology_2593_Dual_8x1_Mux',
           'DAQmx_CI_Encoder_AInputTerm',
           'DAQmxErrorInputBufSizeTooSmallToStartAcq',
           'DAQmxSetWriteRegenMode',
           'DAQmxResetCIPeriodDigFltrTimebaseSrc',
           'DAQmxErrorTrigLineNotFound', 'DAQmxGetAnlgWinRefTrigBtm',
           'DAQmxResetAnlgLvlPauseTrigSrc',
           'DAQmx_SwitchDev_AutoConnAnlgBus',
           'DAQmxErrorExternalTimebaseRateNotknownForRate',
           'DAQmx_Val_CO', 'DAQmx_CI_AngEncoder_InitialAngle',
           'DAQmx_Val_CI', 'DAQmxGetAITEDSUnits',
           'DAQmx_CO_Pulse_DutyCyc',
           'DAQmxGetExportedSyncPulseEventOutputTerm',
           'DAQmxResetCOPulseFreqInitialDelay',
           'DAQmxSetDODataXferMech', 'DAQmxErrorPALThreadCouldNotRun',
           'DAQmxErrorIncorrectDigitalPattern', 'DAQmx_Val_Radians',
           'DAQmxErrorDrivePhaseShiftDCMBecameUnlocked',
           'DAQmxWarningPALLogicalBufferFull',
           'DAQmxGetExtendedErrorInfo',
           'DAQmxErrorTEDSSensorDataError', 'DAQmxSetReadOverWrite',
           'DAQmxCreateCILinEncoderChan', 'DAQmxResetReadRelativeTo',
           'DAQmxErrorSampleTimebaseDivisorNotSupportedGivenTimingType',
           'DAQmxSetHshkStartCond', 'DAQmxGetTaskAttribute',
           'DAQmxResetChanDescr', 'DAQmxGetAILVDTSensitivity',
           'DAQmxCfgHandshakingTiming',
           'DAQmxGetSwitchChanMaxDCCarryPwr',
           'DAQmx_Val_Switch_Topology_2503_2_Wire_Dual_12x1_Mux',
           'DAQmxGetScaleType',
           'DAQmxErrorResourcesInUseForExportSignalPolarity',
           'DAQmx_CI_CountEdges_Term', 'DAQmxGetCICountEdgesTerm',
           'DAQmxAddGlobalChansToTask',
           'DAQmxGetAnlgEdgeStartTrigLvl',
           'DAQmxWarningReadNotCompleteBeforeSampClk',
           'DAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc',
           'DAQmxSetCIEncoderAInputDigFltrEnable',
           'DAQmxErrorCouldNotReserveRequestedTrigLine',
           'DAQmxGetSwitchChanAttribute',
           'DAQmx_Exported_CtrOutEvent_Toggle_IdleState',
           'DAQmx_CI_Encoder_ZIndexEnable',
           'DAQmx_CI_CtrTimebase_DigFltr_TimebaseRate',
           'DAQmxSetAIImpedance', 'DAQmxGetAOResolution',
           'DAQmx_Val_Switch_Topology_2595_4x1_Mux',
           'DAQmxErrorDataLineReservedForDynamicOutput',
           'DAQmx_Val_Switch_Topology_1193_32x1_Mux',
           'DAQmxGetCIFreqDigSyncEnable', 'DAQmx_AO_DataXferReqCond',
           'DAQmxWriteAnalogF64', 'DAQmxSetAIConvRate',
           'DAQmx_CI_AngEncoder_Units',
           'DAQmxErrorLocalRemoteDriverVersionMismatch_Routing',
           'DAQmx_Val_ProgrammedIO',
           'DAQmxErrorTableScaleScaledValsNotSpecd',
           'DAQmxGetExportedWatchdogExpiredEventOutputTerm',
           'DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate',
           'DAQmx_DI_InvertLines',
           'DAQmxErrorLinesReservedForSCXIControl',
           'DAQmx_Exported_SampClk_OutputBehavior',
           'DAQmx_Scale_Type',
           'DAQmxErrorMStudioCppRemoveEventsBeforeStop',
           'DAQmxWarningPALTransferStopped',
           'DAQmx_Val_Switch_Topology_2576_2_Wire_Octal_8x1_Mux',
           'DAQmx_CO_OutputType',
           'DAQmx_CI_Encoder_BInput_DigFltr_MinPulseWidth',
           'DAQmxErrorTEDSDoesNotContainPROM',
           'DAQmxResetExportedRefTrigOutputTerm',
           'DAQmxSetDigEdgeAdvTrigDigFltrEnable',
           'DAQmxResetRealTimeAttribute', 'DAQmx_Val_FromTEDS',
           'DAQmxErrorScriptHasInvalidIdentifier',
           'DAQmxErrorCfgTEDSNotSupportedOnRT',
           'DAQmxErrorPALDeviceUnknown',
           'DAQmxErrorInternalAIInputSrcInMultipleChanGroups',
           'DAQmxResetCIPeriodDigFltrTimebaseRate',
           'DAQmxErrorAcqStoppedToPreventInputBufferOverwrite',
           'DAQmxErrorInvalidAOOffsetCalConst',
           'DAQmxSetCISemiPeriodDigFltrTimebaseSrc',
           'DAQmxResetDelayFromSampClkDelayUnits',
           'DAQmxErrorInvalidRoutingDestinationTerminalName_Routing',
           'DAQmxWarningUserDefinedInfoTooLong',
           'DAQmxResetCIEncoderBInputDigFltrTimebaseRate',
           'DAQmxErrorTooManyInstructionsInLoopInScript',
           'DAQmx_Val_Pulse', 'DAQmxSetAOOutputImpedance',
           'DAQmxGetBufferAttribute', 'DAQmx_DI_DataXferMech',
           'DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc',
           'DAQmx_Read_ReadAllAvailSamp',
           'DAQmxResetAnlgWinStartTrigSrc',
           'DAQmxErrorOddTotalNumSampsToWrite',
           'DAQmxErrorSampTbRateSampTbSrcMismatch',
           'DAQmxResetAIResistanceCfg',
           'DAQmxErrorCIHWTimedSinglePointNotSupportedForMeasType',
           'DAQmxESeriesCalAdjust', 'DAQmxResetAIChanCalDesc',
           'DAQmxResetDigEdgeArmStartTrigDigSyncEnable',
           'DAQmx_DO_NumLines', 'DAQmxResetCIEncoderDecodingType',
           'DAQmxErrorCppCantRemoveEventHandlerTwice',
           'DAQmxErrorPALFileSeekFault', 'DAQmx_Val_ALowBHigh',
           'DAQmxSetSampClkActiveEdge',
           'DAQmxResetCICtrTimebaseDigFltrMinPulseWidth',
           'DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandBufSizeZero',
           'DAQmx_Task_Name',
           'DAQmxGetRealTimeConvLateErrorsToWarnings',
           'DAQmxErrorDSFFailedToResetStream',
           'DAQmxGetAOResolutionUnits',
           'DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseRate',
           'DAQmxErrorWriteFailedMultipleCOOutputTypes',
           'DAQmxSetCICtrTimebaseDigFltrTimebaseRate',
           'DAQmx_Val_Switch_Topology_1130_2_Wire_128x1_Mux',
           'DAQmxGetCIEncoderZInputTerm',
           'DAQmxErrorMStudioInvalidPolyDirection',
           'DAQmxSetCIFreqDiv', 'DAQmxErrorPALResourceInitialized',
           'DAQmxErrorPALBadToken', 'DAQmxResetCIPeriodDigFltrEnable',
           'DAQmxResetHshkStartCond',
           'DAQmxErrorCannotTristateBusyTerm_Routing',
           'DAQmxGetCIFreqUnits',
           'DAQmx_DigEdge_ArmStartTrig_DigFltr_Enable',
           'DAQmxErrorDevInUnidentifiedPXIChassis',
           'DAQmxErrorDDCClkOutDCMBecameUnlocked',
           'DAQmxGetDigPatternStartTrigSrc',
           'DAQmxErrorInvalidAttentuationBasedOnMinMax',
           'DAQmxSetSwitchDeviceAttribute',
           'DAQmxGetSampClkTimebaseActiveEdge',
           'DAQmxSetAnlgEdgeStartTrigSlope',
           'DAQmxErrorWatchdogExpirationStateNotEqualForLinesInPort',
           'DAQmxErrorCannotTristateTerm',
           'DAQmxWarningPALResourceReserved',
           'DAQmxGetDevProductType',
           'DAQmxErrorPFI0UsedForAnalogAndDigitalSrc',
           'DAQmxSetAILeadWireResistance',
           'DAQmxWarningDevNotSelfCalibratedWithDAQmx',
           'DAQmx_CI_TwoEdgeSep_Second_DigFltr_Enable',
           'DAQmxGetCIEncoderAInputDigFltrEnable',
           'DAQmxErrorSampClkRateAndDivCombo',
           'DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunningOrCommitted',
           'DAQmxGetExtCalLastTemp', 'DAQmxGetCIMeasType',
           'DAQmxResetAnlgWinPauseTrigCoupling', 'DAQmx_Val_Low',
           'DAQmxWarningPALResourceBusy', 'FALSE',
           'DAQmxErrorDevOnboardMemOverflowDuringHWTimedNonBufferedGen',
           'DAQmx_PersistedScale_AllowInteractiveDeletion',
           'DAQmxErrorCounterInputPauseTriggerAndSampleClockInvalid',
           'DAQmxErrorStartTrigDelayWithExtSampClk',
           'DAQmxGetWriteCurrWritePos',
           'DAQmxErrorCannotHaveTimedLoopAndDAQmxSignalEventsInSameTask',
           'DAQmxErrorChansCantAppearInSameTask',
           'DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate',
           'DAQmxResetRealTimeConvLateErrorsToWarnings',
           'DAQmxResetCITwoEdgeSepUnits', 'DAQmx_AI_Bridge_Cfg',
           'DAQmxCreateLinScale', 'DAQmxResetAnlgEdgeStartTrigSrc',
           'DAQmxResetReadSleepTime',
           'DAQmxResetAnlgWinPauseTrigWhen',
           'DAQmxErrorClkDoublerDCMBecameUnlocked',
           'DAQmxGetSampClkTimebaseRate', 'DAQmxGetAODataXferMech',
           'DAQmxErrorDeviceIsNotAValidSwitch',
           'DAQmx_Read_OverWrite', 'DAQmxGetCIFreqDiv',
           'DAQmxErrorNULLPtrForC_Api',
           'DAQmxSetScalePolyReverseCoeff',
           'DAQmxErrorDLLBecameUnlocked',
           'DAQmxErrorLines0To3ConfiguredForOutput',
           'DAQmxGetAnlgEdgeRefTrigHyst',
           'DAQmxResetDigEdgeWatchdogExpirTrigEdge',
           'DAQmxErrorStreamDCMBecameUnlocked',
           'DAQmxCfgChangeDetectionTiming', 'DAQmx_Val_StartTrigger',
           'DAQmx_AnlgWin_PauseTrig_Src',
           'DAQmxErrorSwitchScanlistTooBig', 'DAQmx_Val_Strain_Gage',
           'DAQmxErrorMeasCalAdjustDirectPathGain',
           'DAQmxErrorProductOfAOMinAndGainTooSmall',
           'DAQmxSetDigEdgeWatchdogExpirTrigSrc',
           'DAQmxErrorChanCalExpirationDateNotSet',
           'DAQmxResetDODataXferMech',
           'DAQmxErrorCannotReadWhenAutoStartFalseAndTaskNotRunningOrCommitted',
           'DAQmxErrorPALDeviceInitializationFault',
           'DAQmxErrorPortConfiguredForStaticDigitalOps',
           'DAQmxGetStartTrigRetriggerable',
           'DAQmxErrorIfElseBlockNotAllowedInFiniteRepeatLoopInScript',
           'DAQmxResetCOPulseTicksInitialDelay',
           'DAQmx_Read_OverloadedChansExist',
           'DAQmxErrorRepeatLoopNestingTooDeepInScript',
           'DAQmxSetCILinEncoderInitialPos',
           'DAQmxSwitchConnectMulti', 'DAQmxErrorRecordNotAvailable',
           'DAQmxGetSwitchDevNumRows', 'DAQmx_Val_ConstVal',
           'DAQmx_Scale_Map_PreScaledMax',
           'DAQmxErrorCantSaveChanWithoutReplace',
           'DAQmxCreateDIChan',
           'DAQmxResetExportedAdvCmpltEventDelay',
           'DAQmx_CI_Period_DigFltr_MinPulseWidth',
           'DAQmxGetAIMeasType',
           'DAQmx_Val_Switch_Topology_2585_1_Wire_10x1_Mux',
           'DAQmxResetCIEncoderBInputTerm',
           'DAQmx_PersistedScale_AllowInteractiveEditing',
           'DAQmxErrorCannotConnectSrcChans',
           'DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc',
           'DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate',
           'DAQmxErrorPALBadMode',
           'DAQmxSetCIEncoderAInputDigSyncEnable',
           'DAQmxGetAIThrmstrR1', 'DAQmx_Val_WaitInfinitely',
           'DAQmxResetAnlgEdgeRefTrigSlope',
           'DAQmxWarningPALFunctionObsolete',
           'DAQmxErrorChanIndexInvalid',
           'DAQmxSetAnlgEdgeStartTrigHyst',
           'DAQmx_CI_Period_DigFltr_TimebaseRate',
           'DAQmxErrorWatchdogExpirationTristateNotSpecdForEntirePort',
           'DAQmxResetAIBridgeShuntCalEnable',
           'DAQmxErrorMeasCalAdjustCalADC',
           'DAQmxSetCISemiPeriodDigFltrMinPulseWidth',
           'DAQmxGetCOPulseTimeInitialDelay',
           'DAQmxErrorStrobePhaseShiftDCMBecameUnlocked',
           'DAQmx_DigLvl_PauseTrig_When',
           'DAQmxResetChangeDetectDIFallingEdgePhysicalChans',
           'DAQmxWriteCtrTicksScalar',
           'DAQmx_CI_Encoder_BInput_DigFltr_Enable',
           'DAQmx_Val_AIConvertClock', 'DAQmx_Read_OverloadedChans',
           'DAQmxResetRealTimeWaitForNextSampClkWaitMode',
           'DAQmxGetAIAccelUnits', 'DAQmxSetDigLvlPauseTrigSrc',
           'DAQmxGetAICurrentShuntResistance',
           'DAQmxSetAIBridgeBalanceCoarsePot',
           'DAQmxResetAIConvTimebaseSrc', 'DAQmxGetRealTimeAttribute',
           'DAQmxGetAIConvRate',
           'DAQmxErrorActiveChanTooManyLinesSpecdWhenGettingPrpty',
           'DAQmxErrorTrigLineNotFound_Routing', 'DAQmx_ChanIsGlobal',
           'DAQmxResetCICountEdgesCountDirDigFltrEnable',
           'DAQmxResetAIVoltageUnits',
           'DAQmxResetAIBridgeBalanceCoarsePot',
           'DAQmxSetExportedHshkEventOutputTerm',
           'DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth',
           'DAQmx_Val_OverwriteUnreadSamps', 'DAQmxSetAOMemMapEnable',
           'DAQmxGetAnlgEdgeStartTrigSrc',
           'DAQmxErrorCalTempNotSupported',
           'DAQmxGetWatchdogExpirTrigType',
           'DAQmxSetAnlgWinPauseTrigCoupling',
           'DAQmxErrorInvalidLoopIterationsInScript',
           'DAQmxErrorSelfCalConstsInvalid',
           'DAQmxGetCITwoEdgeSepFirstEdge',
           'DAQmxWarningTimestampCounterRolledOver',
           'DAQmxResetAOLoadImpedance',
           'DAQmxErrorInversionNotSupportedByHW',
           'DAQmxGetExportedAIConvClkPulsePolarity',
           'DAQmxGetTimingAttribute', 'DAQmxSetAIExcitUseMultiplexed',
           'DAQmxErrorSwitchDifferentTopologyWhenScanning',
           'DAQmx_Val_Yield', 'DAQmxGetAIForceReadFromChan',
           'DAQmxGetCICtrTimebaseDigFltrTimebaseRate',
           'DAQmxSetAIChanCalVerifRefVals', 'DAQmxResetHshkTrigType',
           'DAQmx_Val_Switch_Topology_2530_1_Wire_Quad_32x1_Mux',
           'DAQmx_SyncPulse_MinDelayToStart',
           'DAQmxErrorChanDoesNotSupportCJC',
           'DAQmx_Exported_HshkEvent_Interlocked_AssertedLvl',
           'DAQmxErrorSampClkTimingTypeWhenTristateIsFalse',
           'DAQmxResetCIFreqTerm',
           'DAQmxErrorInvalidSignalTypeExportSignal',
           'DAQmxErrorOneChanReadForMultiChanTask',
           'DAQmxSetWriteOffset', 'DAQmxErrorNoAcqStarted',
           'DAQmxCreateCIAngEncoderChan',
           'DAQmxResetExportedCtrOutEventToggleIdleState',
           'DAQmx_Val_PathStatus_ChannelReservedForRouting',
           'DAQmxErrorDeviceShutDownDueToHighTemp',
           'DAQmxSetWatchdogTimeout', 'DAQmxErrorInvalidSwitchChan',
           'DAQmxResetCOPulseDutyCyc', 'DAQmxSetAITempUnits',
           'DAQmxResetAIMicrophoneSensitivity',
           'DAQmxSwitchGetMultiRelayPos',
           'DAQmxResetRealTimeNumOfWarmupIters',
           'DAQmxErrorNoPatternMatcherAvailable',
           'DAQmxSetWatchdogDOExpirState', 'DAQmxGetHshkStartCond',
           'DAQmxErrorDigFilterIntervalAlreadyCfgd',
           'DAQmx_Val_Switch_Topology_1128_Independent',
           'DAQmxSetAIDataXferMech',
           'DAQmx_Exported_ChangeDetectEvent_OutputTerm',
           'DAQmxExportSignal',
           'DAQmxErrorAutoStartReadNotAllowedEventRegistered',
           'DAQmxSetExportedAdvTrigPulseWidthUnits',
           'DAQmxErrorWriteNoOutputChansInTask',
           'DAQmxErrorUnexpectedIDFollowingSwitchChanName',
           'DAQmxSetExportedCtrOutEventPulsePolarity',
           'DAQmxSetExportedRdyForXferEventOutputTerm',
           'DAQmxWarningPossiblyInvalidCTRSampsInFiniteDMAAcq',
           'DAQmxSetStartTrigType', 'DAQmxSetAILowpassEnable',
           'DAQmx_Val_Pulse_Time', 'DAQmx_Dev_ProductType',
           'DAQmxGetAIMemMapEnable',
           'DAQmxErrorTEDSMultipleCalTemplatesNotSupported',
           'DAQmxResetAIRTDB', 'DAQmxResetAIRTDC', 'DAQmxResetAIRTDA',
           'DAQmxReadRaw', 'DAQmxResetReadAutoStart',
           'DAQmxResetAIMin',
           'DAQmxErrorDigFilterEnabledMinPulseWidthNotCfg',
           'DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate',
           'DAQmxResetCIEncoderAInputDigFltrTimebaseRate',
           'DAQmx_Val_20MHzTimebase',
           'DAQmxGetExportedAdvTrigPulseWidthUnits',
           'DAQmx_AI_DataXferMech', 'DAQmxResetCICountEdgesDir',
           'DAQmxResetAOIdleOutputBehavior',
           'DAQmxCreateAITempBuiltInSensorChan',
           'DAQmxResetRefClkRate', 'DAQmx_Val_DC', 'DAQmxSelfCal',
           'DAQmxStopTask', 'DAQmx_Val_DI',
           'DAQmxGetPhysicalChanTEDSMfgID',
           'DAQmx_CI_CustomScaleName', 'DAQmx_AI_InputSrc',
           'DAQmx_Val_DO', 'DAQmxErrorSampRateTooLow',
           'DAQmxGetCITwoEdgeSepFirstDigSyncEnable',
           'DAQmxSetAIRVDTSensitivity',
           'DAQmxGetExportedAdvCmpltEventPulsePolarity',
           'DAQmxGetCOPulseTicksInitialDelay', 'DAQmxGetReadWaitMode',
           'DAQmx_CI_Encoder_DecodingType',
           'DAQmxErrorInvalidTimeoutVal',
           'DAQmxErrorWriteToTEDSFailed',
           'DAQmxErrorWaitIsLastInstructionOfLoopInScript',
           'DAQmxErrorInvalidNumberInRepeatStatementInList',
           'DAQmxErrorMStudioNoForwardPolyScaleCoeffs',
           'DAQmxErrorValueNotInSet', 'DAQmxResetCOCtrTimebaseSrc',
           'DAQmxSetDOOutputDriveType',
           'DAQmx_Val_Switch_Topology_2564_16_SPST',
           'DAQmxResetExportedAIHoldCmpltEventOutputTerm',
           'DAQmxGetAIBridgeBalanceFinePot',
           'DAQmxSetAnlgWinRefTrigCoupling',
           'DAQmx_RealTime_WriteRecoveryMode',
           'DAQmxSetInterlockedHshkTrigSrc',
           'DAQmxWarningInvalidCalConstValueForAO',
           'DAQmxErrorPropertyNotSupportedNotInputTask',
           'DAQmxErrorAttributeNotSupportedInTaskContext',
           'DAQmxGetScaleMapPreScaledMin',
           'DAQmxWarningInvalidCalConstValueForAI',
           'DAQmxErrorPropertyValNotSupportedByHW',
           'DAQmxSetCIEncoderZInputDigFltrEnable',
           'DAQmxWriteBinaryU32', 'DAQmxGetCIPulseWidthUnits',
           'DAQmxErrorCannotConnectChansDirectly',
           'DAQmxGetAIStrainGagePoissonRatio',
           'DAQmxErrorInvalidChannelNameInList',
           'DAQmxResetCOCtrTimebaseDigSyncEnable',
           'DAQmx_Val_InvertPolarity', 'DAQmx_AO_DevScalingCoeff',
           'DAQmxSetAIForceReadFromChan', 'DAQmx_CI_Freq_Units',
           'DAQmxSetAILowpassSwitchCapExtClkDiv',
           'DAQmxErrorInvalidDeviceIDInList',
           'DAQmxResetSampClkDigSyncEnable',
           'DAQmxErrorIncorrectReadFunction',
           'DAQmxWarningPALBadCount',
           'DAQmxResetAnlgEdgeStartTrigHyst',
           'DAQmxErrorPROMOnTEDSAlreadyWritten',
           'DAQmxGetDigEdgeAdvTrigSrc',
           'DAQmxErrorPALThreadAlreadyDead',
           'DAQmx_CI_PulseWidth_DigFltr_TimebaseSrc',
           'DAQmxSetExportedHshkEventInterlockedAssertOnStart',
           'DAQmxSetCITwoEdgeSepUnits', 'DAQmx_AI_RTD_Type',
           'DAQmxSetReadAutoStart',
           'DAQmxSetCISemiPeriodStartingEdge',
           'DAQmxGetPersistedScaleAttribute',
           'DAQmxResetAIForceReadFromChan', 'DAQmx_Val_AnlgWin',
           'DAQmx_Val_PatternDoesNotMatch',
           'DAQmxErrorInvalidTEDSPhysChanNotAI',
           'DAQmx_Val_HWTimedSinglePoint', 'DAQmxGetArmStartTrigType',
           'DAQmxGetAIConvMaxRate',
           'DAQmxErrorOperationNotPermittedWhileScanning',
           'DAQmx_Val_WhenAcqComplete',
           'DAQmxSetDigEdgeStartTrigDigSyncEnable',
           'DAQmxGetTaskNumChans', 'DAQmxResetAOTermCfg',
           'DAQmxSetCIPulseWidthDigSyncEnable',
           'DAQmxWarningPALBadWriteOffset',
           'DAQmxErrorRoutingHardwareBusy_Routing',
           'DAQmxGetAIACExcitSyncEnable', 'DAQmxSetAIExcitDCorAC',
           'DAQmx_Scale_Lin_Slope', 'DAQmxWarningSampClkRateTooLow',
           'DAQmx_AO_Voltage_Units', 'DAQmxSetScaleMapScaledMin',
           'DAQmx_Val_Switch_Topology_2530_4_Wire_32x1_Mux',
           'DAQmx_Val_Switch_Topology_1128_1_Wire_64x1_Mux',
           'DAQmxErrorCOWritePulseLowTimeOutOfRange',
           'DAQmxErrorLabVIEWEmptyTaskOrChans',
           'DAQmxErrorExportTwoSignalsOnSameTerminal',
           'DAQmxResetAnlgWinStartTrigTop',
           'DAQmxResetAnlgEdgeRefTrigHyst', 'DAQmxCfgInputBuffer',
           'DAQmx_SampClk_Timebase_Src',
           'DAQmxGetExtCalRecommendedInterval', 'DAQmxResetCIMin',
           'DAQmx_Val_Switch_Topology_2527_4_Wire_16x1_Mux',
           'DAQmxResetDIDigFltrEnable',
           'DAQmxErrorOutputFIFOUnderflow',
           'DAQmxResetCOCtrTimebaseActiveEdge',
           'DAQmxErrorCabledModuleNotCapableOfRoutingAI',
           'DAQmxErrorInterconnectBusNotFound',
           'DAQmxGetAIConvTimebaseDiv',
           'DAQmxErrorRoutingSrcTermPXIStarInSlot2',
           'DAQmx_CI_CtrTimebase_DigFltr_MinPulseWidth',
           'DAQmxWarningPropertyVersionNew',
           'DAQmxErrorMaxSoundPressureMicSensitivitRelatedAIPropertiesNotSupportedByDev',
           'DAQmxGetExportedHshkEventInterlockedDeassertDelay',
           'DAQmxResetCIPulseWidthDigFltrMinPulseWidth',
           'DAQmx_PhysicalChan_TEDS_SerialNum',
           'DAQmxResetCIFreqDigFltrTimebaseRate',
           'DAQmx_CI_Timestamp_Units', 'DAQmxGetAOCurrentUnits',
           'DAQmxSetAIBridgeNomResistance',
           'DAQmx_Buf_Input_OnbrdBufSize',
           'DAQmxResetCISemiPeriodTerm',
           'DAQmx_CI_Period_StartingEdge',
           'DAQmxErrorResourcesInUseForRouteInTask_Routing',
           'DAQmxSetAIGain', 'DAQmxGetWriteSpaceAvail',
           'DAQmxErrorPhysicalChannelNotSpecified',
           'DAQmxErrorWriteDataTypeTooSmall',
           'DAQmxGetCOPulseFreqUnits', 'DAQmx_Val_OnBrdMemNotFull',
           'DAQmxGetChanIsGlobal', 'DAQmxResetDigPatternRefTrigSrc',
           'DAQmxErrorAOMinMaxNotInGainRange',
           'DAQmxErrorEmptyStringTermNameNotSupported',
           'DAQmxGetAIChanCalCalDate',
           'DAQmxErrorWriteWhenTaskNotRunningCOTime',
           'DAQmxGetAICustomScaleName', 'DAQmx_Sys_Scales',
           'DAQmxErrorPALTransferStopped',
           'DAQmx_Val_Switch_Topology_2527_2_Wire_Dual_16x1_Mux',
           'DAQmxResetAIRVDTSensitivityUnits',
           'DAQmx_AnlgLvl_PauseTrig_When',
           'DAQmxResetCIPulseWidthDigSyncEnable',
           'DAQmx_Val_BurstHandshake',
           'DAQmx_CI_Encoder_AInput_DigFltr_MinPulseWidth',
           'DAQmxErrorDSFStopClock', 'DAQmx_Val_10MHzRefClock',
           'DAQmx_Read_NumChans',
           'DAQmx_Val_Switch_Topology_1192_8_SPDT',
           'DAQmx_Val_Software',
           'DAQmx_DigEdge_StartTrig_DigFltr_TimebaseRate',
           'DAQmxSetSyncPulseSrc',
           'DAQmxErrorPALReceiverSocketInvalid',
           'DAQmxErrorSampleValueOutOfRange',
           'DAQmxErrorWriteToTEDSNotSupportedOnRT',
           'DAQmxResetDigEdgeArmStartTrigSrc',
           'DAQmxErrorMultipleDevIDsPerChassisSpecifiedInList',
           'DAQmx_Val_QuarterBridgeI', 'DAQmx_Val_Linear',
           'DAQmxErrorPALBadWriteCount',
           'DAQmxErrorPALComponentNeverLoaded',
           'DAQmxErrorPALComponentNotFound',
           'DAQmxErrorChangeDetectionOutputTermNotSupportedGivenTimingType',
           'DAQmx_Val_CurrReadPos', 'DAQmx_CI_Period_Term',
           'DAQmxGetAnlgLvlPauseTrigCoupling',
           'DAQmxGetCINumPossiblyInvalidSamps',
           'DAQmxResetStartTrigRetriggerable',
           'DAQmxResetCIDupCountPrevent',
           'DAQmx_DigPattern_StartTrig_When',
           'DAQmxResetExportedRdyForXferEventOutputTerm',
           'DAQmx_Val_WaitForInterrupt',
           'DAQmxErrorNoSyncPulseAnotherTaskRunning',
           'DAQmxGetPersistedTaskAttribute',
           'DAQmxGetAIConvTimebaseSrc',
           'DAQmx_SwitchChan_MaxDCCarryPwr',
           'DAQmxErrorRequestedSignalInversionForRoutingNotPossible_Routing',
           'DAQmxErrorInvalidSubsetLengthBeforeIfElseBlockInScript',
           'DAQmxGetDigEdgeWatchdogExpirTrigEdge',
           'DAQmxSetAnlgEdgeRefTrigCoupling', 'DAQmx_AI_Rng_Low',
           'DAQmxResetRealTimeWriteRecoveryMode',
           'DAQmx_Val_Switch_Topology_1129_2_Wire_16x16_Matrix',
           'DAQmx_DI_Tristate', 'DAQmx_CI_Count',
           'DAQmxSetAIEnhancedAliasRejectionEnable',
           'DAQmxGetDigPatternRefTrigWhen',
           'DAQmxWarningPALComponentNotUnloadable',
           'DAQmxGetCIPeriodDigFltrTimebaseSrc',
           'DAQmxGetSwitchDevRelayList',
           'DAQmxResetAIBridgeBalanceFinePot',
           'DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseSrc',
           'DAQmxGetCICountEdgesDir', 'DAQmx_Val_Save_Overwrite',
           'DAQmx_Val_USBbulk', 'DAQmx_AnlgEdge_StartTrig_Slope',
           'DAQmxErrorEveryNSampsAcqIntoBufferNotForOutput',
           'DAQmxGetScaleTableScaledVals', 'DAQmxGetStartTrigDelay',
           'DAQmxGetCITCReached', 'DAQmxSetAISampAndHoldEnable',
           'DAQmxErrorCouldNotReserveLinesForSCXIControl',
           'DAQmxResetAIExcitUseForScaling',
           'DAQmx_Val_Switch_Topology_2501_2_Wire_Dual_12x1_Mux',
           'DAQmx_Exported_SyncPulseEvent_OutputTerm',
           'DAQmxErrorRangeSyntaxNumberTooBig',
           'DAQmxErrorPALResourceOwnedBySystem',
           'DAQmx_AI_Excit_VoltageOrCurrent',
           'DAQmx_AI_Lowpass_CutoffFreq', 'DAQmx_DigEdge_RefTrig_Src',
           'DAQmxErrorCantGetPropertyTaskNotRunning',
           'DAQmxErrorCannotSelfCalDuringExtCal',
           'DAQmxSaveGlobalChan',
           'DAQmxSetSampClkDigFltrTimebaseRate',
           'DAQmxErrorNoChansOfGivenTypeInTask',
           'DAQmxErrorInvalidIdentifierInListFollowingDeviceID',
           'DAQmxSetCISemiPeriodDigFltrTimebaseRate',
           'DAQmxErrorPALTransferOverwritten', 'DAQmx_AO_Max',
           'DAQmx_DigLvl_PauseTrig_DigFltr_Enable',
           'DAQmxGetPersistedScaleAllowInteractiveDeletion',
           'DAQmxErrorCalibrationFailed',
           'DAQmxErrorInvalidLineGrouping', 'DAQmx_Val_Hz',
           'DAQmxGetDeviceAttribute',
           'DAQmxGetExportedChangeDetectEventOutputTerm',
           'DAQmx_Val_Position_LVDT', 'DAQmxErrorInvalidAOChanOrder',
           'DAQmxSetAODACRefExtSrc',
           'DAQmxErrorInvalidGainBasedOnMinMax',
           'DAQmxErrorInvalidAIChanOrder', 'DAQmxSetAIThrmcplCJCVal',
           'DAQmx_CO_Pulse_Freq_Units',
           'DAQmx_Val_Switch_Topology_2501_2_Wire_4x6_Matrix',
           'DAQmxResetAIRVDTUnits',
           'DAQmxResetDigEdgeArmStartTrigDigFltrEnable',
           'DAQmxSetCIEncoderAInputTerm',
           'DAQmxSetAIRawDataCompressionType',
           'DAQmxResetArmStartTrigType',
           'DAQmxGetExportedSignalAttribute', 'DAQmxCreateCIFreqChan',
           'DAQmxGetCIEncoderAInputDigFltrMinPulseWidth',
           'DAQmxErrorPALComponentCircularDependency',
           'DAQmxErrorDigFilterIntervalNotEqualForLines',
           'DAQmx_DO_InvertLines',
           'DAQmxErrorMultipleActivePhysChansNotSupported',
           'DAQmxErrorInvalidRangeOfObjectsSyntaxInString',
           'DAQmxGetSwitchChanMaxDCVoltage',
           'DAQmxGetAnlgEdgeRefTrigLvl',
           'DAQmxErrorNoPathToDisconnect',
           'DAQmxErrorEEPROMDataInvalid',
           'DAQmx_Val_Switch_Topology_1191_Quad_4x1_Mux',
           'DAQmxGetExportedChangeDetectEventPulsePolarity',
           'DAQmxGetAIResolution', 'DAQmxResetAODataXferReqCond',
           'DAQmxGetAOLoadImpedance', 'DAQmx_Val_Temp_RTD',
           'DAQmx_AnlgWin_PauseTrig_When',
           'DAQmxResetAODACRefAllowConnToGnd',
           'DAQmxErrorAIMinTooSmall', 'DAQmxResetSwitchScanBreakMode',
           'DAQmx_AIConv_Timebase_Src',
           'DAQmxErrorInvalidWaveformLengthBeforeIfElseBlockInScript',
           'DAQmxResetExported10MHzRefClkOutputTerm',
           'DAQmxErrorRuntimeAborted_Routing', 'DAQmx_AI_Thrmstr_R1',
           'DAQmx_Val_ActiveLow', 'DAQmxSetSwitchChanUsage',
           'DAQmxSetCIPeriodTerm', 'DAQmx_Val_Task_Abort',
           'DAQmxGetCIPeriodDigFltrTimebaseRate', 'DAQmx_AI_MeasType',
           'DAQmxSetExportedAIHoldCmpltEventOutputTerm',
           'DAQmxGetAIExcitVal', 'DAQmxSetDigEdgeArmStartTrigEdge',
           'DAQmxSetAODACOffsetSrc',
           'DAQmxErrorFREQOUTCannotProduceDesiredFrequency',
           'DAQmxErrorNoRegenWhenUsingBrdMem',
           'DAQmx_Val_Switch_Topology_1130_4_Wire_64x1_Mux',
           'DAQmxError2OutputPortCombinationGivenSampTimingType653x',
           'DAQmxErrorTEDSIncompatibleSensorAndMeasType',
           'DAQmx_Val_Switch_Topology_2599_2_SPDT',
           'DAQmx_RealTime_NumOfWarmupIters',
           'DAQmxCreateAIDeviceTempChan',
           'DAQmx_Val_Switch_Topology_1193_Quad_4x1_Terminated_Mux',
           'DAQmxCreateCOPulseChanFreq',
           'DAQmx_AI_SoundPressure_Units',
           'DAQmxWarningInputTerminationOverloaded',
           'DAQmxGetAITempUnits', 'DAQmx_Val_DegC',
           'DAQmx_SampClk_ActiveEdge',
           'DAQmxErrorEmptyPhysChanInPowerUpStatesArray',
           'DAQmx_Val_DegF', 'DAQmxSetDigitalPowerUpStates',
           'DAQmxGetAOUseOnlyOnBrdMem', 'DAQmxGetAOOutputType',
           'DAQmxErrorDeviceRemoved',
           'DAQmxResetCITwoEdgeSepSecondDigFltrEnable',
           'DAQmx_Val_DegR', 'DAQmx_Val_Internal',
           'DAQmxGetRealTimeWaitForNextSampClkWaitMode',
           'DAQmxSetRealTimeConvLateErrorsToWarnings',
           'DAQmx_SwitchScan_BreakMode',
           'DAQmxErrorPALDeviceNotSupported',
           'DAQmxErrorPALRetryLimitExceeded',
           'DAQmxErrorDACRngLowNotMinusRefValNorZero',
           'DAQmxResetCOPulseTimeInitialDelay',
           'DAQmxSetCIEncoderZInputTerm', 'DAQmxGetScaleScaledUnits',
           'DAQmx_Write_SpaceAvail',
           'DAQmx_Exported_CtrOutEvent_OutputTerm',
           'DAQmxSetAITermCfg',
           'DAQmxResetExportedStartTrigOutputTerm',
           'DAQmx_CI_CtrTimebase_DigFltr_Enable',
           'DAQmxErrorChangeDetectionChanNotInTask',
           'DAQmxErrorVirtualChanDoesNotExist',
           'DAQmxErrorCannotTristateBusyTerm',
           'DAQmxResetSampClkTimebaseRate',
           'DAQmxGetCIEncoderBInputDigFltrTimebaseRate',
           'DAQmxErrorNotEnoughSampsWrittenForInitialXferRqstCondition',
           'DAQmxReadCounterScalarU32', 'DAQmx_AI_Impedance',
           'DAQmx_SwitchDev_SwitchChanList',
           'DAQmxErrorExtCalTemperatureNotDAQmx',
           'DAQmx_Val_MostRecentSamp',
           'DAQmxErrorInvalidSampAndMasterTimebaseRateCombo',
           'DAQmxErrorFinitePulseTrainNotPossible',
           'DAQmxResetAIAccelSensitivity',
           'DAQmxErrorExpectedConnectOperatorInList',
           'DAQmxWarningADCOverloaded',
           'DAQmxResetCOCtrTimebaseDigFltrEnable',
           'DAQmxErrorReadyForTransferOutputTermNotSupportedGivenTimingType',
           'DAQmxErrorInvalidSampRateConsiderRIS',
           'DAQmxSetCICtrTimebaseSrc',
           'DAQmxResetCICountEdgesDirTerm',
           'DAQmxResetAIBridgeInitialVoltage',
           'DAQmx_Val_Switch_Topology_1130_4_Wire_Quad_16x1_Mux',
           'DAQmxGetExportedHshkEventOutputTerm',
           'DAQmxErrorReferenceFrequencyInvalid',
           'DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc',
           'DAQmxErrorCalPasswordNotSupported',
           'DAQmxSetCIPulseWidthTerm',
           'DAQmxSetExportedHshkEventInterlockedDeassertDelay',
           'DAQmxResetAIConvSrc', 'DAQmx_AnlgEdge_StartTrig_Hyst',
           'DAQmxSetCIDataXferMech', 'DAQmxCreateAIAccelChan',
           'DAQmxErrorGlobalTaskNameAlreadyChanName',
           'DAQmxSetDIDigFltrEnable',
           'DAQmxErrorTableScalePreScaledValsNotSpecd',
           'DAQmxGetAILowpassCutoffFreq',
           'DAQmxErrorConnectionNotPermittedOnChanReservedForRouting',
           'DAQmxErrorZeroBasedChanIndexInvalid',
           'DAQmxWarningPALFirmwareFault',
           'DAQmx_AI_ACExcit_SyncEnable',
           'DAQmxResetHshkDelayAfterXfer',
           'DAQmxWriteAnalogScalarF64',
           'DAQmxResetCOCtrTimebaseDigFltrTimebaseRate',
           'DAQmxGetWriteTotalSampPerChanGenerated',
           'DAQmxSetCIFreqTerm', 'DAQmxSetCIPulseWidthUnits',
           'DAQmxErrorSelfCalDateTimeNotDAQmx',
           'DAQmxSetCIPeriodDigSyncEnable',
           'DAQmx_Val_Switch_Topology_2530_2_Wire_Dual_32x1_Mux',
           'DAQmx_CI_Freq_DigFltr_TimebaseSrc',
           'DAQmxResetCICountEdgesDigFltrTimebaseSrc',
           'DAQmxErrorNoSyncPulseExtSampClkTimebase',
           'DAQmxErrorValueOutOfRange',
           'DAQmxErrorDeviceDoesNotSupportDMADataXferForNonBufferedAcq',
           'DAQmxWarningPALTransferNotInProgress',
           'DAQmxErrorBufferWithHWTimedSinglePointSampMode',
           'DAQmxErrorWaveformPreviouslyAllocated',
           'DAQmxErrorAnalogWaveformExpected',
           'DAQmx_DigLvl_PauseTrig_Src',
           'DAQmxResetCIPulseWidthDigFltrEnable',
           'DAQmxResetSampClkTimebaseDiv',
           'DAQmx_AnlgEdge_StartTrig_Src',
           'DAQmxGetDIDigFltrMinPulseWidth', 'DAQmxResetAIExcitSrc',
           'DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove',
           'DAQmx_Val_ChangeDetectionEvent',
           'DAQmxErrorTaskVersionNew', 'DAQmxErrorPALHardwareFault',
           'DAQmx_AI_Rng_High', 'DAQmxResetAnlgWinRefTrigWhen',
           'DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc',
           'DAQmxSetAIChanCalVerifAcqVals',
           'DAQmxGetDIDataXferReqCond', 'DAQmxErrorPALSyncTimedOut',
           'DAQmxErrorTrigLineNotFoundSingleDevRoute',
           'DAQmxErrorFullySpecifiedPathInListContainsRange',
           'DAQmxWarningValueNotInSet',
           'DAQmxSwitchSetTopologyAndReset',
           'DAQmx_Val_Switch_Topology_2575_2_Wire_98x1_Mux',
           'DAQmx_CI_Freq_StartingEdge', 'DAQmxErrorPALMemoryFull',
           'DAQmxErrorMarkerPositionOutsideSubsetInScript',
           'DAQmxWarningPALTransferInProgress',
           'DAQmxErrorInvalidActionInControlTask',
           'DAQmxGetAOCustomScaleName',
           'DAQmxErrorMarkerPositionNotAlignedInScript',
           'DAQmxSetTimingAttribute',
           'DAQmxErrorDAQmxSignalEventTypeNotSupportedByChanTypesOrDevicesInTask',
           'DAQmxWarningPALBadWriteMode',
           'DAQmxGetSwitchDevSettlingTime',
           'DAQmxErrorPortConfiguredForOutput',
           'DAQmxErrorParsingTEDSData', 'DAQmxWarningPALOSFault',
           'DAQmxGetAIBridgeCfg', 'DAQmxGetCIPrescaler',
           'DAQmx_Write_RegenMode',
           'DAQmx_Val_Switch_Topology_2527_2_Wire_32x1_Mux',
           'DAQmxErrorInvalidTimingType',
           'DAQmxErrorOnlyFrontEndChanOpsDuringScan',
           'DAQmxCreateDOChan', 'DAQmxErrorWatchdogTimerNotSupported',
           'DAQmxErrorConfiguredTEDSInterfaceDevNotDetected',
           'DAQmxErrorCorruptedTEDSMemory', 'DAQmx_AO_ReglitchEnable',
           'DAQmx_SwitchDev_Topology',
           'DAQmxErrorLeadingUnderscoreInString',
           'DAQmx_AI_Strain_Units', 'DAQmx_Val_SameAsSampTimebase',
           'DAQmxErrorNoChansSpecdForChangeDetect',
           'DAQmxGetSwitchChanMaxDCSwitchCurrent',
           'DAQmxResetAILowpassSwitchCapOutClkDiv',
           'DAQmxSetCOPulseTicksInitialDelay',
           'DAQmx_SwitchChan_Impedance',
           'DAQmxErrorEventDelayOutOfRange',
           'DAQmxErrorPALResourceBusy',
           'DAQmxGetDigEdgeArmStartTrigDigFltrEnable',
           'DAQmxErrorTrigAIMinAIMax', 'DAQmxResetCOPulseLowTime',
           'DAQmxResetCOPulseHighTime',
           'DAQmxGetOnDemandSimultaneousAOEnable',
           'DAQmxSetScalePreScaledUnits',
           'DAQmxErrorChannelNameGenerationNumberTooBig',
           'DAQmx_Val_FirstSample', 'DAQmxSetAnlgWinPauseTrigTop',
           'DAQmxSetAICustomScaleName',
           'DAQmxErrorPortConfiguredForInput',
           'DAQmx_DigEdge_RefTrig_Edge',
           'DAQmx_Exported_HshkEvent_OutputTerm',
           'DAQmx_Read_AutoStart', 'DAQmxDisableAdvTrig',
           'DAQmx_ExtCal_LastTemp', 'DAQmxErrorPALSoftwareFault',
           'DAQmxErrorInterconnectBridgeRouteReserved',
           'DAQmx_Val_ChanForAllLines',
           'DAQmx_Val_HandshakeTriggerAsserts',
           'DAQmxErrorExtSampClkRateTooHighForBackplane',
           'DAQmx_CI_SemiPeriod_Units',
           'DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc',
           'DAQmxSetCICountEdgesActiveEdge', 'DAQmx_Val_Custom',
           'DAQmxGetAIRawSampJustification',
           'DAQmx_Val_Switch_Topology_2593_8x1_Terminated_Mux',
           'DAQmx_Val_PathStatus_Unsupported',
           'DAQmxGetAODACOffsetSrc',
           'DAQmxErrorAIDuringCounter0DMAConflict',
           'DAQmxSetAICoupling',
           'DAQmx_DigEdge_ArmStartTrig_DigSync_Enable',
           'DAQmxWarningPotentialGlitchDuringWrite',
           'DAQmx_AI_Bridge_InitialVoltage',
           'DAQmx_CI_PulseWidth_DigFltr_MinPulseWidth',
           'DAQmx_AI_Min', 'DAQmx_Val_Switch_Topology_2569_100_SPST',
           'DAQmx_AI_RVDT_Units', 'DAQmxResetCIPulseWidthTerm',
           'DAQmxErrorIncompatibleSensorOutputAndDeviceInputRanges',
           'DAQmxResetExportedAdvCmpltEventPulsePolarity',
           'DAQmxErrorPALFileWriteFault', 'DAQmx_Val_N_Type_TC',
           'DAQmxErrorTermWithoutDevInMultiDevTask',
           'DAQmxErrorNoHWTimingWithOnDemand',
           'DAQmxResetAODACRefSrc',
           'DAQmxResetExportedSampClkPulsePolarity',
           'DAQmxResetExportedSampClkTimebaseOutputTerm',
           'DAQmx_AnlgWin_PauseTrig_Top',
           'DAQmxErrorRefTrigOutputTermNotSupportedGivenTimingType',
           'DAQmxErrorExtSampClkRateTooLowForClkIn',
           'DAQmxErrorInvalidReadPosDuringRIS',
           'DAQmxErrorMarkerPosInvalidBeforeIfElseBlockInScript',
           'DAQmxErrorAcqStoppedToPreventIntermediateBufferOverflow',
           'DAQmxResetAIChanCalVerifRefVals',
           'DAQmxErrorUnexpectedIDFollowingRelayNameInList',
           'DAQmxErrorTEDSNotSupported', 'DAQmxSetReadChannelsToRead',
           'DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod',
           'DAQmx_CI_Encoder_ZInput_DigFltr_MinPulseWidth',
           'DAQmxError3InputPortCombinationGivenSampTimingType653x',
           'DAQmxErrorReadNotCompleteBefore3SampClkEdges',
           'DAQmxErrorRefTrigMasterSessionUnavailable',
           'DAQmxResetDigLvlPauseTrigDigFltrTimebaseRate',
           'DAQmxSetAIExcitSrc', 'DAQmxWaitForNextSampleClock',
           'DAQmxErrorSwitchDifferentSettlingTimeWhenScanning',
           'DAQmx_Val_Once', 'DAQmxGetSwitchChanImpedance',
           'DAQmxGetCIPeriodMeasMeth', 'DAQmx_AnlgWin_RefTrig_When',
           'DAQmxErrorCanNotPerformOpWhileTaskRunning',
           'DAQmxErrorRangeWithTooManyObjects',
           'DAQmx_AO_DataXferMech',
           'DAQmxResetCICtrTimebaseActiveEdge',
           'DAQmxSetAnlgWinRefTrigBtm', 'DAQmxSetDigEdgeAdvTrigEdge',
           'DAQmxResetTimingAttribute', 'DAQmxCfgImplicitTiming',
           'DAQmxGetExportedHshkEventInterlockedAssertOnStart',
           'DAQmxWarningCAPIStringTruncatedToFitBuffer',
           'DAQmxSetCOCtrTimebaseDigFltrTimebaseRate',
           'DAQmxErrorDevAlreadyInTask',
           'DAQmx_Val_OnbrdMemCustomThreshold',
           'DAQmxErrorInterruptsInsufficientDataXferMech',
           'DAQmxSetCIPeriodMeasTime', 'DAQmxSetAIRngLow',
           'DAQmxResetRefClkSrc',
           'DAQmxErrorCAPIReservedParamNotZero',
           'DAQmx_Val_CounterOutputEvent', 'DAQmxGetAODACRefSrc',
           'DAQmx_Val_Switch_Topology_1190_Quad_4x1_Mux',
           'DAQmxSetAnlgEdgeRefTrigLvl',
           'DAQmx_CI_Encoder_AInput_DigFltr_TimebaseRate',
           'DAQmx_AI_RTD_C', 'DAQmxCreateAIVoltageChan',
           'DAQmxErrorOutputBoardClkDCMBecameUnlocked',
           'DAQmxGetCITimestampUnits',
           'DAQmxGetAILowpassSwitchCapExtClkFreq',
           'DAQmx_AI_Freq_Hyst',
           'DAQmxGetChangeDetectDIFallingEdgePhysicalChans',
           'DAQmxErrorVirtualTEDSDataFileError',
           'DAQmxErrorInvalidRangeStatementCharInList',
           'DAQmx_Val_LossyLSBRemoval',
           'DAQmxErrorWhenAcqCompAndNoRefTrig',
           'DAQmxErrorTrigWindowAIMinAIMaxCombo',
           'DAQmx_AI_Resistance_Units', 'DAQmx_AI_Thrmcpl_CJCChan',
           'DAQmxWarningCOPrevDAQmxWriteSettingsOverwrittenForHWTimedSinglePoint',
           'DAQmxErrorReadAllAvailableDataWithoutBuffer',
           'DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate',
           'DAQmx_CI_CountEdges_DigFltr_Enable',
           'DAQmx_Val_Switch_Topology_2503_1_Wire_48x1_Mux',
           'DAQmxErrorGlobalChanCannotBeSavedSoInteractiveEditsAllowed',
           'DAQmxErrorIncorrectNumChannelsToWrite',
           'DAQmxWarningPALBadThreadMultitask',
           'DAQmx_Write_CurrWritePos', 'DAQmxSetCIPeriodStartingEdge',
           'DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseRate',
           'DAQmxSetExportedChangeDetectEventPulsePolarity',
           'DAQmx_Val_2Wire', 'DAQmxErrorDigFilterAndSyncBothEnabled',
           'DAQmxErrorCouldNotDownloadFirmwareHWDamaged',
           'DAQmxResetCITimestampUnits',
           'DAQmxErrorMinAndMaxNotSymmetric', 'DAQmx_Val_Task_Verify',
           'DAQmxErrorCAPINoExtendedErrorInfoAvailable',
           'DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandHWTimedSglPt',
           'DAQmx_Val_Switch_Topology_2598_Dual_Transfer',
           'DAQmxGetCICountEdgesDigFltrTimebaseSrc',
           'DAQmx_AnlgEdge_RefTrig_Slope', 'DAQmxGetCalInfoAttribute',
           'DAQmxErrorWriteNumChansMismatch',
           'DAQmxGetAIDitherEnable', 'DAQmx_CI_PulseWidth_Units',
           'DAQmxResetCIPeriodDigSyncEnable',
           'DAQmx_PersistedScale_Author',
           'DAQmxErrorUnableToDetectExtStimulusFreqDuringCal',
           'DAQmxErrorGetPropertyNotInputBufferedTask',
           'DAQmxSetCOCtrTimebaseDigFltrEnable',
           'DAQmx_AO_DAC_Offset_Val', 'DAQmxSetAIFreqUnits',
           'DAQmxErrorInvalidCalGain',
           'DAQmx_Val_Switch_Topology_2532_2_Wire_4x64_Matrix',
           'DAQmx_DI_DigFltr_Enable', 'DAQmx_Val_X4',
           'DAQmx_Dev_IsSimulated', 'DAQmx_Val_X1', 'DAQmx_Val_X2',
           'DAQmxSetAIStrainGageCfg',
           'DAQmxWarningCounter0DMADuringAIConflict',
           'DAQmxResetWatchdogTimeout', 'DAQmxResetAIDitherEnable',
           'DAQmxGetAISampAndHoldEnable',
           'DAQmxGetDigEdgeStartTrigSrc',
           'DAQmxErrorChanSizeTooBigForU8PortWrite',
           'DAQmxSetCOPulseHighTicks', 'DAQmxWriteBinaryU16',
           'DAQmxSetAIChanCalPolyForwardCoeff',
           'DAQmxGetAIConvActiveEdge',
           'DAQmxSetCICountEdgesDigSyncEnable',
           'DAQmxCfgAnlgEdgeStartTrig', 'DAQmxErrorPALComponentBusy',
           'DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthByAnotherTask1PerDev',
           'DAQmxWarningChanCalExpired', 'DAQmxSetCalUserDefinedInfo',
           'DAQmxErrorEmptyString', 'DAQmx_AO_DAC_Offset_ExtSrc',
           'DAQmxGetReadDigitalLinesBytesPerChan',
           'DAQmxResetAIConvTimebaseDiv',
           'DAQmxGetPhysicalChanTEDSModelNum',
           'DAQmxGetSampClkDigSyncEnable',
           'DAQmxGetSwitchChanMaxACSwitchPwr',
           'DAQmxErrorInputFIFOOverflow',
           'DAQmxSetAIAccelSensitivityUnits',
           'DAQmx_CI_LinEncoder_InitialPos',
           'DAQmxResetAnlgWinPauseTrigBtm',
           'DAQmxResetWriteRelativeTo', 'DAQmx_Val_J_Type_TC',
           'DAQmx_Val_Switch_Topology_1160_16_SPDT',
           'DAQmxResetAIExcitActualVal', 'DAQmxErrorPALBadSelector',
           'DAQmxSetSampClkTimebaseSrc',
           'DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseSrc',
           'DAQmxResetChangeDetectDIRisingEdgePhysicalChans',
           'DAQmxErrorWriteWhenTaskNotRunningCOFreq',
           'DAQmxGetExportedSampClkPulsePolarity',
           'DAQmxGetSwitchChanMaxDCSwitchPwr', 'int64',
           'DAQmxErrorChanCalExpired', 'DAQmxGetDigEdgeStartTrigEdge',
           'DAQmxIsReadOrWriteLate',
           'DAQmx_AI_Microphone_Sensitivity',
           'DAQmxErrorSuitableTimebaseNotFoundTimeCombo2',
           'DAQmxGetDigEdgeArmStartTrigDigSyncEnable',
           'DAQmx_Val_Temp_TC', 'DAQmxSetAnlgWinRefTrigSrc',
           'DAQmxGetExportedCtrOutEventPulsePolarity',
           'DAQmxSetCIFreqMeasMeth', 'DAQmxErrorAttrCannotBeRead',
           'DAQmxWarningSampValCoercedToMin',
           'DAQmxErrorNoChangeDetectOnNonInputDigLineForDev',
           'DAQmx_Val_Switch_Topology_1129_2_Wire_Quad_4x16_Matrix',
           'DAQmxResetAIChanCalTablePreScaledVals',
           'DAQmxResetAIConvActiveEdge',
           'DAQmxErrorDAQmxSWEventsWithDifferentCallMechanisms',
           'DAQmxGetScaleLinYIntercept',
           'DAQmxErrorRoutingPathNotAvailable',
           'DAQmxErrorCantMaintainExistingValueAOSync',
           'DAQmxGetCICtrTimebaseActiveEdge',
           'DAQmxErrorDevCannotBeAccessed', 'DAQmx_Val_Poll',
           'DAQmx_CO_CtrTimebase_DigFltr_MinPulseWidth',
           'DAQmxErrorUnitsNotFromCustomScale',
           'DAQmx_SampClk_Timebase_ActiveEdge',
           'DAQmxErrorMultiDevsInTask', 'DAQmxResetCICtrTimebaseSrc',
           'DAQmxResetBufOutputOnbrdBufSize',
           'DAQmx_DigPattern_RefTrig_Pattern',
           'DAQmxErrorCVIFailedToLoadDAQmxDLL',
           'DAQmxErrorInvalidCfgCalAdjustDirectPathOutputImpedance',
           'DAQmxSetDelayFromSampClkDelayUnits',
           'DAQmxSetAIChanCalCalDate',
           'DAQmx_Val_Switch_Topology_2527_Independent',
           'DAQmxSetScaleMapPreScaledMax',
           'DAQmxErrorNoDevMemForWaveform',
           'DAQmxGetBufOutputOnbrdBufSize',
           'DAQmxErrorCannotSetPropertyWhenHWTimedSinglePointTaskIsRunning',
           'DAQmxSetDITristate', 'DAQmxSetCIAngEncoderInitialAngle',
           'DAQmxSetWriteRelativeTo', 'DAQmxSetReadRelativeTo',
           'DAQmx_Val_Toggle',
           'DAQmxErrorExportSignalPolarityNotSupportedByHW',
           'DAQmx_Val_External', 'DAQmxGetAIRVDTSensitivity',
           'DAQmxResetDigEdgeStartTrigDigSyncEnable',
           'DAQmxGetDODataXferMech',
           'DAQmxErrorChannelNameNotSpecifiedInList',
           'DAQmxSetAIRTDR0', 'DAQmxErrorRefAndPauseTrigConfigured',
           'DAQmx_AI_Dither_Enable', 'DAQmxResetAOUseOnlyOnBrdMem',
           'DAQmxGetCIEncoderAInputDigFltrTimebaseSrc',
           'DAQmx_AnlgWin_StartTrig_Btm',
           'DAQmxGetCIEncoderAInputDigSyncEnable',
           'DAQmxErrorPALValueConflict',
           'DAQmxErrorInvalidDigDataWrite', 'DAQmxGetAICoupling',
           'DAQmxSetExportedCtrOutEventOutputTerm',
           'DAQmxSetScaleTablePreScaledVals', 'DAQmx_Val_Cont',
           'DAQmxGetAIRawSampSize', 'DAQmx_Scale_Table_ScaledVals',
           'DAQmxSetReadWaitMode',
           'DAQmxSetExportedSampClkPulsePolarity',
           'DAQmxErrorPALBusResetOccurred', 'DAQmx_CI_Freq_Div',
           'DAQmxGetCITwoEdgeSepSecondDigSyncEnable',
           'DAQmxResetCIAngEncoderInitialAngle',
           'DAQmxSetCIPulseWidthDigFltrTimebaseSrc',
           'DAQmxResetStartTrigType', 'DAQmxResetAODACRefConnToGnd',
           'DAQmxErrorDigInputOverrun', 'DAQmxSetAIThrmstrC',
           'DAQmxSetAIThrmstrB', 'DAQmxSetAIThrmstrA',
           'DAQmxReadBinaryI16', 'DAQmxErrorPALBadCount',
           'DAQmxErrorPALOSInitializationFault',
           'DAQmxGetAIChanCalTablePreScaledVals',
           'DAQmxGetSampClkTimebaseMasterTimebaseDiv',
           'DAQmx_Val_Table', 'DAQmx_Val_R_Type_TC',
           'DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove',
           'DAQmxErrorNoAvailTrigLinesOnDevice',
           'DAQmx_AnlgEdge_RefTrig_Lvl',
           'DAQmxErrorCalFunctionNotSupported',
           'DAQmxDeleteSavedGlobalChan', 'DAQmxErrorPrimingCfgFIFO',
           'DAQmxGetExportedAdvTrigOutputTerm',
           'DAQmxErrorSampClkRateUnavailable',
           'DAQmx_Exported_AIHoldCmpltEvent_PulsePolarity',
           'DAQmxErrorReadDataTypeTooSmall',
           'DAQmxErrorAcqStoppedToPreventInputBufferOverwriteOneDataXferMech',
           'DAQmxGetAIInputSrc', 'DAQmxSwitchGetSingleRelayCount',
           'DAQmxGetCICountEdgesDigFltrEnable',
           'DAQmxErrorInvalidExtClockFreqAndDivCombo',
           'DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc',
           'DAQmx_Task_Channels',
           'DAQmx_Val_Switch_Topology_1129_2_Wire_Dual_8x16_Matrix',
           'DAQmxErrorResourcesInUseForProperty_Routing',
           'DAQmx_Watchdog_DO_ExpirState',
           'DAQmxGetCIEncoderDecodingType', 'DAQmx_Val_IRIGB',
           'DAQmxResetCICountEdgesDigFltrTimebaseRate',
           'DAQmxAdjustDSAAOCal', 'DAQmxResetCITwoEdgeSepFirstTerm',
           'DAQmxErrorPatternMatcherMayBeUsedByOneTrigOnly',
           'DAQmxGetCIPeriodMeasTime', 'DAQmx_Val_Pt3916',
           'DAQmxSetDigEdgeArmStartTrigDigSyncEnable',
           'DAQmxResetAIBridgeNomResistance',
           'DAQmxGetCIEncoderBInputDigFltrEnable',
           'DAQmxErrorInvalidAttributeValue',
           'DAQmxResetAIChanCalOperatorName',
           'DAQmxErrorNoCommonTrigLineForRoute_Routing',
           'DAQmxGetCIMax',
           'DAQmxErrorInversionNotSupportedByHW_Routing',
           'DAQmxResetCIEncoderZIndexPhase',
           'DAQmx_SwitchDev_PwrDownLatchRelaysAfterSettling',
           'DAQmxResetCOAutoIncrCnt',
           'DAQmxSetSyncPulseMinDelayToStart',
           'DAQmxResetAODACOffsetSrc',
           'DAQmxGetPhysicalChanTEDSVersionNum',
           'DAQmxErrorOutputFIFOUnderflow2',
           'DAQmxResetExportedAdvTrigPulseWidthUnits',
           'DAQmxResetCIPeriodTerm', 'DAQmx_AI_DevScalingCoeff',
           'DAQmx_Read_WaitMode',
           'DAQmx_Exported_20MHzTimebase_OutputTerm',
           'DAQmx_AI_Excit_DCorAC',
           'DAQmxResetDigEdgeWatchdogExpirTrigSrc',
           'DAQmxErrorDigSyncNotAvailableOnTerm',
           'DAQmxResetExportedSampClkOutputBehavior',
           'DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2',
           'DAQmxResetCIEncoderAInputDigFltrEnable',
           'DAQmx_AIConv_Src', 'DAQmx_SampTimingType',
           'DAQmxWarningPALDispatcherAlreadyExported',
           'DAQmxGetAnlgLvlPauseTrigWhen', 'DAQmxSetCIPeriodMeasMeth',
           'DAQmxSetCIPulseWidthDigFltrEnable',
           'DAQmxGetCOCtrTimebaseMasterTimebaseDiv',
           'DAQmxWarningPALBadDataSize', 'DAQmxErrorPALBadWindowType',
           'DAQmxErrorExtCalAdjustExtRefVoltageFailed',
           'DAQmxGetCIEncoderBInputTerm',
           'DAQmxErrorUnsupportedSignalTypeExportSignal',
           'DAQmxCreateCIPeriodChan', 'DAQmx_Val_SampleClock',
           'DAQmxErrorTimeoutExceeded',
           'DAQmxErrorWaveformWriteOutOfBounds',
           'DAQmxErrorRoutingDestTermPXIStarInSlot2',
           'DAQmx_Val_Switch_Topology_1167_Independent',
           'DAQmxResetSampClkDigFltrTimebaseSrc',
           'DAQmxResetAIConvRate',
           'DAQmxErrorMStudioPropertyGetWhileTaskNotVerified',
           'DAQmxErrorCounterNoTimebaseEdgesBetweenGates',
           'DAQmxSetSampQuantSampMode',
           'DAQmxErrorHWTimedSinglePointOddNumChansInAITask',
           'DAQmxErrorRangeWithoutAConnectActionInList',
           'DAQmxErrorInvalidCfgCalAdjustMainPathOutputImpedance',
           'DAQmxErrorPALMessageQueueFull',
           'DAQmxEveryNSamplesEventCallbackPtr',
           'DAQmxResetCIPeriodMeasMeth',
           'DAQmx_AnlgLvl_PauseTrig_Hyst',
           'DAQmxErrorCOInvalidTimingSrcDueToSignal',
           'DAQmxSetAILowpassSwitchCapClkSrc',
           'DAQmxResetCOPulseHighTicks', 'DAQmxGetChanType',
           'DAQmxErrorPALBadDevice',
           'DAQmxErrorNoInputOnPortCfgdForWatchdogOutput',
           'DAQmx_Val_Finite', 'DAQmxGetAODACRngLow',
           'DAQmx_AI_RawDataCompressionType',
           'DAQmxErrorTrigLineNotFoundSingleDevRoute_Routing',
           'DAQmxResetRealTimeReportMissedSamp',
           'DAQmxGetCIFreqDigFltrMinPulseWidth',
           'DAQmx_Val_Voltage_CustomWithExcitation',
           'DAQmxGetPersistedChanAttribute',
           'DAQmxErrorPALMemoryAlignmentFault',
           'DAQmxCreateCOPulseChanTicks',
           'DAQmxResetCIPeriodStartingEdge',
           'DAQmxErrorInvalidRefClkRate',
           'DAQmxSignalEventCallbackPtr',
           'DAQmxGetDigLvlPauseTrigDigFltrTimebaseRate',
           'DAQmxGetExportedAIConvClkOutputTerm',
           'DAQmxResetCISemiPeriodDigSyncEnable',
           'DAQmxErrorDeviceDoesNotSupportScanning',
           'DAQmxResetRefTrigPretrigSamples',
           'DAQmxSetAICurrentShuntResistance', 'DAQmxResetAIRngHigh',
           'DAQmxWarningRateViolatesMaxADCRate',
           'DAQmxErrorWhenAcqCompAndNumSampsPerChanExceedsOnBrdBufSize',
           'DAQmx_Val_CountUp', 'DAQmxErrorPALResourceAmbiguous',
           'DAQmxResetAILowpassSwitchCapExtClkDiv',
           'DAQmx_AI_SoundPressure_MaxSoundPressureLvl',
           'DAQmxSetCICountEdgesDigFltrEnable', 'DAQmxErrorDCMLock',
           'DAQmxErrorTwoWaitForTrigsAfterConnectionInScanlist',
           'DAQmx_Val_WriteToPROM',
           'DAQmx_CI_Encoder_AInput_DigSync_Enable',
           'DAQmx_ExtCal_RecommendedInterval',
           'DAQmx_Val_Switch_Topology_1130_2_Wire_4x32_Matrix',
           'DAQmx_Val_Switch_Topology_1193_Dual_16x1_Mux',
           'DAQmx_Hshk_StartCond',
           'DAQmx_CI_CountEdges_CountDir_DigSync_Enable',
           'DAQmxResetExportedChangeDetectEventPulsePolarity',
           'DAQmxGetExportedRefTrigOutputTerm',
           'DAQmxErrorInvalidSampClkSrc',
           'DAQmx_SampClk_Timebase_Rate', 'DAQmxErrorCtrMinMax',
           'DAQmx_Val_OnBrdMemEmpty',
           'DAQmx_Val_Switch_Topology_1128_2_Wire_32x1_Mux',
           'DAQmxSetExportedCtrOutEventOutputBehavior',
           'DAQmxErrorInvalidCalArea',
           'DAQmxErrorCannotGetPropertyWhenTaskNotCommittedOrRunning',
           'DAQmxGetAIStrainGageGageFactor',
           'DAQmxGetPersistedTaskAuthor',
           'DAQmxResetAIRawDataCompressionType',
           'DAQmxErrorCantSaveNonPortMultiLineDigChanSoInteractiveEditsAllowed',
           'DAQmxResetReadReadAllAvailSamp',
           'DAQmxSetAIConvTimebaseSrc',
           'DAQmxErrorInputFIFOUnderflow',
           'DAQmxErrorLinesUsedForStaticInputNotForHandshakingControl',
           'DAQmxCreateTEDSAIThrmcplChan',
           'DAQmxGetAIBridgeBalanceCoarsePot',
           'DAQmxErrorDSFReadyForOutputNotAsserted',
           'DAQmx_AI_RTD_R0', 'DAQmx_Val_QuarterBridgeII',
           'DAQmx_SwitchChan_MaxDCCarryCurrent',
           'DAQmxSetScaleTableScaledVals',
           'DAQmxGetDigEdgeRefTrigSrc',
           'DAQmxGetCOCtrTimebaseActiveEdge',
           'DAQmxGetCIEncoderBInputDigFltrMinPulseWidth',
           'DAQmxGetExportedSampClkOutputTerm', 'DAQmx_AdvTrig_Type',
           'DAQmxSetAOReglitchEnable', 'DAQmxErrorPALComponentTooNew',
           'DAQmxErrorInconsistentChannelDirections',
           'DAQmxErrorExplanationNotFound',
           'DAQmxGetCIPulseWidthTerm',
           'DAQmx_Val_MaintainExistingValue',
           'DAQmx_Read_TotalSampPerChanAcquired',
           'DAQmxErrorSampRateTooHigh',
           'DAQmxErrorExpectedNumberOfChannelsVerificationFailed',
           'DAQmxErrorDataSizeMoreThanSizeOfEEPROMOnTEDS',
           'DAQmxErrorRoutingSrcTermPXIStarInSlot2_Routing',
           'DAQmx_Val_Switch_Topology_2530_2_Wire_Quad_16x1_Mux',
           'DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate',
           'DAQmxGetWriteDigitalLinesBytesPerChan',
           'DAQmxSetExportedHshkEventPulsePolarity',
           'DAQmxErrorNoCommonTrigLineForImmedRoute',
           'DAQmxSetAIFreqHyst', 'DAQmx_SwitchChan_MaxACVoltage',
           'DAQmxGetSwitchScanBreakMode',
           'DAQmxSetReadReadAllAvailSamp', 'DAQmxErrorPALBusError',
           'DAQmxResetCISemiPeriodDigFltrMinPulseWidth',
           'DAQmxGetAIRVDTSensitivityUnits',
           'DAQmxSendSoftwareTrigger',
           'DAQmx_AI_ChanCal_HasValidCalInfo', 'uInt8',
           'DAQmxSetAIMin',
           'DAQmxErrorAttributeNotSettableWhenTaskIsRunning',
           'DAQmxErrorRefTrigTypeNotSupportedGivenTimingType',
           'DAQmx_Val_Transferred_From_Buffer',
           'DAQmxErrorSCXI1126ThreshHystCombination',
           'DAQmx_Val_AandB', 'DAQmx_Val_ClearExpiration',
           'DAQmxErrorCustomScaleDoesNotExist',
           'DAQmx_CO_CtrTimebaseMasterTimebaseDiv',
           'DAQmxGetSampQuantSampMode',
           'DAQmxGetCICountEdgesDigFltrMinPulseWidth',
           'DAQmxGetAOVoltageUnits',
           'DAQmxErrorNoAdvTrigForMultiDevScan',
           'DAQmxResetSampQuantSampPerChan',
           'DAQmx_CI_TwoEdgeSep_Units',
           'DAQmxErrorTooManyChansForAnalogPauseTrig',
           'DAQmxResetCITimestampInitialSeconds',
           'DAQmxGetAIBridgeShuntCalEnable',
           'DAQmxResetAIStrainGageGageFactor',
           'DAQmxWarningPALResourceAmbiguous', 'DAQmx_AI_TEDS_Units',
           'DAQmxErrorInvalidPhysChanType',
           'DAQmxSetDigEdgeRefTrigSrc',
           'DAQmxErrorCannotStoreCalConst',
           'DAQmxResetAOReglitchEnable', 'DAQmx_Val_Pt3851',
           'DAQmxSetAIVoltageUnits', 'DAQmx_CO_Pulse_Time_Units',
           'DAQmx_Val_Switch_Topology_1175_2_Wire_98x1_Mux',
           'DAQmxGetAIThrmcplCJCChan',
           'DAQmxResetCIEncoderBInputDigSyncEnable',
           'DAQmxGetSwitchChanMaxACCarryCurrent',
           'DAQmxErrorHWTimedSinglePointAOAndDataXferNotProgIO',
           'DAQmx_Val_GND', 'DAQmxErrorSwitchNotResetBeforeScan',
           'DAQmxErrorTaskNotInDataNeighborhood',
           'DAQmxResetAODACRngHigh', 'DAQmxErrorHystTrigLevelAIMin',
           'DAQmx_Exported_AdvTrig_Pulse_WidthUnits',
           'DAQmxErrorDifferentInternalAIInputSources',
           'DAQmxSetExportedAIHoldCmpltEventPulsePolarity',
           'DAQmx_SwitchChan_MaxDCSwitchCurrent',
           'DAQmxGetDigPatternStartTrigWhen',
           'DAQmxErrorRepeatedAIPhysicalChan',
           'DAQmxGetMasterTimebaseRate',
           'DAQmxResetCICtrTimebaseMasterTimebaseDiv',
           'DAQmx_AO_DAC_Ref_Val', 'DAQmx_AnlgWin_RefTrig_Coupling',
           'DAQmxErrorDigInputNotSupported',
           'DAQmxGetCICountEdgesInitialCnt',
           'DAQmxResetCICountEdgesDigFltrEnable',
           'DAQmxResetReadChannelsToRead',
           'DAQmxErrorSampClkOutputTermIncludesStartTrigSrc',
           'DAQmxResetAOMemMapEnable',
           'DAQmxErrorCantResetExpiredWatchdog',
           'DAQmxErrorInvalidSyntaxForPhysicalChannelRange',
           'DAQmxErrorCODAQmxWriteMultipleChans',
           'DAQmxSetCITwoEdgeSepSecondTerm',
           'DAQmx_Val_HandshakeTriggerDeasserts', 'DAQmx_CI_MeasType',
           'DAQmxGetDigPatternRefTrigPattern', 'TRUE',
           'DAQmxErrorBracketPairingMismatchInList',
           'DAQmxResetAIACExcitSyncEnable',
           'DAQmxErrorMasterTbRateMasterTbSrcMismatch',
           'DAQmx_Val_K_Type_TC', 'DAQmxSetAOMax',
           'DAQmxResetCIFreqUnits', 'DAQmxSetAILVDTSensitivity',
           'DAQmxErrorTEDSLegacyTemplateIDInvalidOrUnsupported',
           'DAQmxResetAIAtten', 'DAQmx_CI_CountEdges_ActiveEdge',
           'DAQmxErrorCannotTristateTerm_Routing',
           'DAQmxSetCIFreqDigSyncEnable',
           'DAQmxResetCICountEdgesDigSyncEnable',
           'DAQmxErrorInvalidWaitDurationBeforeIfElseBlockInScript',
           'DAQmx_CI_SemiPeriod_Term', 'DAQmxGetReadAutoStart',
           'DAQmx_AI_LossyLSBRemoval_CompressedSampSize',
           'DAQmxErrorSuppliedCurrentDataOutsideSpecifiedRange',
           'DAQmxErrorSampPerChanNotMultipleOfIncr',
           'DAQmxGetChanDescr', 'DAQmxSetCOPulseLowTicks',
           'DAQmx_Val_Chan', 'DAQmxResetCOPulseTimeUnits',
           'DAQmxErrorEveryNSampsTransferredFromBufferNotForInput',
           'DAQmxSetCIEncoderZInputDigSyncEnable',
           'DAQmxErrorCOSampModeSampTimingTypeSampClkConflict',
           'DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunning',
           'DAQmx_StartTrig_Retriggerable',
           'DAQmxSetRealTimeAttribute',
           'DAQmx_Val_Switch_Topology_1130_2_Wire_Octal_16x1_Mux',
           'DAQmx_Exported_HshkEvent_Interlocked_DeassertDelay',
           'DAQmxGetAIStrainGageCfg',
           'DAQmx_CI_CountEdges_DigFltr_TimebaseSrc',
           'DAQmxErrorLines4To7ConfiguredForOutput',
           'DAQmx_Val_SampleCompleteEvent', 'DAQmxSetAIChanCalDesc',
           'DAQmxSetAOVoltageUnits',
           'DAQmxErrorAnalogMultiSampWriteNotSupported',
           'DAQmxWarningPALIrrelevantAttribute',
           'DAQmx_Exported_AIHoldCmpltEvent_OutputTerm',
           'DAQmxErrorOperationOnlyPermittedWhileScanning',
           'DAQmxResetExportedRdyForXferEventLvlActiveLvl',
           'DAQmx_CI_Prescaler',
           'DAQmxErrorReversePolynomialCoefNotSpecd',
           'DAQmxResetCITwoEdgeSepSecondDigSyncEnable',
           'DAQmx_Val_OnBrdMemHalfFullOrLess',
           'DAQmxErrorOnDemandNotSupportedWithHWTimedSinglePoint',
           'DAQmxGetScalePolyReverseCoeff',
           'DAQmxGetPhysicalChanTEDSBitStream',
           'DAQmxErrorRoutingNotSupportedForDevice',
           'DAQmx_PhysicalChan_TEDS_VersionNum',
           'DAQmxSetAILowpassSwitchCapExtClkFreq',
           'DAQmxErrorReadBufferTooSmall',
           'DAQmxErrorInternalTimebaseSourceRateCombo',
           'DAQmx_Val_E_Type_TC',
           'DAQmxGetChangeDetectDIRisingEdgePhysicalChans',
           'DAQmxErrorRoutingDestTermPXIStarInSlot2_Routing',
           'DAQmxResetAIStrainGageCfg', 'DAQmxSetTrigAttribute',
           'DAQmxErrorReferenceCurrentInvalid',
           'DAQmxSetCIEncoderAInputDigFltrMinPulseWidth',
           'DAQmxResetReadAttribute', 'DAQmx_Val_Pt3928',
           'DAQmx_Val_PathStatus_AlreadyExists',
           'DAQmxErrorWaitModeValueNotSupportedNonBuffered',
           'DAQmx_Val_Pt3920', 'DAQmxErrorSCXIModuleIncorrect',
           'DAQmx_CI_LinEncoder_Units',
           'DAQmxSetAILowpassSwitchCapOutClkDiv',
           'DAQmxGetDONumLines',
           'DAQmxSetAILossyLSBRemovalCompressedSampSize',
           'DAQmx_Val_Polynomial',
           'DAQmxSetCITimestampInitialSeconds',
           'DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalNoIrqOnDev',
           'DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate',
           'DAQmxGetCOAutoIncrCnt', 'DAQmxSetDODataXferReqCond',
           'DAQmxCfgAnlgWindowRefTrig',
           'DAQmxErrorCAPICannotRegisterSyncEventsFromMultipleThreads',
           'DAQmxErrorPrptyGetSpecdActiveChanFailedDueToDifftVals',
           'DAQmxErrorTimebaseCalFreqVarianceTooLarge',
           'DAQmx_DigLvl_PauseTrig_DigFltr_MinPulseWidth',
           'DAQmxErrorPALMemoryPageLockFailed',
           'DAQmxErrorNoRefTrigConfigured',
           'DAQmxSetDigPatternRefTrigPattern',
           'DAQmxErrorPALThreadControllerIsNotThreadCreator',
           'DAQmxResetExportedSyncPulseEventOutputTerm',
           'DAQmxError3OutputPortCombinationGivenSampTimingType653x',
           'DAQmx_Write_WaitMode', 'DAQmx_CO_Prescaler',
           'DAQmxErrorAIEveryNSampsEventIntervalNotMultipleOf2',
           'DAQmxGetCIPulseWidthDigFltrEnable', 'DAQmx_AI_LVDT_Units',
           'DAQmxErrorLines0To3ConfiguredForInput', 'DAQmx_Val_DMA',
           'DAQmx_DigPattern_RefTrig_When',
           'DAQmxGetSwitchChanMaxACCarryPwr',
           'DAQmxErrorTopologyNotSupportedByCfgTermBlock',
           'DAQmxGetAIBridgeInitialVoltage', 'float64',
           'DAQmx_Val_Accelerometer',
           'DAQmxSetAnlgLvlPauseTrigCoupling', 'DAQmx_CI_Period_Div',
           'DAQmxResetCICountEdgesCountDirDigSyncEnable',
           'DAQmxWarningPALBadReadMode', 'DAQmx_DO_DataXferMech',
           'DAQmxResetSampClkRate', 'DAQmxGetAIRngLow',
           'DAQmxResetDigLvlPauseTrigDigFltrMinPulseWidth',
           'DAQmxResetWatchdogDOExpirState',
           'DAQmxGetAODACRefConnToGnd', 'DAQmx_AIConv_TimebaseDiv',
           'DAQmxSetAIChanCalScaleType', 'DAQmxGetSelfCalSupported',
           'DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2_Routing',
           'DAQmxErrorDevNotInTask',
           'DAQmx_Val_Switch_Topology_2501_1_Wire_48x1_Mux',
           'DAQmxGetPersistedTaskAllowInteractiveDeletion',
           'DAQmxErrorStrainGageCalibration',
           'DAQmxGetCOCtrTimebaseDigFltrTimebaseRate',
           'DAQmxErrorChanNotInTask',
           'DAQmxErrorPALCalculationOverflow',
           'DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth',
           'DAQmxGetAODACOffsetExtSrc', 'DAQmx_CI_CtrTimebaseSrc',
           'DAQmxResetAIExcitDCorAC', 'DAQmxGetCOCtrTimebaseRate',
           'DAQmxErrorSampleTimingTypeAndDataXferMode',
           'DAQmxErrorDevOnlySupportsSampClkTimingAI',
           'DAQmxSetCOPulseIdleState',
           'DAQmxErrorPhysicalChanNotSupportedGivenSampTimingType653x',
           'DAQmxErrorDevOnlySupportsSampClkTimingAO',
           'DAQmxGetSwitchChanBandwidth',
           'DAQmx_PhysicalChan_TEDS_TemplateIDs',
           'DAQmxErrorInvalidExcitValForScaling',
           'DAQmxErrorReferenceResistanceInvalid',
           'DAQmx_AO_Current_Units',
           'DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2_Routing',
           'DAQmxErrorCannotWriteAfterStartWithOnboardMemory',
           'DAQmxErrorMultiChanTypesInTask', 'DAQmx_Val_NoChange',
           'DAQmxErrorResourceAlreadyReserved',
           'DAQmxErrorNumSampsToWaitNotGreaterThanZeroInScript',
           'DAQmxErrorCannotCalculateNumSampsTaskNotStarted',
           'DAQmxErrorMemMapAndHWTimedSinglePoint',
           'DAQmx_DigEdge_StartTrig_DigFltr_Enable',
           'DAQmxGetExportedAdvCmpltEventPulseWidth',
           'DAQmxSetAIChanCalEnableCal',
           'DAQmxWarningPALResourceNotAvailable',
           'DAQmxGetAIBridgeShuntCalSelect',
           'DAQmxGetDigEdgeWatchdogExpirTrigSrc',
           'DAQmxErrorInvalidIdentifierInListAtEndOfSwitchAction',
           'DAQmxErrorExternalTimebaseRateNotKnownForDelay',
           'DAQmxGetHshkSampleInputDataWhen',
           'DAQmxGetInterlockedHshkTrigAssertedLvl',
           'DAQmx_CO_CtrTimebase_DigSync_Enable',
           'DAQmxGetCIEncoderZInputDigSyncEnable',
           'DAQmxResetAnlgWinRefTrigTop', 'DAQmx_CI_CountEdges_Dir',
           'DAQmxGetAIExcitSrc', 'DAQmxSetAdvTrigType',
           'DAQmxResetAILeadWireResistance',
           'DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo2',
           'DAQmxErrorPALBadLibrarySpecifier',
           'DAQmxErrorInvalidCalConstCalADCAdjustment',
           'DAQmxErrorCalChanForwardPolyCoefNotSpecd',
           'DAQmxResetDITristate', 'DAQmxSetAODACRefConnToGnd',
           'DAQmxResetCIEncoderZIndexEnable',
           'DAQmxErrorTooManyPretrigPlusMinPostTrigSamps',
           'DAQmxWarningPretrigCoercion', 'DAQmx_Val_PatternMatches',
           'DAQmxCfgDigPatternRefTrig', 'DAQmxResetWriteSleepTime',
           'DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc',
           'DAQmx_CO_Pulse_LowTicks',
           'DAQmxErrorDriverDeviceGUIDNotFound_Routing',
           'DAQmx_Val_Switch_Topology_2566_16_SPDT',
           'DAQmxErrorTooManyPostTrigSampsPerChan',
           'DAQmxResetAnlgEdgeStartTrigSlope',
           'DAQmxSetAIResistanceUnits', 'DAQmxGetAIDataXferMech',
           'DAQmxErrorAIConvRateTooHigh',
           'DAQmxResetDigLvlPauseTrigDigFltrTimebaseSrc',
           'DAQmxGetAICurrentShuntLoc',
           'DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth',
           'DAQmxResetAILVDTSensitivity',
           'DAQmxErrorCppDotNetAPINegativeBufferSize',
           'DAQmx_Val_Switch_Topology_2584_1_Wire_15x1_Mux',
           'DAQmxSetReadSleepTime', 'DAQmx_PersistedTask_Author',
           'DAQmxError2InputPortCombinationGivenSampTimingType653x',
           'DAQmx_AO_DAC_Rng_Low',
           'DAQmxErrorCppCantRemoveOtherObjectsEventHandler',
           'DAQmxGetCIAngEncoderUnits', 'DAQmxGetRefTrigType',
           'DAQmx_AnlgLvl_PauseTrig_Src', 'DAQmxGetSwitchDevSettled',
           'DAQmxErrorStartTrigTypeNotSupportedGivenTimingType',
           'DAQmxErrorPALLogicalBufferEmpty',
           'DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate',
           'DAQmxResetAISoundPressureUnits',
           'DAQmx_AI_Lowpass_SwitchCap_ExtClkDiv',
           'DAQmx_Sys_NIDAQMajorVersion',
           'DAQmxSetAILowpassCutoffFreq',
           'DAQmxResetAIDataXferReqCond',
           'DAQmxGetInterlockedHshkTrigSrc',
           'DAQmxErrorAOMinMaxNotSupportedDACRangeTooSmall',
           'DAQmxGetExportedSampClkTimebaseOutputTerm',
           'DAQmxSetPauseTrigType', 'DAQmxGetCIGPSSyncSrc',
           'DAQmxSetBufOutputBufSize', 'DAQmx_CI_CtrTimebaseRate',
           'DAQmxSetSwitchChanAttribute',
           'DAQmx_Exported_AdvCmpltEvent_Pulse_Width',
           'DAQmx_Exported_AdvTrig_Pulse_Polarity',
           'DAQmx_Val_MetersPerSecondSquared',
           'DAQmxResetExportedWatchdogExpiredEventOutputTerm',
           'DAQmxErrorPowerupTristateNotSpecdForEntirePort',
           'DAQmxResetWatchdogAttribute',
           'DAQmx_Val_SameAsMasterTimebase',
           'DAQmxWarningPALBadSelector', 'DAQmx_Val_AHighBHigh',
           'DAQmxSetAIDitherEnable',
           'DAQmx_Read_DigitalLines_BytesPerChan',
           'DAQmx_CO_Pulse_Ticks_InitialDelay',
           'DAQmx_SampQuant_SampMode',
           'DAQmxErrorNoPathAvailableBetween2SwitchChans',
           'DAQmxCreateMapScale',
           'DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc',
           'DAQmxErrorAOBufferSizeZeroForSampClkTimingType',
           'DAQmxErrorCIInvalidTimingSrcForEventCntDueToSampMode',
           'DAQmxErrorPALSocketListenerInvalid',
           'DAQmxGetSampClkActiveEdge', 'DAQmxResetCIPeriodUnits',
           'DAQmxGetAIMin', 'DAQmxSetAnlgEdgeRefTrigHyst',
           'DAQmxResetCIPeriodDiv', 'DAQmxResetSwitchScanRepeatMode',
           'DAQmxErrorPALCommunicationsFault',
           'DAQmxSetCITwoEdgeSepSecondDigFltrEnable',
           'DAQmx_AI_ChanCal_Poly_ReverseCoeff',
           'DAQmxErrorUnexpectedSwitchActionInList',
           'DAQmx_CI_DataXferMech',
           'DAQmxSetExportedSampClkTimebaseOutputTerm',
           'DAQmxGetAIConvSrc', 'DAQmxErrorVirtualTEDSFileNotFound',
           'DAQmx_AI_Thrmcpl_Type', 'DAQmx_Sys_Tasks',
           'DAQmxErrorStopTriggerHasNotOccurred',
           'DAQmx_DelayFromSampClk_DelayUnits',
           'DAQmxErrorProcedureNameExpectedInScript', 'DAQmxSetCIMax',
           'DAQmxErrorNonBufferedAOAndDataXferNotProgIO',
           'DAQmx_AI_CurrentShunt_Resistance',
           'DAQmxResetAIMemMapEnable',
           'DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth',
           'DAQmx_Val_Interlocked',
           'DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherProperty',
           'DAQmxResetDigEdgeArmStartTrigEdge',
           'DAQmxErrorSampClockOutputTermNotSupportedGivenTimingType',
           'DAQmx_Val_Current',
           'DAQmxSetCIPulseWidthDigFltrMinPulseWidth',
           'DAQmxErrorAnalogTrigChanNotExternal',
           'DAQmxErrorPALLogicalBufferFull',
           'DAQmxErrorSamplesNoLongerWriteable',
           'DAQmxErrorMeasCalAdjustOscillatorPhaseDAC',
           'DAQmx_Read_ChangeDetect_HasOverflowed',
           'DAQmx_Val_Switch_Topology_2527_1_Wire_64x1_Mux',
           'DAQmxSetCISemiPeriodUnits',
           'DAQmxResetAISoundPressureMaxSoundPressureLvl',
           'DAQmxErrorDataXferCustomThresholdNotSpecified',
           'DAQmxGetSwitchDevSwitchChanList', 'DAQmx_Val_Tristate',
           'DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove_Routing',
           'DAQmxGetCIEncoderAInputTerm',
           'DAQmxGetAnlgEdgeRefTrigCoupling', 'DAQmxResetAILVDTUnits',
           'DAQmxResetCIEncoderBInputDigFltrEnable',
           'DAQmxGetScaleMapScaledMin',
           'DAQmx_Cal_UserDefinedInfo_MaxSize',
           'DAQmx_Val_Switch_Topology_1127_4_Wire_16x1_Mux',
           'DAQmx_StartTrig_Delay',
           'DAQmx_Exported_RefTrig_OutputTerm',
           'DAQmxErrorTrailingSpaceInString',
           'DAQmxGetReadTotalSampPerChanAcquired',
           'DAQmxSetWriteSleepTime',
           'DAQmxCreateTEDSAIStrainGageChan',
           'DAQmxGetAOIdleOutputBehavior',
           'DAQmx_AI_ChanCal_Verif_AcqVals',
           'DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalWhenDMA',
           'DAQmx_AI_DataXferCustomThreshold',
           'DAQmxSetAOResolutionUnits', 'DAQmxGetAIRVDTUnits',
           'DAQmxErrorCanNotPerformOpWhenNoDevInTask',
           'DAQmxGetAIExcitVoltageOrCurrent',
           'DAQmxResetAIResistanceUnits', 'DAQmxSetChanAttribute',
           'DAQmxErrorRefTrigDigPatternChanNotInTask',
           'DAQmx_Val_mVoltsPerVoltPerMilliInch',
           'DAQmx_AI_ChanCal_Poly_ForwardCoeff',
           'DAQmxSetCICountEdgesDir', 'DAQmxResetAIBridgeCfg',
           'DAQmxGetAILeadWireResistance',
           'DAQmx_Val_Switch_Topology_1130_1_Wire_Octal_32x1_Mux',
           'DAQmxResetExportedHshkEventInterlockedAssertOnStart',
           'DAQmx_Val_Amps',
           'DAQmx_Val_Switch_Topology_1194_Quad_4x1_Mux',
           'DAQmxAdjustDSAAICal', 'DAQmxResetCOPulseFreq',
           'DAQmxWarningLowpassFilterSettlingTimeExceedsDriverTimeBetween2ADCConversions',
           'DAQmxErrorClearIsLastInstructionOfLoopInScript',
           'DAQmx_CO_CtrTimebaseSrc', 'DAQmxCreateWatchdogTimerTask',
           'DAQmxErrorPrptyGetSpecdSingleActiveChanFailedDueToDifftVals',
           'DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth',
           'DAQmxGetExported20MHzTimebaseOutputTerm',
           'DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc',
           'DAQmxResetCIPulseWidthDigFltrTimebaseRate', 'TaskHandle',
           'DAQmxResetCIPulseWidthDigFltrTimebaseSrc',
           'DAQmxSetCIEncoderZInputDigFltrTimebaseSrc',
           'DAQmxErrorPrptyGetImpliedActiveChanFailedDueToDifftVals',
           'DAQmxGetPersistedChanAllowInteractiveEditing',
           'DAQmxErrorPALFileCloseFault',
           'DAQmxErrorCantConfigureTEDSForChan',
           'DAQmx_CI_CountEdges_DirTerm',
           'DAQmx_Exported_RdyForXferEvent_Lvl_ActiveLvl',
           'DAQmxErrorAOMinMaxNotSupportedDACOffsetValInappropriate',
           'DAQmxResetAIThrmstrR1',
           'DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseSrc',
           'DAQmxGetAODataXferReqCond',
           'DAQmx_CI_CtrTimebaseActiveEdge',
           'DAQmxResetDODataXferReqCond',
           'DAQmxResetAIEnhancedAliasRejectionEnable',
           'DAQmxWarningSampClkRateViolatesSettlingTimeForGen',
           'DAQmxResetCITwoEdgeSepSecondTerm',
           'DAQmxSetScaleLinSlope', 'DAQmx_AO_DAC_Rng_High',
           'DAQmx_CO_Count',
           'DAQmxResetExportedAdvCmpltEventPulseWidth',
           'DAQmxGetSampClkTimebaseSrc', 'DAQmx_DO_UseOnlyOnBrdMem',
           'DAQmx_Val_Switch_Topology_2503_4_Wire_12x1_Mux',
           'DAQmxGetBufInputOnbrdBufSize',
           'DAQmxErrorDigFilterMinPulseWidthSetWhenTristateIsFalse',
           'DAQmxErrorLines4To7ConfiguredForInput',
           'DAQmxReadBinaryI32', 'DAQmxWarningPALResourceNotReserved',
           'DAQmx_PersistedTask_AllowInteractiveEditing',
           'DAQmxSetOnDemandSimultaneousAOEnable',
           'DAQmxErrorPALBadWriteOffset',
           'DAQmxResetAnlgWinStartTrigWhen',
           'DAQmxErrorCannotConnectChannelToItself',
           'DAQmxErrorKeywordExpectedInScript', 'DAQmx_DO_Tristate',
           'DAQmx_Val_4Wire', 'DAQmxErrorSamplesCanNotYetBeWritten',
           'DAQmx_Val_Switch_Topology_1175_2_Wire_95x1_Mux',
           'DAQmxErrorSelfTestFailed',
           'DAQmx_SwitchChan_MaxACSwitchPwr', 'DAQmxCreateAIRTDChan',
           'DAQmxGetWatchdogTimeout',
           'DAQmxErrorCantSyncToExtStimulusFreqDuringCal',
           'DAQmx_SelfCal_LastTemp', 'DAQmxResetDOInvertLines',
           'DAQmx_MasterTimebase_Src', 'DAQmxSetCIFreqStartingEdge',
           'DAQmx_SwitchChan_MaxACCarryCurrent', 'DAQmx_Val_B',
           'DAQmxResetCIEncoderAInputDigSyncEnable',
           'DAQmxErrorDevCannotProduceMinPulseWidth',
           'DAQmx_ChanType', 'DAQmxErrorZeroSlopeLinearScale',
           'DAQmxSetAIChanCalTablePreScaledVals',
           'DAQmxWarningSampValCoercedToMax',
           'DAQmxErrorInvalidTrigCouplingExceptForExtTrigChan',
           'DAQmxResetAIInputSrc', 'DAQmx_DigEdge_StartTrig_Edge',
           'DAQmxResetCIEncoderZInputDigSyncEnable',
           'DAQmxResetCIEncoderZInputDigFltrEnable',
           'DAQmxErrorAOMinMaxNotSupportedDACRefValTooSmall',
           'DAQmxResetDOOutputDriveType', 'DAQmx_HshkTrig_Type',
           'DAQmxSetAnlgWinStartTrigBtm', 'DAQmxGetDevIsSimulated',
           'DAQmxResetAOCurrentUnits', 'DAQmx_AI_RVDT_Sensitivity',
           'DAQmx_Val_Switch_Topology_2501_4_Wire_12x1_Mux',
           'DAQmxWriteDigitalU16',
           'DAQmxWarningRateViolatesSettlingTime',
           'DAQmxSetMasterTimebaseSrc',
           'DAQmxErrorDotNetAPINotUnsigned32BitNumber',
           'DAQmxResetExportedCtrOutEventOutputBehavior',
           'DAQmx_DO_OutputDriveType',
           'DAQmxErrorACCouplingNotAllowedWith50OhmImpedance',
           'DAQmxErrorInvalidSignalModifier_Routing',
           'DAQmx_Val_LowFreq1Ctr',
           'DAQmxErrorPALMemoryConfigurationFault',
           'DAQmx_Val_Switch_Topology_1193_Independent',
           'DAQmxErrorDuplicatePhysicalChansNotSupported',
           'DAQmxResetAIExcitVal', 'DAQmx_Scale_Lin_YIntercept',
           'DAQmxErrorSampClkDCMLock',
           'DAQmxErrorCantSavePerLineConfigDigChanSoInteractiveEditsAllowed',
           'DAQmxErrorSampClkSrcInvalidForOutputValidForInput',
           'DAQmxGetSampClkSrc', 'DAQmxSetScaleLinYIntercept',
           'DAQmxCreateTEDSAIVoltageChan',
           'DAQmxResetDigEdgeStartTrigDigFltrTimebaseSrc',
           'DAQmxSetAOLoadImpedance', 'DAQmx_AI_ResolutionUnits',
           'DAQmx_Val_Task_Commit',
           'DAQmxResetExportedAdvCmpltEventOutputTerm',
           'DAQmxCreateTEDSAIPosRVDTChan',
           'DAQmxGetCIPulseWidthDigSyncEnable', 'DAQmx_Val_ZeroVolts',
           'DAQmxErrorSuppliedVoltageDataOutsideSpecifiedRange',
           'DAQmxGetCOOutputState',
           'DAQmxErrorReversePolyOrderNotPositive',
           'DAQmx_AnlgLvl_PauseTrig_Lvl',
           'DAQmxWarningPALFunctionNotFound',
           'DAQmx_AnlgWin_RefTrig_Top',
           'DAQmxErrorInvalidCalConstOffsetDACValue',
           'DAQmxErrorPropertyValNotValidTermName',
           'DAQmxGetAILowpassSwitchCapClkSrc',
           'DAQmx_CI_GPS_SyncMethod',
           'DAQmxSetExportedAdvTrigOutputTerm',
           'DAQmxErrorExpectedTerminatorInList',
           'DAQmxErrorInvalidSampModeForPositionMeas',
           'DAQmx_Exported_SampClk_Pulse_Polarity',
           'DAQmxSetAnlgWinStartTrigCoupling', 'DAQmxGetDINumLines',
           'DAQmxResetDIDigFltrMinPulseWidth', 'DAQmx_Val_AboveLvl',
           'DAQmxGetAIExcitDCorAC', 'DAQmx_Val_Pt3750',
           'DAQmxGetExportedAdvCmpltEventOutputTerm', 'bool32',
           'DAQmxSetChangeDetectDIRisingEdgePhysicalChans',
           'DAQmxResetStartTrigDelayUnits',
           'DAQmxResetDigEdgeStartTrigDigFltrMinPulseWidth',
           'DAQmxConnectTerms',
           'DAQmxGetExportedAdvTrigPulsePolarity',
           'DAQmxErrorRoutingDestTermPXIChassisNotIdentified',
           'DAQmxSetDigEdgeArmStartTrigSrc',
           'DAQmxErrorIncorrectPassword',
           'DAQmxGetCILinEncoderDistPerPulse',
           'DAQmxGetAIChanCalVerifAcqVals',
           'DAQmxErrorGenStoppedToPreventIntermediateBufferRegenOfOldSamples',
           'DAQmxSetAnlgLvlPauseTrigHyst',
           'DAQmxErrorInvalidCalConstGainDACValue',
           'DAQmxGetSwitchDevNumColumns',
           'DAQmxErrorSelfCalFailedExtNoiseOrRefVoltageOutOfCal',
           'DAQmxSetCITwoEdgeSepFirstDigSyncEnable',
           'DAQmx_AI_StrainGage_Cfg', 'DAQmxSetAIAutoZeroMode',
           'DAQmxSetAIFreqThreshVoltage',
           'DAQmx_Exported_CtrOutEvent_Pulse_Polarity',
           'DAQmxErrorCollectionDoesNotMatchChanType',
           'DAQmxGetAnlgWinPauseTrigBtm',
           'DAQmxErrorDigLinesReservedOrUnavailable',
           'DAQmxErrorResourceNotInPool_Routing',
           'DAQmx_Val_AccelUnit_g',
           'DAQmxResetDigEdgeAdvTrigDigFltrEnable',
           'DAQmx_CI_Encoder_BInput_DigSync_Enable',
           'DAQmxSetExportedAdvCmpltEventPulsePolarity',
           'DAQmxGetSelfCalLastDateAndTime', 'DAQmxErrorADCOverrun',
           'DAQmxErrorAOCallWriteBeforeStartForSampClkTimingType',
           'DAQmxErrorSwitchChanInUse',
           'DAQmxErrorPALDispatcherAlreadyExported',
           'DAQmxErrorInvalidGlobalChan',
           'DAQmxErrorReadChanTypeMismatch',
           'DAQmxErrorChanSizeTooBigForU32PortWrite',
           'DAQmxGetCIFreqMeasMeth',
           'DAQmxErrorInvalidAIOffsetCalConst',
           'DAQmxErrorBridgeOffsetNullingCalNotSupported',
           'DAQmxSetAIACExcitSyncEnable',
           'DAQmx_CI_Encoder_AInput_DigFltr_Enable',
           'DAQmx_CI_CountEdges_DigFltr_TimebaseRate',
           'DAQmxSetCIAngEncoderPulsesPerRev',
           'DAQmxErrorCalChanReversePolyCoefNotSpecd',
           'DAQmxErrorBuiltInCJCSrcNotSupported',
           'DAQmxGetCIOutputState', 'DAQmxSetSwitchScanBreakMode',
           'DAQmxErrorCouldNotConnectToServer_Routing',
           'DAQmxSetAIAccelUnits',
           'DAQmxWarningCounter1DMADuringAOConflict',
           'DAQmxErrorPALBadDataSize',
           'DAQmxSetAIChanCalOperatorName',
           'DAQmx_AnlgEdge_RefTrig_Src',
           'DAQmxWarningReadOffsetCoercion',
           'DAQmx_AI_LVDT_SensitivityUnits',
           'DAQmxSetArmStartTrigType', 'DAQmx_Val_TwoPulseCounting',
           'DAQmxErrorUnableToLocateErrorResources',
           'DAQmxErrorPasswordRequired', 'DAQmxErrorSensorValTooLow',
           'DAQmx_Val_Freq_Voltage',
           'DAQmxErrorStartTrigDigPatternChanNotTristated',
           'DAQmxSetAISoundPressureMaxSoundPressureLvl',
           'DAQmxErrorScaledMinEqualMax', 'DAQmx_Val_InsideWin',
           'DAQmxErrorDACUnderflow',
           'DAQmxErrorCannotDetectChangesWhenTristateIsFalse',
           'DAQmx_Val_Switch_Topology_1127_2_Wire_4x8_Matrix',
           'DAQmx_CI_CountEdges_DigSync_Enable',
           'DAQmxErrorTemperatureOutOfRangeForCalibration',
           'DAQmxSetDigEdgeWatchdogExpirTrigEdge',
           'DAQmxGetAIResolutionUnits', 'DAQmx_Val_AnlgEdge',
           'DAQmxSetRealTimeNumOfWarmupIters',
           'DAQmxGetExportedHshkEventDelay',
           'DAQmxCreateAIThrmcplChan',
           'DAQmxErrorCalibrationSessionAlreadyOpen',
           'DAQmx_Val_Switch_Topology_1129_2_Wire_4x64_Matrix',
           'DAQmxErrorWriteFailedBecauseWatchdogExpired',
           'DAQmxErrorPALFunctionObsolete',
           'DAQmxErrorPALComponentTooOld',
           'DAQmxErrorCabledModuleCannotRouteSSH',
           'DAQmxErrorDifftInternalAIInputSrcs',
           'DAQmx_AI_Accel_Units',
           'DAQmxErrorPALMemoryBlockCheckFailed',
           'DAQmxErrorDeviceIDNotSpecifiedInList',
           'DAQmxErrorBufferedAndDataXferPIO', 'DAQmxResetAOGain',
           'DAQmxErrorDuplicatedChannel',
           'DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseSrc',
           'DAQmx_Val_GroupByChannel',
           'DAQmxErrorUnexpectedIDFollowingSwitchOpInList',
           'DAQmxSetCICtrTimebaseRate',
           'DAQmxErrorDifferentPrptyValsNotSupportedOnDev',
           'DAQmx_Write_SleepTime',
           'DAQmx_Exported_RdyForXferEvent_OutputTerm',
           'DAQmx_Val_Switch_Topology_2567_Independent',
           'DAQmx_Val_Task_Stop',
           'DAQmxErrorDACAllowConnToGndNotSupportedByDevWhenRefSrcExt',
           'DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth',
           'DAQmx_Val_DigPattern', 'DAQmxGetSwitchChanWireMode',
           'DAQmxErrorScriptNameSameAsWfmName',
           'DAQmxSetAnlgEdgeStartTrigCoupling', 'DAQmxCreateTask',
           'DAQmxCreateCIPulseWidthChan',
           'DAQmxErrorChanCalTableScaledValsNotSpecd',
           'DAQmx_Val_AdvCmpltEvent',
           'DAQmxErrorScriptHasInvalidCharacter',
           'DAQmxGetAOReglitchEnable',
           'DAQmxErrorPALSocketListenerAlreadyRegistered',
           'DAQmxReadDigitalScalarU32',
           'DAQmxErrorCOReadyForNewValNotSupportedWithOnDemand',
           'DAQmxErrorInvalidSubsetLengthWithinLoopInScript',
           'DAQmx_SyncPulse_Src',
           'DAQmx_CI_Encoder_BInput_DigFltr_TimebaseSrc',
           'DAQmxErrorSwitchOperationNotSupported',
           'DAQmxWarningPALResourceNotInitialized',
           'DAQmxGetSwitchChanMaxDCCarryCurrent',
           'DAQmxErrorActivePhysChanNotSpecdWhenGetting1LinePrpty',
           'DAQmxGetDigEdgeArmStartTrigEdge',
           'DAQmxErrorGetPropertyNotOutputBufferedTask',
           'DAQmx_AI_ChanCal_EnableCal',
           'DAQmxErrorRegisterNotWritable',
           'DAQmxGetAnlgWinPauseTrigWhen',
           'DAQmxErrorInputBoardClkDCMBecameUnlocked',
           'DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc',
           'DAQmxGetSwitchScanAttribute',
           'DAQmxErrorDataVoltageLowAndHighIncompatible',
           'DAQmxSetAIBridgeInitialVoltage',
           'DAQmx_Val_LeftJustified',
           'DAQmxErrorTooManyEventsGenerated',
           'DAQmxErrorWaitUntilDoneDoesNotIndicateDone',
           'DAQmxErrorInvalidCharInDigPatternString',
           'DAQmxResetCOPulseFreqUnits',
           'DAQmx_Val_Switch_Topology_1128_2_Wire_4x8_Matrix',
           'DAQmxResetCIEncoderAInputDigFltrTimebaseSrc',
           'DAQmx_Val_Switch_Topology_1130_1_Wire_8x32_Matrix',
           'DAQmxSetCIGPSSyncSrc', 'DAQmxResetDigEdgeStartTrigSrc',
           'DAQmxCreateAIPosLVDTChan', 'DAQmxCreateAICurrentChan',
           'DAQmx_Val_Period', 'DAQmxErrorTrigBusLineNotAvail',
           'DAQmx_AI_Accel_Sensitivity', 'DAQmxGetCISemiPeriodUnits',
           'DAQmxGetSystemInfoAttribute',
           'DAQmxGetCICtrTimebaseDigFltrMinPulseWidth',
           'DAQmxErrorPrescalerNot1ForInputTerminal',
           'DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate',
           'DAQmxErrorTEDSTemplateParametersNotSupported',
           'DAQmx_Val_None',
           'DAQmxErrorActivePhysChanTooManyLinesSpecdWhenGettingPrpty',
           'DAQmxSetAnlgWinPauseTrigBtm', 'DAQmxErrorAIMaxTooLarge',
           'DAQmx_Val_Switch_Topology_2593_Independent',
           'DAQmxErrorHWTimedSinglePointAndDataXferNotProgIO',
           'DAQmxErrorBufferNameExpectedInScript',
           'DAQmxErrorMultScanOpsInOneChassis',
           'DAQmxGetAISoundPressureMaxSoundPressureLvl',
           'DAQmxSetCIEncoderBInputDigFltrEnable',
           'DAQmxErrorCannotReadRelativeToRefTrigUntilDone',
           'DAQmxErrorDAQmxCantUseStringDueToUnknownChar',
           'DAQmxGetCOCtrTimebaseSrc', 'DAQmx_Scale_Map_ScaledMax',
           'DAQmxGetAOMax',
           'DAQmxErrorWriteFailedMultipleCtrsWithFREQOUT',
           'DAQmxErrorPreScaledMinEqualMax',
           'DAQmxErrorCannotReadWhenAutoStartFalseHWTimedSinglePtAndTaskNotRunning',
           'DAQmx_Val_Switch_Topology_1130_1_Wire_4x64_Matrix',
           'DAQmx_PauseTrig_Type', 'DAQmx_SwitchDev_Settled',
           'DAQmxSetExportedWatchdogExpiredEventOutputTerm',
           'DAQmxResetAODataXferMech', 'DAQmx_Val_FiniteSamps',
           'DAQmx_CI_Freq_DigFltr_Enable',
           'DAQmxErrorPALFeatureDisabled',
           'DAQmxResetCISemiPeriodUnits', 'DAQmxGetDOInvertLines',
           'DAQmxGetCOCount', 'DAQmx_DelayFromSampClk_Delay',
           'DAQmxErrorZeroForwardPolyScaleCoeffs',
           'DAQmxSetAnlgWinRefTrigTop',
           'DAQmxErrorInvalidRoutingDestinationTerminalName',
           'DAQmxErrorInvalidAIGainCalConst',
           'DAQmx_CI_AngEncoder_PulsesPerRev',
           'DAQmx_DigEdge_StartTrig_Src',
           'DAQmx_Val_ReferenceTrigger',
           'DAQmxErrorChanCalTableNumScaledNotEqualNumPrescaledVals',
           'DAQmxSetCOPulseLowTime',
           'DAQmxErrorInterconnectLineReserved',
           'DAQmxGetAIThrmcplCJCVal', 'DAQmxResetSwitchScanAttribute',
           'DAQmx_Hshk_SampleInputDataWhen',
           'DAQmxErrorLinesUsedForHandshakingInputNotForStaticInput',
           'DAQmxResetCIAngEncoderPulsesPerRev',
           'DAQmxResetDigEdgeRefTrigSrc', 'DAQmx_ArmStartTrig_Type',
           'DAQmxWriteToTEDSFromFile', 'DAQmx_Val_AnlgLvl',
           'DAQmx_Val_OnDemand', 'DAQmx_AI_SampAndHold_Enable',
           'DAQmx_PersistedChan_Author',
           'DAQmxErrorExternalSampClkAndRefClkThruSameTerm',
           'DAQmxErrorNULLPtr', 'DAQmxResetDigLvlPauseTrigSrc',
           'DAQmx_Exported_StartTrig_OutputTerm',
           'DAQmxErrorInvalidRelayName',
           'DAQmxErrorInvalidCloseAction',
           'DAQmxResetAnlgLvlPauseTrigLvl',
           'DAQmxSetStartTrigDelayUnits',
           'DAQmxErrorCannotPerformOpWhenTaskNotRunning',
           'DAQmxErrorChangeDetectionChanNotTristated',
           'DAQmxErrorVirtualChanNameUsed',
           'DAQmx_Val_Switch_Topology_1195_Quad_4x1_Mux',
           'DAQmxErrorFailedToEnableHighSpeedInputClock',
           'DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc',
           'DAQmx_AO_IdleOutputBehavior', 'DAQmx_Val_Volts',
           'DAQmxWriteDigitalLines',
           'DAQmxSetDigLvlPauseTrigDigFltrMinPulseWidth',
           'DAQmxErrorCantSaveChanWithPolyCalScaleAndAllowInteractiveEdit',
           'DAQmx_WatchdogExpirTrig_Type', 'DAQmxGetSelfCalLastTemp',
           'DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc',
           'DAQmxErrorPALBadReadMode', 'DAQmxResetBufferAttribute',
           'DAQmx_Val_Interrupts', 'DAQmxErrorRouteSrcAndDestSame',
           'DAQmxErrorInvalidCalVoltageForGivenGain',
           'DAQmxSetAODACRefAllowConnToGnd',
           'DAQmx_AI_EnhancedAliasRejectionEnable',
           'DAQmx_Scale_Map_PreScaledMin', 'DAQmxGetScaleLinSlope',
           'DAQmxSetAnlgEdgeRefTrigSrc',
           'DAQmxErrorSyncNoDevSampClkTimebaseOrSyncPulseInPXISlot2',
           'DAQmx_Val_TEDS_Sensor',
           'DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseRate',
           'DAQmxErrorMultipleWritesBetweenSampClks',
           'DAQmx_Val_5Wire',
           'DAQmx_Val_Switch_Topology_1128_4_Wire_16x1_Mux',
           'DAQmxResetExportedAIConvClkOutputTerm',
           'DAQmx_Val_Switch_Topology_1130_1_Wire_Quad_64x1_Mux',
           'DAQmxErrorInternalTimebaseSourceDivisorCombo',
           'DAQmxErrorPALMessageUnderflow', 'DAQmxGetReadAttribute',
           'DAQmxErrorPALResourceReserved',
           'DAQmxResetAICurrentUnits', 'DAQmxGetBufInputBufSize',
           'DAQmxSetDelayFromSampClkDelay',
           'DAQmxErrorInvalidCharInPattern',
           'DAQmxErrorWaveformInScriptNotInMem', 'DAQmxResetDevice',
           'DAQmxSwitchCloseRelays', 'DAQmxResetChanAttribute',
           'DAQmxErrorCOWritePulseLowTicksNotSupported',
           'DAQmxErrorRepeatedNumberInScaledValues',
           'DAQmxResetAIAutoZeroMode',
           'DAQmxErrorRepeatedPhysicalChan',
           'DAQmxSetCIPeriodDigFltrTimebaseSrc', 'DAQmxResetAIRngLow',
           'DAQmx_Watchdog_HasExpired', 'DAQmxSetCIPeriodUnits',
           'DAQmxErrorEveryNSamplesAcqIntoBufferEventNotSupportedByDevice',
           'DAQmxSwitchDisconnectAll', 'DAQmxAdjustDSATimebaseCal',
           'DAQmxGetCIEncoderZIndexEnable',
           'DAQmxErrorSampsPerChanTooBig',
           'DAQmxResetInterlockedHshkTrigAssertedLvl',
           'DAQmxResetCISemiPeriodDigFltrTimebaseRate',
           'DAQmxResetSampClkDigFltrTimebaseRate',
           'DAQmx_Val_Falling', 'DAQmxCreateTEDSAIRTDChan',
           'DAQmx_Val_Implicit',
           'DAQmxErrorLabVIEWInvalidTaskOrChans',
           'DAQmx_Hshk_DelayAfterXfer', 'DAQmx_Val_AI',
           'DAQmx_Val_RisingSlope',
           'DAQmx_Val_Switch_Topology_2532_1_Wire_8x64_Matrix',
           'DAQmxGetCORdyForNewVal',
           'DAQmx_Val_Save_AllowInteractiveDeletion',
           'DAQmxErrorDisconnectionRequiredInScanlist',
           'DAQmx_Val_ContSamps',
           'DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth',
           'DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_8x32_Matrix',
           'DAQmx_RefTrig_Type', 'DAQmxResetAIChanCalEnableCal',
           'DAQmxGetAIThrmstrC', 'DAQmxGetAIThrmstrB',
           'DAQmxGetAIThrmstrA',
           'DAQmx_ChangeDetect_DI_RisingEdgePhysicalChans',
           'DAQmxGetSyncPulseSrc', 'DAQmxGetDelayFromSampClkDelay',
           'DAQmx_SwitchScan_WaitingForAdv',
           'DAQmxErrorPhysChanDevNotInTask',
           'DAQmx_CI_LinEncoder_DistPerPulse',
           'DAQmx_Val_Switch_Topology_2565_16_SPST',
           'DAQmx_CO_CtrTimebase_DigFltr_TimebaseRate',
           'DAQmxErrorNoTEDSTerminalBlock',
           'DAQmxErrorUnexpectedIdentifierInFullySpecifiedPathInList',
           'DAQmx_Val_WaitForHandshakeTriggerDeassert',
           'DAQmx_PersistedChan_AllowInteractiveDeletion',
           'DAQmxSetAIRVDTSensitivityUnits',
           'DAQmx_Scale_Poly_ForwardCoeff',
           'DAQmxSetAnlgWinPauseTrigWhen',
           'DAQmxSetDigLvlPauseTrigDigSyncEnable',
           'DAQmx_AO_Resolution',
           'DAQmxErrorClearTEDSNotSupportedOnRT',
           'DAQmxSetWatchdogExpirTrigType', 'DAQmx_Val_DoNotWrite',
           'DAQmxErrorOddTotalBufferSizeToWrite',
           'DAQmxErrorMemMapEnabledForHWTimedNonBufferedAO',
           'DAQmxResetCIEncoderZInputDigFltrTimebaseSrc',
           'DAQmxErrorActionSeparatorRequiredAfterBreakingConnectionInScanlist',
           'DAQmxSetAIRTDType', 'DAQmx_Val_A',
           'DAQmxResetAODACRefVal', 'DAQmx_CI_Period_MeasTime',
           'DAQmx_Val_Switch_Topology_2529_2_Wire_8x16_Matrix',
           'DAQmxResetAIACExcitFreq',
           'DAQmxErrorSetupCalNeededBeforeAdjustCal',
           'DAQmxGetAIAccelSensitivity', 'DAQmx_AO_Gain',
           'DAQmx_Val_High',
           'DAQmxErrorWriteWhenTaskNotRunningCOTicks',
           'DAQmx_Val_Diff', 'DAQmxGetPhysicalChanTEDSTemplateIDs',
           'DAQmxSetCIDupCountPrevent',
           'DAQmx_AI_Excit_UseMultiplexed', 'DAQmxResetAOMin',
           'DAQmx_Val_g', 'DAQmxWarningPXIDevTempExceedsMaxOpTemp',
           'DAQmxSwitchOpenRelays',
           'DAQmxErrorSignalEventAlreadyRegistered',
           'DAQmx_AnlgLvl_PauseTrig_Coupling',
           'DAQmxGetRefTrigPretrigSamples',
           'DAQmxErrorLeadingSpaceInString',
           'DAQmxErrorMultiRecWithRIS', 'DAQmx_Val_Immediate',
           'DAQmxWriteRaw', 'DAQmx_Interlocked_HshkTrig_AssertedLvl',
           'DAQmx_AI_ChanCal_OperatorName',
           'DAQmx_Val_Switch_Topology_2501_1_Wire_48x1_Amplified_Mux',
           'DAQmxResetAIMax',
           'DAQmxErrorAOMinMaxNotSupportedGivenDACRange',
           'DAQmxErrorConnectionInScanlistMustWaitForTrig',
           'DAQmxErrorTEDSLinearMappingSlopeZero',
           'DAQmxErrorCtrExportSignalNotPossible',
           'DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo',
           'DAQmxResetAOOutputImpedance', 'DAQmxErrorAttrCannotBeSet',
           'DAQmx_SelfCal_Supported',
           'DAQmxErrorSubsetOutsideWaveformInScript',
           'DAQmx_Val_BreakBeforeMake',
           'DAQmxSetExportedHshkEventDelay',
           'DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseSrc',
           'DAQmx_Val_NRSE', 'DAQmxGetMasterTimebaseSrc',
           'DAQmxErrorNoPolyScaleCoeffs', 'DAQmxGetCICtrTimebaseSrc',
           'DAQmxErrorHandshakeTrigTypeNotSupportedGivenTimingType',
           'DAQmx_Val_Temp_BuiltInSensor',
           'DAQmxResetAILossyLSBRemovalCompressedSampSize',
           'DAQmxResetMasterTimebaseRate',
           'DAQmxGetCIFreqDigFltrTimebaseSrc',
           'DAQmxErrorSwitchOpFailedDueToPrevError',
           'DAQmx_Val_Switch_Topology_2529_2_Wire_Dual_4x16_Matrix',
           'DAQmxResetWriteRegenMode', 'DAQmx_DI_NumLines',
           'DAQmxGetExportedDividedSampClkTimebaseOutputTerm',
           'DAQmxGetAnlgLvlPauseTrigSrc',
           'DAQmxGetAIChanCalScaleType',
           'DAQmxErrorChansAlreadyConnected',
           'DAQmx_Val_SoundPressure_Microphone',
           'DAQmxErrorDelayFromStartTrigTooLong',
           'DAQmxSetDOInvertLines', 'DAQmx_CI_GPS_SyncSrc',
           'DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth',
           'DAQmxSetExportedSyncPulseEventOutputTerm',
           'DAQmxResetSyncPulseMinDelayToStart',
           'DAQmx_PhysicalChan_TEDS_MfgID', 'DAQmx_Buf_Input_BufSize',
           'DAQmxGetCIFreqDigFltrEnable', 'DAQmx_Val_AHighBLow',
           'DAQmxSetCIPulseWidthStartingEdge', 'DAQmx_CI_Freq_Term',
           'DAQmxSetAIExcitUseForScaling',
           'DAQmxGetDOUseOnlyOnBrdMem',
           'DAQmx_Val_Switch_Topology_2591_4x1_Mux',
           'DAQmxSetScaleDescr', 'uInt32',
           'DAQmxResetAIAccelSensitivityUnits', 'DAQmxSaveTask',
           'DAQmxErrorInvalidRecordNum',
           'DAQmxGetScaleMapPreScaledMax',
           'DAQmxErrorProgIODataXferForBufferedAO',
           'DAQmxSetCICtrTimebaseDigFltrEnable',
           'DAQmxErrorPrescalerNot1ForTimebaseSrc',
           'DAQmx_CI_OutputState', 'DAQmx_Write_NumChans',
           'DAQmxGetPersistedTaskAllowInteractiveEditing',
           'DAQmxResetAOResolutionUnits',
           'DAQmxSetExportedAIConvClkOutputTerm',
           'DAQmxSetAIChanCalApplyCalIfExp',
           'DAQmxErrorMoreThanOneActiveChannelSpecified',
           'DAQmxSetCITwoEdgeSepFirstDigFltrEnable',
           'DAQmxSetDigEdgeArmStartTrigDigFltrMinPulseWidth',
           'DAQmxGetCIPeriodDigSyncEnable',
           'DAQmxErrorPALTransferAborted',
           'DAQmxSetAOCustomScaleName', 'DAQmxGetSampClkTimebaseDiv',
           'DAQmxSetAIBridgeShuntCalGainAdjust',
           'DAQmxErrorChanDuplicatedInPath',
           'DAQmxErrorInvalidCharInString',
           'DAQmx_SampQuant_SampPerChan',
           'DAQmxGetAILowpassSwitchCapOutClkDiv',
           'DAQmxGetAIResistanceCfg', 'DAQmxGetAnlgWinRefTrigSrc',
           'DAQmx_CO_Pulse_Time_InitialDelay',
           'DAQmxGetSampClkDigFltrTimebaseRate',
           'DAQmxResetCITwoEdgeSepFirstEdge',
           'DAQmx_Val_Switch_Topology_2593_16x1_Mux',
           'DAQmxSetCITwoEdgeSepFirstEdge',
           'DAQmx_Val_Switch_Topology_2594_4x1_Mux',
           'DAQmxErrorFREQOUTCannotProduceDesiredFrequency2',
           'DAQmx_Val_Switch_Topology_2570_40_SPDT',
           'DAQmxErrorResourcesInUseForRoute_Routing',
           'DAQmxErrorDifferentDITristateValsForChansInTask',
           'DAQmxErrorSensorValTooHigh', 'DAQmx_AI_Current_Units',
           'DAQmxSetCIEncoderAInputDigFltrTimebaseRate',
           'DAQmxErrorSamplesNoLongerAvailable',
           'DAQmxGetDevSerialNum', 'DAQmxErrorIntermediateBufferFull',
           'DAQmxGetAODACRngHigh', 'DAQmxGetCIPulseWidthStartingEdge',
           'DAQmxGetReadRelativeTo', 'DAQmxCreateTEDSAIAccelChan',
           'DAQmxErrorExtSampClkSrcNotSpecified',
           'DAQmxGetCIEncoderBInputDigFltrTimebaseSrc',
           'DAQmxGetWatchdogDOExpirState',
           'DAQmxGetDigLvlPauseTrigWhen',
           'DAQmxErrorGenerateOrFiniteWaitInstructionExpectedBeforeIfElseBlockInScript',
           'DAQmxSetExportedAdvTrigPulseWidth',
           'DAQmxGetDelayFromSampClkDelayUnits',
           'DAQmxSetCIFreqUnits',
           'DAQmxResetExportedAdvTrigOutputTerm',
           'DAQmxErrorBufferAndDataXferMode',
           'DAQmxSetSampClkDigFltrMinPulseWidth',
           'DAQmxErrorFailedToAcquireCalData',
           'DAQmxGetTrigAttribute', 'DAQmxGetAdvTrigType',
           'DAQmxGetAnlgWinStartTrigSrc',
           'DAQmxErrorOnboardMemTooSmall', 'DAQmxGetDOTristate',
           'DAQmxGetAILVDTSensitivityUnits',
           'DAQmxErrorSampClkRateDoesntMatchSampClkSrc',
           'DAQmx_Val_Inches', 'DAQmx_Val_Temp_Thrmstr',
           'DAQmx_Val_Pulse_Ticks', 'DAQmxGetWatchdogAttribute',
           'DAQmxSetCOPulseHighTime',
           'DAQmxSetChangeDetectDIFallingEdgePhysicalChans',
           'DAQmxSuccess', 'DAQmx_Val_Task_Start',
           'DAQmxErrorInvalidRoutingSourceTerminalName',
           'DAQmxGetCOCtrTimebaseDigFltrEnable',
           'DAQmxSetAIStrainUnits',
           'DAQmxResetHshkSampleInputDataWhen',
           'DAQmxSetScaleScaledUnits', 'DAQmxGetSwitchChanUsage',
           'DAQmxErrorNonZeroBufferSizeInProgIOXfer',
           'DAQmxResetExportedAIHoldCmpltEventPulsePolarity',
           'DAQmxErrorGenStoppedToPreventRegenOfOldSamples',
           'DAQmxSetCIEncoderZIndexPhase',
           'DAQmxGetExportedCtrOutEventToggleIdleState',
           'DAQmxErrorCannotReadWhenAutoStartFalseOnDemandAndTaskNotRunning',
           'DAQmxErrorInvalidInstallation',
           'DAQmxGetAILowpassSwitchCapExtClkDiv', 'DAQmx_CI_Min',
           'DAQmx_AnlgEdge_RefTrig_Coupling', 'DAQmxResetCIMax',
           'DAQmxSetExported10MHzRefClkOutputTerm',
           'DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_4x64_Matrix',
           'DAQmxSetCIFreqDigFltrEnable',
           'DAQmxGetCIPulseWidthDigFltrTimebaseRate',
           'DAQmxErrorInputBufferSizeNotEqualSampsPerChanForFiniteSampMode',
           'DAQmx_AnlgEdge_RefTrig_Hyst', 'DAQmxResetAIThrmstrA',
           'DAQmxResetAIThrmstrB', 'DAQmxResetAIThrmstrC',
           'DAQmxErrorInvalidSubsetLengthInScript',
           'DAQmxGetCIEncoderZIndexPhase', 'DAQmxSetAIACExcitFreq',
           'DAQmxGetDIDigFltrEnable', 'DAQmxErrorAttrNotSupported',
           'DAQmxErrorRecordOverwritten', 'DAQmx_Scale_Map_ScaledMin',
           'DAQmxSetAIChanCalExpDate', 'DAQmxGetPersistedChanAuthor',
           'DAQmxErrorInvalidCfgCalAdjustMainPathPostAmpGainAndOffset',
           'DAQmxSwitchGetSingleRelayPos',
           'DAQmxErrorCouldNotReserveRequestedTrigLine_Routing',
           'DAQmxResetDigPatternStartTrigSrc',
           'DAQmx_Val_HalfBridgeII', 'DAQmxSetCIPeriodDiv',
           'DAQmxWriteDigitalU32', 'DAQmx_Val_ResetTimer',
           'DAQmxGetSwitchScanRepeatMode',
           'DAQmxResetCILinEncoderUnits',
           'DAQmxSetCIPulseWidthDigFltrTimebaseRate',
           'DAQmxErrorPALDiskFull',
           'DAQmxErrorPhysicalChanDoesNotExist', 'DAQmxSetChanDescr',
           'DAQmx_CI_Encoder_BInputTerm', 'DAQmxGetRefClkSrc',
           'DAQmxResetDigEdgeAdvTrigEdge', 'DAQmx_AO_ResolutionUnits',
           'DAQmxErrorChanVersionNew', 'DAQmxErrorOutputBufferEmpty',
           'DAQmxResetAIExcitVoltageOrCurrent',
           'DAQmxSetRefTrigPretrigSamples',
           'DAQmxSetDigPatternRefTrigWhen',
           'DAQmxGetAnlgWinRefTrigCoupling',
           'DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherTask',
           'DAQmxErrorOutputCantStartChangedBufferSize',
           'DAQmxErrorFunctionNotInLibrary',
           'DAQmxGetBufOutputBufSize', 'DAQmxErrorPALFileOpenFault',
           'DAQmx_Read_RelativeTo', 'DAQmxSetCIEncoderZIndexVal',
           'DAQmx_AI_Bridge_ShuntCal_Select',
           'DAQmx_Val_Action_Commit',
           'DAQmxErrorInvalidExtTrigImpedance',
           'DAQmxResetAIAccelUnits', 'DAQmx_AI_LVDT_Sensitivity',
           'DAQmx_Val_Pascals',
           'DAQmxErrorStartFailedDueToWriteFailure',
           'DAQmxErrorTooManyChansForAnalogRefTrig',
           'DAQmx_SwitchDev_NumRelays', 'DAQmx_CI_DupCountPrevent',
           'DAQmxGetExportedAIHoldCmpltEventOutputTerm',
           'DAQmxErrorMeasCalAdjustOscillatorFrequency',
           'DAQmxResetInterlockedHshkTrigSrc',
           'DAQmxCreateAIPosRVDTChan', 'DAQmxWarningAISampRateTooLow',
           'DAQmx_CI_TwoEdgeSep_Second_DigSync_Enable',
           'DAQmxErrorStartTrigConflictWithCOHWTimedSinglePt',
           'DAQmxErrorDigOutputOverrun',
           'DAQmxResetCICtrTimebaseDigFltrTimebaseSrc',
           'DAQmx_RealTime_ConvLateErrorsToWarnings',
           'DAQmxWarningPALBadWindowType',
           'DAQmxResetCIFreqDigFltrMinPulseWidth',
           'DAQmx_DigPattern_StartTrig_Src',
           'DAQmxErrorPALBadWriteMode', 'DAQmx_Val_RSE',
           'DAQmxErrorCAPICannotPerformTaskOperationInAsyncCallback',
           'DAQmxWarningPALFeatureNotSupported',
           'DAQmxGetAIChanCalPolyForwardCoeff',
           'DAQmxErrorCannotHandshakeWhenTristateIsFalse',
           'DAQmxCreateCOPulseChanTime',
           'DAQmx_Exported_SampClkTimebase_OutputTerm',
           'DAQmxErrorFunctionNotSupportedForDeviceTasks',
           'DAQmxErrorTrigWhenOnDemandSampTiming',
           'DAQmxSetExported20MHzTimebaseOutputTerm',
           'DAQmxErrorPALBadAddressSpace',
           'DAQmx_Exported_AIConvClk_OutputTerm',
           'DAQmx_CI_TwoEdgeSep_First_DigFltr_MinPulseWidth',
           'DAQmxSetCITwoEdgeSepSecondEdge',
           'DAQmxErrorCJCChanNotSpecd',
           'DAQmx_Val_Switch_Topology_1130_Independent',
           'DAQmx_Val_ALowBLow', 'DAQmxErrorPALComponentImageCorrupt',
           'DAQmx_Val_Handshake', 'DAQmxResetAIRTDR0',
           'DAQmxErrorPLLNotLocked', 'DAQmxErrorSCXIModuleNotFound',
           'DAQmx_Val_Switch_Topology_2530_2_Wire_4x16_Matrix',
           'DAQmxErrorReadWaitNextSampClkWaitMismatchOne',
           'DAQmx_SampClk_DigFltr_MinPulseWidth',
           'DAQmxErrorRoutingHardwareBusy', 'DAQmx_AI_AutoZeroMode',
           'DAQmxResetCIPulseWidthUnits',
           'DAQmxSetAIBridgeShuntCalSelect',
           'DAQmx_AO_DAC_Ref_AllowConnToGnd',
           'DAQmxWarningPALSyncAbandoned',
           'DAQmxErrorRefTrigDigPatternSizeDoesNotMatchSourceSize',
           'DAQmx_MasterTimebase_Rate', 'DAQmxGetHshkTrigType',
           'DAQmxGetAIGain', 'DAQmxErrorIntExcitSrcNotAvailable',
           'DAQmx_Val_Switch_Topology_2530_1_Wire_4x32_Matrix',
           'DAQmxErrorMeasCalAdjustMainPathPreAmpGain',
           'DAQmx_Cal_DevTemp', 'DAQmx_Read_ChannelsToRead',
           'DAQmx_AI_StrainGage_GageFactor', 'DAQmx_Read_CurrReadPos',
           'DAQmx_CI_Timestamp_InitialSeconds',
           'DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseRate',
           'DAQmxSetAnlgWinPauseTrigSrc',
           'DAQmx_CI_PulseWidth_StartingEdge',
           'DAQmxGetCICountEdgesCountDirDigFltrEnable',
           'DAQmxResetAIStrainGagePoissonRatio', 'DAQmxGetAOTermCfg',
           'DAQmxErrorInvalidTerm_Routing',
           'DAQmxErrorLinesAlreadyReservedForOutput',
           'DAQmxErrorCantSetPowerupStateOnDigInChan',
           'DAQmx_CI_TwoEdgeSep_FirstTerm',
           'DAQmxErrorAIMinNotSpecified', 'DAQmxGetAODACRefVal',
           'DAQmxSetExportedHshkEventPulseWidth',
           'DAQmxErrorMinNotLessThanMax',
           'DAQmxErrorNoChansSpecdForPatternSource',
           'DAQmxErrorPALBadOffset', 'DAQmxErrorInvalidTopology',
           'DAQmxErrorDigPrptyCannotBeSetPerLine',
           'DAQmx_Val_Switch_Topology_2593_Dual_4x1_Terminated_Mux',
           'DAQmxErrorInvalidOutputVoltageAtSampClkRate',
           'DAQmxGetCISemiPeriodDigFltrTimebaseSrc',
           'DAQmx_Exported_AdvCmpltEvent_OutputTerm',
           'DAQmx_AI_ACExcit_Freq', 'DAQmxErrorPALTransferOverread',
           'DAQmxErrorCannotCreateChannelAfterTaskVerified',
           'DAQmx_SampClk_Rate', 'DAQmxWriteDigitalU8',
           'DAQmx_Val_Task_Unreserve', 'DAQmxSetDigPatternRefTrigSrc',
           'DAQmxWriteDigitalScalarU32',
           'DAQmx_AnlgEdge_StartTrig_Lvl',
           'DAQmxGetExportedAdvCmpltEventDelay',
           'DAQmx_DigEdge_AdvTrig_DigFltr_Enable',
           'DAQmxWarningPALResourceInitialized',
           'DAQmxGetAIAutoZeroMode', 'DAQmxCreateAIThrmstrChanVex',
           'DAQmxResetSampTimingType',
           'DAQmxSetCILinEncoderDistPerPulse',
           'DAQmx_CI_CtrTimebaseMasterTimebaseDiv', 'DAQmxGetCIMin',
           'DAQmxErrorSampClkRateTooLowForDivDown',
           'DAQmx_AO_DAC_Ref_ExtSrc', 'DAQmx_Val_3Wire',
           'DAQmx_Val_ActiveDrive',
           'DAQmxSetCIPeriodDigFltrMinPulseWidth',
           'DAQmxGetAIVoltageUnits', 'DAQmxReadAnalogF64',
           'DAQmx_SampClk_Timebase_MasterTimebaseDiv',
           'DAQmx_Val_Switch_Topology_2501_2_Wire_24x1_Amplified_Mux',
           'DAQmxErrorSuitableTimebaseNotFoundTimeCombo',
           'DAQmxErrorCJCChanAlreadyUsed',
           'DAQmxGetCIEncoderZInputDigFltrMinPulseWidth',
           'DAQmxErrorChanAlreadyInTask',
           'DAQmxSetCICountEdgesDigFltrTimebaseRate',
           'DAQmxSetCICtrTimebaseDigFltrMinPulseWidth',
           'DAQmxGetDigLvlPauseTrigDigSyncEnable',
           'DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthBySameTask1PerDev',
           'DAQmxErrorPropertyNotSupportedForScaleType',
           'DAQmx_Val_T_Type_TC', 'DAQmxWarningPALBadMode',
           'DAQmx_DigEdge_StartTrig_DigFltr_TimebaseSrc',
           'DAQmxErrorPortReservedForHandshaking',
           'DAQmx_Val_Switch_Topology_2503_2_Wire_Quad_6x1_Mux',
           'DAQmxGetAnlgWinStartTrigBtm', 'DAQmx_Val_GPS_Timestamp',
           'DAQmxSetCILinEncoderUnits', 'DAQmx_Val_HalfBridge',
           'DAQmxErrorDevAbsentOrUnavailable_Routing',
           'DAQmx_CO_Pulse_LowTime',
           'DAQmxSetDigLvlPauseTrigDigFltrTimebaseRate',
           'DAQmxErrorHystTrigLevelAIMax', 'DAQmx_CI_Max',
           'DAQmx_RefTrig_PretrigSamples',
           'DAQmxErrorInconsistentUnitsSpecified',
           'DAQmxGetCIPeriodStartingEdge',
           'DAQmxErrorPropertyNotSupportedForTimingSrc',
           'DAQmx_Val_Switch_Topology_1193_Dual_8x1_Terminated_Mux',
           'DAQmxErrorTypeUnknown',
           'DAQmxErrorCounterMaxMinRangeFreq', 'DAQmx_Val_NoAction',
           'DAQmxErrorTimingSrcTaskStartedBeforeTimedLoop',
           'DAQmxErrorWriteBufferTooSmall', 'DAQmx_Val_Closed',
           'DAQmxErrorPhysicalChansForChangeDetectionAndPatternMatch653x',
           'DAQmxGetCICtrTimebaseDigFltrEnable',
           'DAQmxSetCOPulseTerm',
           'DAQmxErrorPowerupStateNotSpecdForEntirePort',
           'DAQmxErrorReadNotCompleteBeforeSampClk',
           'DAQmxGetAIThrmcplType',
           'DAQmx_Val_Switch_Topology_1193_16x1_Terminated_Mux',
           'DAQmxErrorTimingSrcDoesNotExist',
           'DAQmxGetSwitchDevAutoConnAnlgBus',
           'DAQmxErrorOperationTimedOut',
           'DAQmxErrorLoadTaskFailsBecauseNoTimingOnDev',
           'DAQmxGetAISoundPressureUnits',
           'DAQmxGetAIExcitUseForScaling',
           'DAQmxErrorHardwareNotResponding', 'DAQmxReadCounterU32',
           'DAQmxErrorInvalidTerm', 'DAQmxSetHshkDelayAfterXfer',
           'DAQmxGetDigPatternRefTrigSrc',
           'DAQmxResetExportedHshkEventOutputTerm',
           'DAQmxErrorDifferentRawDataCompression',
           'DAQmxErrorPartialUseOfPhysicalLinesWithinPortNotSupported653x',
           'DAQmxGetCISemiPeriodDigFltrTimebaseRate',
           'DAQmxCfgSampClkTiming', 'DAQmxReadDigitalU8',
           'DAQmx_Val_Position_AngEncoder',
           'DAQmx_Exported_AdvTrig_Pulse_Width',
           'DAQmxSetAIThrmstrR1', 'DAQmxSetDIDataXferMech',
           'DAQmxSetExportedDividedSampClkTimebaseOutputTerm',
           'DAQmx_AI_Bridge_ShuntCal_Enable',
           'DAQmxResetCIFreqMeasMeth',
           'DAQmxErrorDoneEventAlreadyRegistered',
           'DAQmxErrorInvalidOptionForDigitalPortChannel',
           'DAQmx_CI_Encoder_AInput_DigFltr_TimebaseSrc',
           'DAQmxDisableStartTrig', 'DAQmx_Val_S_Type_TC',
           'DAQmxSetExportedSampClkOutputBehavior',
           'DAQmx_Val_Switch_Topology_2532_1_Wire_Sixteen_2x16_Matrix',
           'DAQmx_Watchdog_Timeout',
           'DAQmxErrorInvalidNumCalADCReadsToAverage',
           'DAQmxWarningPALTransferAborted',
           'DAQmxWarningDeviceMayShutDownDueToHighTemp',
           'DAQmxErrorReferenceVoltageInvalid',
           'DAQmxWarningRISAcqCompletedSomeBinsNotFilled',
           'DAQmxErrorCounterOverflow', 'DAQmxGetReadOverWrite',
           'DAQmx_Val_SynchronousEventCallbacks',
           'DAQmxCreateTEDSAIPosLVDTChan',
           'DAQmxGetCILinEncoderInitialPos', 'DAQmxGetAIRngHigh',
           'DAQmxResetCICtrTimebaseDigFltrTimebaseRate',
           'DAQmxErrorLinesUsedForHandshakingControlNotForStaticInput',
           'DAQmxErrorEveryNSamplesEventNotSupportedForNonBufferedTasks',
           'DAQmxGetCOPulseTerm',
           'DAQmxErrorClearIsLastInstructionInIfElseBlockInScript',
           'DAQmxErrorTEDSSensorNotDetected',
           'DAQmxErrorTEDSMinElecValGEMaxElecVal',
           'DAQmxErrorCannotUpdatePulseGenProperty',
           'DAQmx_DigEdge_WatchdogExpirTrig_Src',
           'DAQmxErrorWaitModePropertyNotSupportedNonBuffered',
           'DAQmxGetAIFreqHyst',
           'DAQmxErrorRefTrigDigPatternChanNotTristated',
           'DAQmxResetCIEncoderZInputDigFltrTimebaseRate',
           'DAQmxGetAnlgWinPauseTrigSrc',
           'DAQmx_AI_ForceReadFromChan',
           'DAQmx_Val_Save_AllowInteractiveEditing',
           'DAQmx_CI_SemiPeriod_DigSync_Enable', 'float32',
           'DAQmxErrorPXIStarAndClock10Sync',
           'DAQmxErrorInvalidCalConstOscillatorFreqDACValue',
           'DAQmxGetWriteRegenMode', 'DAQmxResetDOTristate',
           'DAQmx_Val_mVoltsPerVoltPerMillimeter',
           'DAQmxErrorCantExceedRelayDriveLimit',
           'DAQmxResetCIPulseWidthStartingEdge',
           'DAQmxSetAIACExcitWireMode',
           'DAQmxSetSwitchDevSettlingTime',
           'DAQmxResetAnlgEdgeRefTrigCoupling',
           'DAQmx_Val_Switch_Topology_1130_1_Wire_256x1_Mux',
           'DAQmx_Val_Switch_Topology_1130_1_Wire_Dual_128x1_Mux',
           'DAQmxGetTaskName', 'DAQmxSetCISemiPeriodDigSyncEnable',
           'DAQmxGetCIEncoderAInputDigFltrTimebaseRate',
           'DAQmxErrorPALOSFault',
           'DAQmx_Val_DoNotOverwriteUnreadSamps',
           'DAQmx_CI_CountEdges_CountDir_DigFltr_MinPulseWidth',
           'DAQmxErrorBufferWithWaitMode',
           'DAQmxErrorPALOSUnsupported',
           'DAQmx_Read_AvailSampPerChan',
           'DAQmx_DigEdge_ArmStartTrig_Edge',
           'DAQmxErrorPALBadPointer', 'DAQmxReadCounterF64',
           'DAQmxErrorResourcesInUseForProperty',
           'DAQmxErrorTriggerPolarityConflict',
           'DAQmxSetCICtrTimebaseActiveEdge',
           'DAQmxSetDigEdgeArmStartTrigDigFltrEnable',
           'DAQmxSCBaseboardCalAdjust',
           'DAQmxErrorDigFilterEnableSetWhenTristateIsFalse',
           'DAQmxResetCICountEdgesActiveEdge',
           'DAQmxGetHshkDelayAfterXfer', 'DAQmxSetAODACOffsetExtSrc',
           'DAQmxErrorProductOfAOMaxAndGainTooLarge',
           'DAQmxGetReadCurrReadPos', 'DAQmx_AI_DataXferReqCond',
           'DAQmxErrorEveryNSampsEventIntervalZeroNotSupported',
           'DAQmxWarningPALOSUnsupported',
           'DAQmx_Val_Switch_Topology_2590_4x1_Mux',
           'DAQmx_AI_Excit_ActualVal', 'DAQmxGetAIThrmcplCJCSrc',
           'DAQmx_DigPattern_StartTrig_Pattern',
           'DAQmxGetCIGPSSyncMethod', 'DAQmxGetStartTrigDelayUnits',
           'DAQmxErrorDSFReadyForStartClock',
           'DAQmxResetAnlgWinStartTrigCoupling',
           'DAQmxGetDigLvlPauseTrigDigFltrEnable',
           'DAQmxErrorCAPIChanIndexInvalid', 'DAQmxWriteCtrTime',
           'DAQmxResetCOPulseLowTicks',
           'DAQmxResetCITwoEdgeSepFirstDigSyncEnable',
           'DAQmx_AI_ChanCal_Table_PreScaledVals',
           'DAQmxSetCalInfoAttribute', 'DAQmxGetReadAvailSampPerChan',
           'DAQmxSetExportedStartTrigOutputTerm',
           'DAQmxSetSampClkTimebaseMasterTimebaseDiv',
           'DAQmx_DI_DigFltr_MinPulseWidth', 'DAQmxGetWriteWaitMode',
           'DAQmxErrorOutputCantStartChangedRegenerationMode',
           'DAQmxErrorDuplicateDeviceIDInListWhenSettling',
           'DAQmxErrorEveryNSampsTransferredFromBufferEventNotSupportedByDevice',
           'DAQmxResetCIFreqDigFltrEnable', 'DAQmx_Val_BelowLvl',
           'DAQmx_Val_FromCustomScale',
           'DAQmxErrorRuntimeAborting_Routing',
           'DAQmxErrorConnectOperatorInvalidAtPointInList',
           'DAQmxWarningPALComponentAlreadyLoaded',
           'DAQmx_Val_OnBrdMemMoreThanHalfFull',
           'DAQmxGetExportedRdyForXferEventOutputTerm',
           'DAQmxGetCITwoEdgeSepSecondTerm',
           'DAQmxGetSwitchDevTopology', 'DAQmxGetAOMemMapEnable',
           'DAQmxSetMasterTimebaseRate', 'DAQmx_DI_DataXferReqCond',
           'DAQmxResetExportedHshkEventDelay',
           'DAQmxGetCIFreqDigFltrTimebaseRate', 'DAQmxGetWriteOffset',
           'DAQmxErrorSwitchActionInListSpansMultipleDevices',
           'DAQmxResetWatchdogExpirTrigType',
           'DAQmxErrorMarkerPosInvalidForLoopInScript',
           'DAQmxErrorDataOverwrittenInDeviceMemory',
           'DAQmxErrorInvalidDelaySampRateBelowPhaseShiftDCMThresh',
           'DAQmx_AI_Thrmcpl_CJCVal', 'DAQmxGetCIPeriodUnits',
           'DAQmxErrorSampClkRateExtSampClkTimebaseRateMismatch',
           'DAQmx_AnlgEdge_StartTrig_Coupling',
           'DAQmxErrorOutputBufferSizeNotMultOfXferSize',
           'DAQmxWarningPALBadAddressClass',
           'DAQmxResetExportedAdvTrigPulseWidth',
           'DAQmxErrorDifftAIInputSrcInOneChanGroup',
           'DAQmx_Val_OnBrdMemNotEmpty', 'DAQmx_Val_Degrees',
           'DAQmxErrorPALBadThreadMultitask',
           'DAQmxErrorInvalidNumSampsToWrite',
           'DAQmxErrorCounterMaxMinRangeTime',
           'DAQmxErrorPALThreadStackSizeNotSupported',
           'DAQmxSetRealTimeReportMissedSamp',
           'DAQmx_Cal_UserDefinedInfo',
           'DAQmxSetDigEdgeStartTrigDigFltrMinPulseWidth',
           'DAQmx_SampClk_DigFltr_TimebaseSrc',
           'DAQmxErrorWroteMultiSampsUsingSingleSampWrite',
           'DAQmxCreateTEDSAIThrmstrChanVex',
           'DAQmxSetAIConvTimebaseDiv', 'DAQmxSetAIRngHigh',
           'DAQmxSetDigEdgeAdvTrigSrc',
           'DAQmxGetCICtrTimebaseDigSyncEnable',
           'DAQmxErrorPALBadReadCount',
           'DAQmxResetExportedHshkEventOutputBehavior',
           'DAQmxResetAIFreqUnits', 'DAQmx_Scale_Descr',
           'DAQmxCfgDigEdgeStartTrig', 'DAQmxSetAISoundPressureUnits',
           'DAQmxErrorInconsistentExcit', 'DAQmxControlWatchdogTask',
           'DAQmx_Val_Switch_Topology_1127_Independent',
           'DAQmxGetCICount',
           'DAQmxResetCICountEdgesDigFltrMinPulseWidth',
           'DAQmxErrorForwardPolynomialCoefNotSpecd',
           'DAQmxResetExportedHshkEventPulseWidth',
           'DAQmx_Val_Switch_Topology_2530_1_Wire_Dual_64x1_Mux',
           'DAQmxErrorCustomScaleNameUsed', 'DAQmx_Val_Freq',
           'DAQmxRegisterSignalEvent',
           'DAQmxSetRealTimeWaitForNextSampClkWaitMode',
           'DAQmxErrorControlLineConflictOnPortC',
           'DAQmxCreateCICountEdgesChan',
           'DAQmx_Val_Switch_Topology_2597_6x1_Terminated_Mux',
           'DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling',
           'DAQmxErrorEventOutputTermIncludesTrigSrc',
           'DAQmxErrorCounterOutputPauseTriggerInvalid',
           'DAQmxGetSampClkDigFltrTimebaseSrc',
           'DAQmxErrorEventPulseWidthOutOfRange',
           'DAQmxErrorExcitationNotSupportedWhenTermCfgDiff',
           'DAQmxGetReadOverloadedChans',
           'DAQmxErrorNoDevMemForScript',
           'DAQmxErrorActiveChannelNotSpecified', 'int8',
           'DAQmxErrorInvalidWaveformLengthWithinLoopInScript',
           'DAQmxSetAODACRefVal', 'DAQmx_Sys_DevNames',
           'DAQmxErrorDisconnectPathNotSameAsExistingPath',
           'DAQmxWarningStoppedBeforeDone',
           'DAQmx_AO_OutputImpedance', 'DAQmx_CI_Encoder_ZInputTerm',
           'DAQmxCreatePolynomialScale', 'DAQmxReadDigitalLines',
           'DAQmxErrorMismatchedInputArraySizes',
           'DAQmxResetAIImpedance', 'DAQmx_AI_Excit_UseForScaling',
           'uInt16',
           'DAQmxErrorCIInvalidTimingSrcForSampClkDueToSampTimingType',
           'DAQmxCreateTEDSAICurrentChan',
           'DAQmx_SampClk_TimebaseDiv',
           'DAQmxGetExported10MHzRefClkOutputTerm',
           'DAQmxSetAODACOffsetVal', 'DAQmxGetSwitchDevNumRelays',
           'DAQmxErrorRepeatedNumberInPreScaledValues',
           'DAQmxErrorAttemptToEnableLineNotPreviouslyDisabled',
           'DAQmxSetCIEncoderBInputDigFltrTimebaseSrc',
           'DAQmxGetReadChangeDetectHasOverflowed',
           'DAQmxSetScaleMapScaledMax',
           'DAQmxResetCILinEncoderDistPerPulse',
           'DAQmx_Val_Switch_Topology_2503_2_Wire_24x1_Mux',
           'DAQmxResetAnlgEdgeRefTrigLvl',
           'DAQmxErrorPALVersionMismatch',
           'DAQmxSetAIChanCalPolyReverseCoeff',
           'DAQmxErrorMeasCalAdjustMainPathOutputImpedance',
           'DAQmx_Val_ExtControlled', 'DAQmx_Val_TwoEdgeSep',
           'DAQmxErrorSampClkDCMBecameUnlocked',
           'DAQmxErrorChannelSizeTooBigForPortWriteType',
           'DAQmx_Val_HalfBridgeI', 'DAQmxGetReadOffset',
           'DAQmxResetCIEncoderZInputTerm',
           'DAQmxErrorMStudioNoReversePolyScaleCoeffs',
           'DAQmxGetCICtrTimebaseMasterTimebaseDiv',
           'DAQmxErrorScanListCannotBeTimed',
           'DAQmxErrorClkOutPhaseShiftDCMBecameUnlocked',
           'DAQmxErrorChanCalRepeatedNumberInPreScaledVals',
           'DAQmx_Val_Switch_Topology_1175_1_Wire_196x1_Mux',
           'DAQmxResetCIPrescaler', 'DAQmx_Val_ReservedForRouting',
           'DAQmxDeleteSavedTask', 'DAQmxGetAnlgLvlPauseTrigHyst',
           'DAQmxResetExportedSignalAttribute',
           'DAQmxWarningOutputGainTooHighForRFFreq',
           'DAQmx_Val_CurrWritePos',
           'DAQmxGetRealTimeWriteRecoveryMode',
           'DAQmx_CO_CtrTimebaseActiveEdge', 'DAQmx_Val_FallingSlope',
           'DAQmxCreateTableScale', 'DAQmxErrorPALWaitInterrupted',
           'DAQmxErrorNonbufferedReadMoreThanSampsPerChan',
           'DAQmxGetCICountEdgesCountDirDigSyncEnable',
           'DAQmxErrorPALFileReadFault', 'DAQmxResetAIGain',
           'DAQmxSetAnlgLvlPauseTrigSrc',
           'DAQmx_Val_Switch_Topology_2586_10_SPST',
           'DAQmxAdjust4204Cal', 'DAQmx_AO_DAC_Offset_Src',
           'DAQmxSetRefClkSrc', 'DAQmx_Val_HighImpedance',
           'DAQmx_Val_BuiltIn', 'DAQmxSetCOPulseFreqUnits',
           'DAQmxResetDigEdgeStartTrigDigFltrTimebaseRate',
           'DAQmxErrorMemMapOnlyForProgIOXfer',
           'DAQmxErrorRouteFailedBecauseWatchdogExpired',
           'DAQmxGetCICtrTimebaseDigFltrTimebaseSrc',
           'DAQmxSetExportedAdvCmpltEventDelay',
           'DAQmxErrorLabVIEWVersionDoesntSupportDAQmxEvents',
           'DAQmxGetDIInvertLines',
           'DAQmxWarningRateViolatesMinADCRate',
           'DAQmxResetAnlgEdgeStartTrigCoupling',
           'DAQmxWarningPALBadReadCount',
           'DAQmx_CI_Freq_DigSync_Enable',
           'DAQmxErrorCompressedSampSizeExceedsResolution',
           'DAQmxGetWriteSleepTime', 'DAQmxGetCOPulseHighTime',
           'DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling',
           'DAQmxSetAIBridgeCfg',
           'DAQmxErrorInconsistentAnalogTrigSettings',
           'DAQmx_AI_CurrentShunt_Loc',
           'DAQmx_Scale_Poly_ReverseCoeff',
           'DAQmxErrorRefClkRateRefClkSrcMismatch',
           'DAQmx_Val_Switch_Topology_1193_Quad_8x1_Mux',
           'DAQmxSetExportedAdvCmpltEventPulseWidth',
           'DAQmxSetExportedSignalAttribute',
           'DAQmxErrorPasswordTooLong', 'DAQmxSetDigLvlPauseTrigWhen',
           'DAQmxResetCIEncoderZIndexVal',
           'DAQmx_Val_Switch_Topology_2530_2_Wire_64x1_Mux',
           'DAQmx_Val_ActiveHigh', 'DAQmxGetAODACOffsetVal',
           'DAQmxSetAnlgLvlPauseTrigLvl', 'DAQmxErrorOffsetTooLarge',
           'DAQmxErrorImmedTrigDuringRISMode',
           'DAQmxGetReadRawDataWidth',
           'DAQmxGetDigEdgeAdvTrigDigFltrEnable',
           'DAQmx_AI_ACExcit_WireMode', 'DAQmxSetAnlgWinStartTrigTop',
           'DAQmxSetSampClkDigSyncEnable', 'DAQmx_Read_RawDataWidth',
           'DAQmxResetDigEdgeStartTrigEdge',
           'DAQmxResetCITwoEdgeSepFirstDigFltrEnable',
           'DAQmxSetScaleMapPreScaledMin',
           'DAQmxErrorInvalidDTInsideWfmDataType',
           'DAQmxErrorDelayFromSampClkTooLong',
           'DAQmx_AI_Voltage_Units', 'DAQmxSetDIDigFltrMinPulseWidth',
           'DAQmxSetCIEncoderBInputDigFltrTimebaseRate',
           'DAQmxResetAIExcitUseMultiplexed',
           'DAQmx_AnlgWin_RefTrig_Btm', 'DAQmxErrorAttrCannotBeReset',
           'DAQmxSetAOCurrentUnits', 'DAQmxSetCITimestampUnits',
           'DAQmxSetSampClkTimebaseDiv',
           'DAQmxErrorRefTrigWhenContinuous', 'DAQmxClearTask',
           'DAQmx_PhysicalChan_TEDS_ModelNum',
           'DAQmxErrorCannotPerformOpWhenTaskNotReserved',
           'DAQmxResetExportedCtrOutEventPulsePolarity',
           'DAQmxGetPhysicalChanName', 'DAQmxGetScaleAttribute',
           'DAQmxResetAIThrmcplCJCVal', 'DAQmxWriteCtrTimeScalar',
           'DAQmxWarningMultipleWritesBetweenSampClks',
           'DAQmxResetCIEncoderAInputDigFltrMinPulseWidth',
           'DAQmxErrorValueInvalid',
           'DAQmxErrorCVIFunctionNotFoundInDAQmxDLL',
           'DAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth',
           'DAQmxSetDOTristate', 'DAQmx_CI_Freq_MeasMeth',
           'DAQmxSetSampQuantSampPerChan',
           'DAQmx_Val_Switch_Topology_2527_1_Wire_Dual_32x1_Mux',
           'DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth',
           'DAQmx_Val_Switch_Topology_2501_2_Wire_Quad_6x1_Mux',
           'DAQmxErrorCalibrationHandleInvalid',
           'DAQmx_SampClk_DigFltr_Enable',
           'DAQmxErrorRoutingDestTermPXIStarXNotInSlot2_Routing',
           'DAQmxResetAITermCfg', 'DAQmxSetAODataXferReqCond',
           'DAQmxErrorNonBufferedAndDataXferInterrupts',
           'DAQmxErrorTooManyPhysicalChansInList',
           'DAQmxErrorTooManyChans',
           'DAQmx_Val_Switch_Topology_2530_4_Wire_Dual_16x1_Mux',
           'DAQmxCreateAOCurrentChan',
           'DAQmxErrorInputSignalSlowerThanMeasTime',
           'DAQmxErrorPALThreadHasNoThreadObject',
           'DAQmxSetSwitchScanAttribute',
           'DAQmxErrorTaskCannotBeSavedSoInteractiveEditsAllowed',
           'DAQmx_AO_Min', 'DAQmxResetExportedSampClkOutputTerm',
           'DAQmxErrorEveryNSampsAcqIntoBufferEventAlreadyRegistered',
           'DAQmxErrorDeviceNameNotFound_Routing',
           'DAQmxErrorRoutingDestTermPXIStarXNotInSlot2',
           'DAQmxWriteCtrFreq',
           'DAQmxGetAILossyLSBRemovalCompressedSampSize',
           'DAQmxCreateCISemiPeriodChan',
           'DAQmx_Val_Switch_Topology_2530_Independent',
           'DAQmxGetAIFreqThreshVoltage', 'DAQmx_AO_CustomScaleName',
           'DAQmx_CI_TwoEdgeSep_First_DigSync_Enable',
           'DAQmxSetAnlgEdgeRefTrigSlope', 'DAQmx_Val_Rising',
           'DAQmxSetCIEncoderDecodingType', 'DAQmxResetWriteOffset',
           'DAQmx_CI_Period_DigFltr_TimebaseSrc',
           'DAQmxResetSyncPulseSrc',
           'DAQmxErrorInsufficientOnBoardMemForNumRecsAndSamps',
           'DAQmxErrorPALFeatureNotSupported', 'DAQmx_Val_FullBridge',
           'DAQmx_PersistedTask_AllowInteractiveDeletion',
           'DAQmxGetSysScales', 'DAQmx_CO_AutoIncrCnt',
           'DAQmxErrorCannotSetPropertyWhenTaskRunning',
           'DAQmx_DigEdge_StartTrig_DigSync_Enable',
           'DAQmxReadAnalogScalarF64',
           'DAQmxErrorDelayFromStartTrigTooShort',
           'DAQmxErrorMStudioNoPolyScaleCoeffsUseCalc',
           'DAQmx_CI_CtrTimebase_DigFltr_TimebaseSrc',
           'DAQmxGetCIEncoderZInputDigFltrEnable',
           'DAQmxResetAICoupling', 'DAQmx_CI_TwoEdgeSep_SecondTerm',
           'DAQmxResetCIEncoderBInputDigFltrMinPulseWidth',
           'DAQmxErrorInternalTimebaseRateDivisorSourceCombo',
           'DAQmxErrorSCXIDevNotUsablePowerTurnedOff',
           'DAQmx_Val_Auto', 'DAQmxSetAODataXferMech',
           'DAQmxGetScalePolyForwardCoeff',
           'DAQmxErrorF64PrptyValNotUnsignedInt',
           'DAQmxResetAnlgLvlPauseTrigHyst',
           'DAQmxResetAIChanCalTableScaledVals',
           'DAQmxSetBufInputBufSize', 'DAQmxGetReadChannelsToRead',
           'DAQmxResetCOCtrTimebaseRate',
           'DAQmxErrorOutputBufSizeTooSmallToStartGen',
           'DAQmxErrorResourcesInUseForInversion',
           'DAQmxGetErrorString', 'DAQmx_AI_ChanCal_Verif_RefVals',
           'DAQmxResetAnlgWinPauseTrigSrc',
           'DAQmxErrorIdentifierTooLongInScript',
           'DAQmx_Scale_PreScaledUnits', 'DAQmxResetAIRTDType',
           'DAQmxErrorRouteNotSupportedByHW',
           'DAQmx_Val_Switch_Topology_2532_2_Wire_8x32_Matrix',
           'DAQmxErrorAIInputBufferSizeNotMultOfXferSize',
           'DAQmx_Val_Source',
           'DAQmxErrorAOMinMaxNotSupportedGivenDACRefVal',
           'DAQmxErrorCantUseOnlyOnBoardMemWithProgrammedIO',
           'DAQmxGetChanAttribute',
           'DAQmxResetCICtrTimebaseDigSyncEnable',
           'DAQmx_Val_Switch_Topology_1129_2_Wire_8x32_Matrix',
           'DAQmxResetDelayFromSampClkDelay',
           'DAQmxResetAIChanCalPolyForwardCoeff',
           'DAQmxResetSampClkDigFltrEnable',
           'DAQmxResetAIBridgeShuntCalSelect',
           'DAQmxGetSwitchDevNumSwitchChans',
           'DAQmxWarningPALBadDevice',
           'DAQmxSetAIBridgeShuntCalEnable',
           'DAQmxErrorSwitchOperationChansSpanMultipleDevsInList',
           'DAQmxGetAnlgEdgeRefTrigSrc', 'DAQmx_RefClk_Src',
           'DAQmx_Val_Strain',
           'DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseRate',
           'DAQmxSetAnlgLvlPauseTrigWhen',
           'DAQmxGetWriteRawDataWidth',
           'DAQmxErrorDigitalOutputNotSupported',
           'DAQmxErrorFailedToEnableHighSpeedOutput',
           'DAQmxErrorNeedLabVIEW711PatchToUseDAQmxEvents',
           'DAQmxErrorWatchdogTimeoutOutOfRangeAndNotSpecialVal',
           'DAQmx_Scale_Table_PreScaledVals', 'DAQmxResetAdvTrigType',
           'DAQmxErrorConnectionSeparatorAtEndOfList',
           'DAQmxReadBinaryU16',
           'DAQmxErrorSampClkTbMasterTbDivNotAppropriateForSampTbSrc',
           'DAQmxErrorCOCannotKeepUpInHWTimedSinglePoint',
           'DAQmxResetExportedCtrOutEventOutputTerm',
           'DAQmx_SyncPulse_SyncTime', 'DAQmxGetCOPulseFreq',
           'DAQmx_Val_ChannelCurrent', 'DAQmx_Val_Sleep',
           'DAQmxSetCICountEdgesInitialCnt', 'DAQmxInitExtCal',
           'DAQmxGetSyncPulseMinDelayToStart',
           'DAQmx_Val_HighFreq2Ctr',
           'DAQmxGetRealTimeNumOfWarmupIters',
           'DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate',
           'DAQmx_Val_ChangeDetection', 'DAQmxConfigureTEDS',
           'DAQmxErrorPALFileFault',
           'DAQmxErrorNumSampsToWaitNotMultipleOfAlignmentQuantumInScript',
           'DAQmxErrorResourcesInUseForRouteInTask',
           'DAQmx_DigEdge_WatchdogExpirTrig_Edge',
           'DAQmxErrorPALResourceNotReserved',
           'DAQmx_Val_Switch_Topology_1169_100_SPST',
           'DAQmx_AI_ChanCal_Table_ScaledVals',
           'DAQmx_CO_CtrTimebase_DigFltr_Enable',
           'DAQmx_Exported_CtrOutEvent_OutputBehavior',
           'DAQmx_SwitchDev_NumSwitchChans',
           'DAQmxSetSampClkTimebaseActiveEdge',
           'DAQmxErrorCannotUnregisterDAQmxSoftwareEventWhileTaskIsRunning',
           'DAQmxResetDigEdgeRefTrigEdge',
           'DAQmxErrorPALComponentNotUnloadable',
           'DAQmxResetAnlgWinRefTrigCoupling',
           'DAQmxErrorCannotProduceMinPulseWidthGivenPropertyValues',
           'DAQmxRegisterDoneEvent',
           'DAQmxErrorInvalidTrigTypeSendsSWTrig',
           'DAQmxErrorCantUsePort3AloneGivenSampTimingTypeOn653x',
           'DAQmx_CI_Encoder_ZIndexVal',
           'DAQmxGetExportedHshkEventPulsePolarity',
           'DAQmxWarningPALComponentInitializationFault',
           'DAQmxGetSwitchScanWaitingForAdv',
           'DAQmx_PhysicalChan_TEDS_BitStream',
           'DAQmx_PhysicalChan_TEDS_VersionLetter', 'DAQmxSaveScale',
           'DAQmxSetExportedRefTrigOutputTerm',
           'DAQmxErrorChanSizeTooBigForU8PortRead',
           'DAQmx_Val_Switch_Topology_1163R_Octal_4x1_Mux',
           'DAQmxGetCOPulseTimeUnits',
           'DAQmxErrorOutputBufferUnderwrite',
           'DAQmxErrorRoutingDestTermPXIChassisNotIdentified_Routing',
           'DAQmxResetAOVoltageUnits', 'DAQmxSetRefTrigType',
           'DAQmxResetAODACOffsetVal',
           'DAQmxGetSwitchChanMaxACSwitchCurrent',
           'DAQmxErrorInvalidAODataWrite',
           'DAQmxErrorInternalAIInputSrcInMultChanGroups',
           'DAQmx_Val_EverySample',
           'DAQmxWarningWaitForNextSampClkDetectedMissedSampClk',
           'DAQmxErrorDigitalTerminalSpecifiedMoreThanOnce',
           'DAQmx_Val_PseudoDiff', 'DAQmxResetDigLvlPauseTrigWhen',
           'uInt64',
           'DAQmxErrorWaitForNextSampClkDetectedMissedSampClk',
           'int16', 'DAQmxCreateTEDSAIThrmstrChanIex',
           'DAQmxErrorSimultaneousAOWhenNotOnDemandTiming',
           'DAQmxErrorCanExportOnlyDigEdgeTrigs',
           'DAQmxErrorPROMOnTEDSContainsBasicTEDSData',
           'DAQmx_Val_Switch_Topology_2532_1_Wire_16x32_Matrix',
           'DAQmxGetAIChanCalEnableCal', 'DAQmx_Val_SemiPeriod',
           'DAQmxGetAOEnhancedImageRejectionEnable',
           'DAQmxResetCIFreqStartingEdge',
           'DAQmx_Write_TotalSampPerChanGenerated',
           'DAQmx_Exported_WatchdogExpiredEvent_OutputTerm',
           'DAQmxErrorSamplesWillNeverBeGenerated',
           'DAQmxSetDigPatternStartTrigPattern',
           'DAQmxSetExportedHshkEventInterlockedAssertedLvl',
           'DAQmxResetAIChanCalApplyCalIfExp',
           'DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove_Routing',
           'DAQmxSetAOUseOnlyOnBrdMem',
           'DAQmxErrorAOMinMaxNotSupportedGivenDACRangeAndOffsetVal',
           'DAQmx_Val_PathStatus_Available',
           'DAQmxErrorVoltageExcitIncompatibleWith2WireCfg',
           'DAQmxGetCIFreqStartingEdge',
           'DAQmx_Exported_HshkEvent_Interlocked_AssertOnStart',
           'DAQmxSetCICtrTimebaseDigSyncEnable',
           'DAQmx_AI_RawSampJustification',
           'DAQmxErrorInputFIFOOverflow2',
           'DAQmxErrorOverloadedChansExistNotRead',
           'DAQmxGetAnlgWinRefTrigWhen',
           'DAQmxErrorUnsupportedTrigTypeSendsSWTrig',
           'DAQmx_Val_mVoltsPerVoltPerRadian',
           'DAQmxResetAnlgWinPauseTrigTop',
           'DAQmxErrorNegativeWriteSampleNumber',
           'DAQmxWarningPLLUnlocked',
           'DAQmxErrorDataXferCustomThresholdNotDMAXferMethodSpecifiedForDev',
           'DAQmxErrorChangeDetectionRisingAndFallingEdgeChanDontMatch',
           'DAQmx_SampClk_MaxRate',
           'DAQmxGetExportedCtrOutEventOutputTerm',
           'DAQmxSetAnlgEdgeStartTrigLvl',
           'DAQmx_PersistedChan_AllowInteractiveEditing',
           'DAQmx_Buf_Output_BufSize',
           'DAQmxErrorInvalidTimingSrcDueToSampTimingType',
           'DAQmxWarningPALMemoryAlignmentFault',
           'DAQmxSetAODACRngLow',
           'DAQmxErrorExtRefClkRateNotSpecified',
           'DAQmx_Val_OutsideWin', 'DAQmx_Val_ChanPerLine',
           'DAQmxCloseExtCal', 'DAQmxResetPauseTrigType',
           'DAQmxGetAnlgWinRefTrigTop',
           'DAQmx_AI_Lowpass_SwitchCap_ClkSrc',
           'DAQmxGetCICustomScaleName',
           'DAQmxResetExportedChangeDetectEventOutputTerm',
           'DAQmxGetAODACRefAllowConnToGnd', 'DAQmxSetAIMax',
           'DAQmxGetExportedAIHoldCmpltEventPulsePolarity',
           'DAQmxErrorCAPISyncCallbackNotSupportedInLVRT',
           'DAQmx_CI_Encoder_ZIndexPhase',
           'DAQmxErrorChanSizeTooBigForU16PortRead',
           'DAQmx_AI_LeadWireResistance',
           'DAQmx_Val_FirstPretrigSamp',
           'DAQmxCreateAIMicrophoneChan',
           'DAQmxErrorInternalClkDCMBecameUnlocked',
           'DAQmx_Read_SleepTime',
           'DAQmxErrorInvalidTriggerLineInList',
           'DAQmx_Val_Switch_Topology_2529_2_Wire_4x32_Matrix',
           'DAQmxErrorStartTrigSrcEqualToSampClkSrc',
           'DAQmxErrorCOReadyForNewValNotSupportedWithHWTimedSinglePoint',
           'DAQmx_RefClk_Rate', 'DAQmxChangeExtCalPassword',
           'DAQmxErrorPolyCoeffsInconsistent',
           'DAQmxWarningPALLogicalBufferEmpty', 'DAQmxWriteBinaryI32',
           'DAQmx_Exported_AIConvClk_Pulse_Polarity',
           'DAQmx_CI_CountEdges_CountDir_DigFltr_Enable',
           'DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2',
           'DAQmxErrorPLLBecameUnlocked',
           'DAQmxErrorWaitForNextSampClkDetected3OrMoreSampClks',
           'DAQmxErrorCannotReadPastEndOfRecord',
           'DAQmxResetAnlgEdgeRefTrigSrc', 'DAQmxErrorInvalidTask',
           'DAQmx_Exported_DividedSampClkTimebase_OutputTerm',
           'DAQmxGetAIExcitUseMultiplexed',
           'DAQmxErrorNumLinesMismatchInReadOrWrite',
           'DAQmxErrorSCXISerialCommunication',
           'DAQmxDoneEventCallbackPtr',
           'DAQmxErrorRelayNameNotSpecifiedInList',
           'DAQmxCreateCIGPSTimestampChan',
           'DAQmxErrorCOWritePulseHighTicksNotSupported',
           'DAQmxSetAIStrainGageGageFactor', 'DAQmx_Val_Meters',
           'DAQmxErrorTableScaleNumPreScaledAndScaledValsNotEqual',
           'DAQmxGetTaskChannels', 'DAQmxErrorAIMaxTooSmall',
           'DAQmxErrorLibraryNotPresent',
           'DAQmx_CI_SemiPeriod_DigFltr_TimebaseSrc',
           'DAQmxCfgOutputBuffer',
           'DAQmxErrorInconsistentNumSamplesToWrite',
           'DAQmxErrorChanDoesNotSupportCompression',
           'DAQmxErrorPALBadReadOffset',
           'DAQmxResetCILinEncoderInitialPos',
           'DAQmxErrorMemMapAndSimultaneousAO',
           'DAQmxErrorCOWriteDutyCycleOutOfRange',
           'DAQmxGetAIEnhancedAliasRejectionEnable',
           'DAQmxSetSampClkRate',
           'DAQmx_Val_Switch_Topology_2568_31_SPST',
           'DAQmxAdjust4225Cal', 'DAQmxResetWriteWaitMode',
           'DAQmx_CO_CtrTimebase_DigFltr_TimebaseSrc',
           'DAQmx_Val_LargeRng2Ctr',
           'DAQmxErrorOpNotSupportedWhenRefClkSrcNone',
           'DAQmxGetAIDevScalingCoeff', 'DAQmx_Val_AllowRegen',
           'DAQmxGetDIDataXferMech', 'DAQmxGetSwitchChanMaxACVoltage',
           'DAQmxGetCICountEdgesDigSyncEnable', 'DAQmxSetAOMin',
           'DAQmx_Write_RelativeTo', 'DAQmxResetCIPeriodMeasTime',
           'DAQmxErrorMaxSoundPressureAndMicSensitivityNotSupportedByDev',
           'DAQmx_AO_OutputType',
           'DAQmxErrorRoutingPathNotAvailable_Routing',
           'DAQmxResetAICustomScaleName', 'DAQmxGetCalDevTemp',
           'DAQmx_Val_VoltsPerG', 'DAQmxAdjust4220Cal',
           'DAQmxErrorDelayFromSampClkWithExtConv',
           'DAQmx_PhysicalChanName', 'DAQmxResetAIACExcitWireMode',
           'DAQmx_Val_Switch_Topology_2503_2_Wire_4x6_Matrix',
           'DAQmx_CI_PulseWidth_DigSync_Enable',
           'DAQmxGetCIPulseWidthDigFltrMinPulseWidth',
           'DAQmxErrorInvalidAOGainCalConst',
           'DAQmx_Val_SampClkPeriods',
           'DAQmxErrorTrigWhenAOHWTimedSinglePtSampMode',
           'DAQmxSetInterlockedHshkTrigAssertedLvl',
           'DAQmxErrorInvalidCfgCalAdjustMainPreAmpOffset',
           'DAQmxSetSampTimingType', 'DAQmx_AnlgWin_RefTrig_Src',
           'DAQmxErrorInvalidDeviceID',
           'DAQmxErrorChanSizeTooBigForU16PortWrite',
           'DAQmxErrorTEDSMinPhysValGEMaxPhysVal',
           'DAQmxResetSampClkTimebaseMasterTimebaseDiv',
           'DAQmx_Val_Switch_Topology_1129_2_Wire_Dual_4x32_Matrix',
           'DAQmx_AI_StrainGage_PoissonRatio',
           'DAQmxResetOnDemandSimultaneousAOEnable',
           'DAQmxGetAnlgEdgeStartTrigHyst',
           'DAQmxErrorWriteChanTypeMismatch', 'DAQmxReadDigitalU16',
           'DAQmxSwitchConnect',
           'DAQmxErrorCAPIReservedParamNotNULLNorEmpty',
           'DAQmx_Val_ChannelVoltage',
           'DAQmxGetDigPatternStartTrigPattern',
           'DAQmx_Val_PathStatus_ChannelInUse',
           'DAQmxResetDigPatternRefTrigWhen',
           'DAQmx_StartTrig_DelayUnits',
           'DAQmxErrorAttributeNotQueryableUnlessTaskIsCommitted',
           'DAQmxGetCILinEncoderUnits',
           'DAQmxGetAIBridgeNomResistance',
           'DAQmxErrorRouteNotSupportedByHW_Routing',
           'DAQmxErrorCannotHandshakeWithPort0', 'DAQmxStartTask',
           'DAQmxGetAnlgEdgeStartTrigSlope',
           'DAQmxErrorNoWatchdogOutputOnPortReservedForInput',
           'DAQmx_Val_B_Type_TC', 'DAQmx_RealTime_ReportMissedSamp',
           'DAQmxGetReadOverloadedChansExist',
           'DAQmxGetCIAngEncoderPulsesPerRev', 'DAQmx_Val_NoBridge',
           'DAQmxResetReadOffset',
           'DAQmxErrorGlobalChanNameAlreadyTaskName',
           'DAQmxGetRealTimeReportMissedSamp',
           'DAQmx_CI_Period_DigFltr_Enable', 'DAQmxGetAIAtten',
           'DAQmxGetAIChanCalDesc', 'DAQmxErrorDACRefValNotSet',
           'DAQmxSwitchDisconnectMulti', 'DAQmxSetStartTrigDelay',
           'DAQmxErrorResourcesInUseForInversionInTask',
           'DAQmx_Val_DigLvl', 'DAQmx_AnlgWin_StartTrig_Coupling',
           'DAQmxResetBufOutputBufSize',
           'DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc',
           'DAQmxCfgAnlgEdgeRefTrig', 'DAQmx_SwitchDev_NumColumns',
           'DAQmxErrorScriptDataUnderflow',
           'DAQmxResetAIChanCalPolyReverseCoeff',
           'DAQmxGetExportedCtrOutEventOutputBehavior',
           'DAQmx_SwitchScan_RepeatMode',
           'DAQmx_AO_DAC_Ref_ConnToGnd',
           'DAQmx_Val_Switch_Topology_1130_2_Wire_Quad_32x1_Mux',
           'DAQmxErrorUnexpectedSeparatorInList',
           'DAQmxErrorMultipleRelaysForSingleRelayOp',
           'DAQmxErrorBufferTooSmallForString',
           'DAQmxWriteCtrFreqScalar', 'DAQmxWriteToTEDSFromArray',
           'DAQmxSetAOGain', 'DAQmxSetAIRVDTUnits',
           'DAQmx_AnlgWin_StartTrig_Src',
           'DAQmxResetAODACOffsetExtSrc',
           'DAQmxErrorMStudioNoForwardPolyScaleCoeffsUseCalc',
           'DAQmxSetAOIdleOutputBehavior',
           'DAQmxSetAIAccelSensitivity', 'DAQmxSetCOPrescaler',
           'DAQmxErrorAODuringCounter1DMAConflict',
           'DAQmxCreateAOVoltageChan',
           'DAQmxSetDigEdgeStartTrigDigFltrEnable',
           'DAQmxGetAIChanCalPolyReverseCoeff',
           'DAQmx_DigEdge_ArmStartTrig_Src',
           'DAQmxGetExportedHshkEventInterlockedAssertedLvl',
           'DAQmxGetAIMicrophoneSensitivity',
           'DAQmx_Buf_Output_OnbrdBufSize',
           'DAQmxErrorIfElseBlockNotAllowedInConditionalRepeatLoopInScript',
           'DAQmxSetExportedAdvCmpltEventOutputTerm',
           'DAQmxErrorInvalidAnalogTrigSrc', 'DAQmxGetSampClkRate',
           'DAQmx_Val_Position_RVDT',
           'DAQmx_Val_Acquired_Into_Buffer',
           'DAQmxGetCalUserDefinedInfo',
           'DAQmxErrorCounterTimebaseRateNotSpecified',
           'DAQmxSetAIRTDA', 'DAQmxSetAIRTDC', 'DAQmxSetAIRTDB',
           'DAQmxErrorActionNotSupportedTaskNotWatchdog',
           'DAQmxErrorCannotHaveCJTempWithOtherChans',
           'DAQmxErrorDACRngHighNotEqualRefVal',
           'DAQmx_AI_Temp_Units', 'DAQmxErrorPALResourceNotAvailable',
           'DAQmx_CO_PulseDone', 'DAQmx_AI_Bridge_Balance_CoarsePot',
           'DAQmxSetCIGPSSyncMethod', 'DAQmx_AI_Coupling',
           'DAQmx_AI_Max', 'DAQmxErrorAIMaxNotSpecified',
           'DAQmxErrorCannotOpenTopologyCfgFile',
           'DAQmx_Val_DoNotInvertPolarity',
           'DAQmxSetRealTimeWriteRecoveryMode',
           'DAQmxSetCOCtrTimebaseRate',
           'DAQmxErrorMeasCalAdjustMainPathPreAmpOffset',
           'DAQmx_DigPattern_RefTrig_Src', 'DAQmxGetAIRTDType',
           'DAQmxSetDIInvertLines', 'DAQmxResetSampClkSrc',
           'DAQmxErrorPALBadAddressClass',
           'DAQmxResetCITwoEdgeSepSecondEdge',
           'DAQmxResetDIInvertLines',
           'DAQmxErrorNoCommonTrigLineForTaskRoute',
           'DAQmxErrorWriteFailsBufferSizeAutoConfigured',
           'DAQmxErrorSamplesWillNeverBeAvailable',
           'DAQmxErrorAutoStartWriteNotAllowedEventRegistered',
           'DAQmxSwitchGetMultiRelayCount',
           'DAQmxSetCICountEdgesTerm',
           'DAQmx_Val_Switch_Topology_2530_1_Wire_128x1_Mux',
           'DAQmxSetAnlgWinStartTrigWhen',
           'DAQmxResetSampClkActiveEdge', 'DAQmxSwitchDisconnect',
           'DAQmxSetCIPeriodDigFltrTimebaseRate',
           'DAQmxErrorPALComponentAlreadyInstalled',
           'DAQmxResetAnlgWinRefTrigBtm',
           'DAQmxResetMasterTimebaseSrc',
           'DAQmx_Val_Switch_Topology_2501_2_Wire_24x1_Mux',
           'DAQmxErrorInvalidAcqTypeForFREQOUT',
           'DAQmx_CI_TwoEdgeSep_SecondEdge',
           'DAQmxSetDigEdgeRefTrigEdge', 'DAQmxResetWriteAttribute',
           'DAQmxErrorExpectedSeparatorInList',
           'DAQmxGetCIEncoderZIndexVal',
           'DAQmxSetAIBridgeBalanceFinePot', 'DAQmxSetRefClkRate',
           'DAQmx_Val_Ohms', 'DAQmx_CI_Encoder_ZInput_DigFltr_Enable',
           'DAQmxSetAILVDTSensitivityUnits', 'DAQmx_AI_Gain',
           'DAQmxCreateAIThrmstrChanIex',
           'DAQmxErrorFewerThan2PreScaledVals', 'DAQmxSetCOPulseFreq',
           'DAQmx_CO_Pulse_HighTicks',
           'DAQmxErrorOnlyContinuousScanSupported',
           'DAQmxSetCITwoEdgeSepFirstTerm',
           'DAQmxResetCICountEdgesTerm', 'DAQmxSetCIPrescaler',
           'DAQmxGetCICtrTimebaseRate',
           'DAQmxWarningUserDefInfoStringTooLong',
           'DAQmxResetAIFreqThreshVoltage',
           'DAQmx_CI_PulseWidth_Term',
           'DAQmxSetCOCtrTimebaseDigSyncEnable',
           'DAQmxResetAOCustomScaleName',
           'DAQmxCalculateReversePolyCoeff',
           'DAQmxResetCISemiPeriodDigFltrTimebaseSrc',
           'DAQmxErrorExtCalFunctionOutsideExtCalSession',
           'DAQmxGetAIRTDA', 'DAQmxGetAIRTDC', 'DAQmxGetAIRTDB',
           'DAQmxGetAOMin', 'DAQmx_Val_GroupByScanNumber',
           'DAQmxGetCOPulseDutyCyc', 'DAQmxGetAICurrentUnits',
           'DAQmxErrorPowerBudgetExceeded',
           'DAQmxGetAIChanCalTableScaledVals', 'DAQmxGetAIImpedance',
           'DAQmxResetCIGPSSyncMethod', 'DAQmxResetAIStrainUnits',
           'DAQmx_Val_LeavingWin',
           'DAQmxSetDigEdgeStartTrigDigFltrTimebaseRate',
           'DAQmxResetDOUseOnlyOnBrdMem',
           'DAQmxErrorInvalidAdvanceEventTriggerType',
           'DAQmxGetCOPulseFreqInitialDelay',
           'DAQmxErrorIntermediateBufferSizeNotMultipleOfIncr',
           'DAQmxResetDigEdgeArmStartTrigDigFltrMinPulseWidth',
           'DAQmxErrorCOWriteFreqOutOfRange',
           'DAQmxErrorCannotRegisterDAQmxSoftwareEventWhileTaskIsRunning',
           'DAQmxErrorWaveformNameTooLong',
           'DAQmxErrorAOEveryNSampsEventIntervalNotMultipleOf2',
           'DAQmxSetExportedRdyForXferEventLvlActiveLvl',
           'DAQmx_SwitchDev_NumRows',
           'DAQmxErrorTDCNotEnabledDuringRISMode',
           'DAQmxWarningPALPhysicalBufferEmpty',
           'DAQmxSetCIFreqMeasTime', 'DAQmx_Sys_NIDAQMinorVersion',
           'DAQmxResetDigPatternStartTrigWhen',
           'DAQmxSetCICountEdgesDirTerm',
           'DAQmxSetExportedSampClkOutputTerm',
           'DAQmx_AIConv_ActiveEdge',
           'DAQmxSetStartTrigRetriggerable',
           'DAQmx_SampClk_DigSync_Enable',
           'DAQmxGetExportedRdyForXferEventLvlActiveLvl',
           'DAQmxErrorSCXI1122ResistanceChanNotSupportedForCfg',
           'DAQmxResetAIRVDTSensitivity',
           'DAQmx_AO_EnhancedImageRejectionEnable',
           'DAQmxSetAODACRngHigh',
           'DAQmxSetCICtrTimebaseMasterTimebaseDiv',
           'DAQmxErrorStartTrigDigPatternChanNotInTask',
           'DAQmxWarningLowpassFilterSettlingTimeExceedsUserTimeBetween2ADCConversions',
           'DAQmxResetCIFreqMeasTime',
           'DAQmxErrorDAQmxCantRetrieveStringDueToUnknownChar',
           'DAQmxSetSwitchScanRepeatMode',
           'DAQmxGetReadReadAllAvailSamp',
           'DAQmxErrorClkDoublerDCMLock',
           'DAQmxGetDigEdgeStartTrigDigSyncEnable',
           'DAQmx_CO_RdyForNewVal', 'DAQmxSetAIDataXferReqCond',
           'DAQmxResetCIDataXferMech',
           'DAQmxErrorDigFilterNotAvailableOnTerm',
           'DAQmx_Exported_HshkEvent_Pulse_Polarity',
           'DAQmxResetDigEdgeStartTrigDigFltrEnable',
           'DAQmx_AI_ChanCal_ScaleType',
           'DAQmxGetSwitchDeviceAttribute',
           'DAQmxErrorMeasCalAdjustMainPathPostAmpGainAndOffset',
           'DAQmxWriteCtrTicks', 'DAQmxWarningPALMemoryHeapNotEmpty',
           'DAQmx_Scale_ScaledUnits',
           'DAQmxGetDigEdgeStartTrigDigFltrEnable',
           'DAQmxResetAnlgEdgeStartTrigLvl',
           'DAQmxGetCIDupCountPrevent', 'DAQmx_CI_Period_MeasMeth',
           'DAQmxErrorZeroReversePolyScaleCoeffs',
           'DAQmx_Val_WDTExpiredEvent', 'DAQmx_Dev_SerialNum',
           'DAQmx_AnlgWin_StartTrig_Top',
           'DAQmxResetCIPeriodDigFltrMinPulseWidth',
           'DAQmx_Val_WriteToEEPROM',
           'DAQmxGetScaleTablePreScaledVals',
           'DAQmxErrorNoDivisorForExternalSignal',
           'DAQmx_AO_LoadImpedance', 'DAQmxErrorResourceNotFound',
           'DAQmxErrorDifferentAIInputSrcInOneChanGroup',
           'DAQmxWarningTooManyInterruptsPerSecond',
           'DAQmxGetCOPulseHighTicks', 'DAQmxGetWriteRelativeTo',
           'DAQmx_DigEdge_StartTrig_DigFltr_MinPulseWidth',
           'DAQmxSetAIExcitVoltageOrCurrent',
           'DAQmx_Val_PathStatus_SourceChannelConflict',
           'DAQmx_Val_OpenCollector',
           'DAQmx_Val_mVoltsPerVoltPerDegree',
           'DAQmxWarningWriteNotCompleteBeforeSampClk',
           'DAQmx_Val_Cfg_Default',
           'DAQmxErrorDelayFromSampClkTooShort',
           'DAQmxSetWriteAttribute', 'DAQmx_CO_Pulse_HighTime',
           'DAQmx_CI_Encoder_ZInput_DigSync_Enable',
           'DAQmxGetSampQuantSampPerChan',
           'DAQmxGetScaleMapScaledMax', 'DAQmx_AI_CustomScaleName',
           'DAQmxGetSampClkDigFltrMinPulseWidth',
           'DAQmxErrorStartTrigOutputTermNotSupportedGivenTimingType',
           'DAQmxSetAIDataXferCustomThreshold',
           'DAQmxErrorCannotTristate8255OutputLines',
           'DAQmx_AI_Excit_Src', 'DAQmxErrorCAPIReservedParamNotNULL',
           'DAQmx_SwitchChan_Bandwidth', 'DAQmxSetAICurrentUnits',
           'DAQmx_AI_RawSampSize', 'DAQmxGetAOGain',
           'DAQmxResetExportedHshkEventInterlockedAssertedLvl',
           'DAQmxGetExportedStartTrigOutputTerm',
           'DAQmxErrorInvalidCalConstOscillatorPhaseDACValue',
           'DAQmxGetCIAngEncoderInitialAngle', 'DAQmxClearTEDS',
           'DAQmxErrorRouteSrcAndDestSame_Routing',
           'DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth',
           'DAQmxGetExportedAdvTrigPulseWidth',
           'DAQmxCfgAnlgWindowStartTrig', 'DAQmxGetCOPulseLowTime',
           'DAQmxWarningPALBadOffset',
           'DAQmxErrorCannotScanWithCurrentTopology',
           'DAQmxSetAILVDTUnits',
           'DAQmxWarningOutputGainTooLowForRFFreq',
           'DAQmxErrorResourcesInUseForInversion_Routing',
           'DAQmxSetExportedChangeDetectEventOutputTerm',
           'DAQmxErrorAOMinMaxNotInDACRange',
           'DAQmxCfgDigPatternStartTrig',
           'DAQmxSetCIEncoderAInputDigFltrTimebaseSrc',
           'DAQmxAdjust4224Cal', 'DAQmx_CI_TwoEdgeSep_FirstEdge',
           'DAQmx_SampClk_DigFltr_TimebaseRate', 'DAQmx_AO_TermCfg',
           'DAQmxDisconnectTerms', 'DAQmx_Val_Action_Cancel',
           'DAQmxResetExportedHshkEventPulsePolarity',
           'DAQmxResetAIFreqHyst', 'DAQmxGetWatchdogHasExpired',
           'DAQmxErrorSampleRateNumChansConvertPeriodCombo',
           'DAQmxResetAILowpassEnable',
           'DAQmxErrorNumPtsToComputeNotPositive',
           'DAQmx_AI_RVDT_SensitivityUnits', 'DAQmxGetDITristate',
           'DAQmxErrorStartTrigDigPatternSizeDoesNotMatchSourceSize',
           'DAQmxErrorInvalidDateTimeInEEPROM',
           'DAQmxGetCISemiPeriodTerm',
           'DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth',
           'DAQmxSetScalePolyForwardCoeff', 'DAQmxGetAILVDTUnits',
           'DAQmx_CI_CountEdges_DigFltr_MinPulseWidth',
           'DAQmxSetDigPatternStartTrigSrc',
           'DAQmxSetAIResistanceCfg',
           'DAQmxErrorPALDMALinkEventMissed',
           'DAQmxErrorNoLastExtCalDateTimeLastExtCalNotDAQmx',
           'DAQmxSetCOAutoIncrCnt',
           'DAQmxResetDigPatternRefTrigPattern',
           'DAQmxErrorDifftSyncPulseSrcAndSampClkTimebaseSrcDevMultiDevTask',
           'DAQmxSwitchFindPath', 'DAQmxSetBufOutputOnbrdBufSize',
           'DAQmx_Task_Complete',
           'DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc',
           'DAQmxWarningPALPhysicalBufferFull',
           'DAQmxGetCIEncoderZInputDigFltrTimebaseRate',
           'DAQmxResetDigLvlPauseTrigDigSyncEnable',
           'DAQmx_CI_PulseWidth_DigFltr_TimebaseRate',
           'DAQmxGetCIEncoderBInputDigSyncEnable',
           'DAQmxErrorOffsetTooSmall',
           'DAQmxErrorChannelNotAvailableInParallelMode',
           'DAQmxErrorTooManyChansForInternalAIInputSrc',
           'DAQmxSetAICurrentShuntLoc',
           'DAQmxErrorCannotGetPropertyWhenTaskNotReservedCommittedOrRunning',
           'DAQmx_AIConv_Rate',
           'DAQmxErrorActiveChanNotSpecdWhenGetting1LinePrpty',
           'DAQmxErrorRoutingSrcTermPXIChassisNotIdentified',
           'DAQmx_Val_AdvanceTrigger',
           'DAQmxErrorReversePowerProtectionActivated',
           'DAQmxSetWatchdogAttribute',
           'DAQmxErrorRoutingSrcTermPXIChassisNotIdentified_Routing',
           'DAQmxSetCIEncoderBInputTerm',
           'DAQmxRegisterEveryNSamplesEvent', 'DAQmxSetReadOffset',
           'DAQmxErrorInvalidCalLowPassCutoffFreq',
           'DAQmx_AI_Bridge_NomResistance',
           'DAQmxErrorInvalidCfgCalAdjustMainPathPreAmpGain',
           'DAQmxResetCIEncoderZInputDigFltrMinPulseWidth',
           'DAQmx_Interlocked_HshkTrig_Src', 'DAQmxResetReadWaitMode',
           'DAQmxErrorPALMessageOverflow',
           'DAQmxResetCICountEdgesInitialCnt', 'DAQmxGetCIPeriodTerm',
           'DAQmxResetDIDataXferMech', 'DAQmx_Val_AO',
           'DAQmxErrorBuiltInTempSensorNotSupported',
           'DAQmxReadBinaryU32', 'DAQmxCfgDigEdgeRefTrig',
           'DAQmx_Val_Switch_Topology_1130_1_Wire_Sixteen_16x1_Mux',
           'DAQmx_Read_Offset', 'DAQmx_Val_AC',
           'DAQmxErrorReadWaitNextSampClkWaitMismatchTwo',
           'DAQmxResetAnlgWinStartTrigBtm', 'DAQmxGetCOPulseLowTicks',
           'DAQmxErrorPALIrrelevantAttribute',
           'DAQmxErrorInternalSampClkNotRisingEdge',
           'DAQmx_CI_CtrTimebase_DigSync_Enable',
           'DAQmxErrorDataXferRequestConditionNotSpecifiedForCustomThreshold',
           'DAQmxErrorMemMapAndBuffer',
           'DAQmxErrorLinesUsedForStaticInputNotForHandshakingInput',
           'DAQmxGetSysNIDAQMajorVersion',
           'DAQmxErrorMeasuredBridgeOffsetTooHigh',
           'DAQmxGetAIChanCalOperatorName',
           'DAQmxGetExportedHshkEventOutputBehavior',
           'DAQmxGetAIChanCalApplyCalIfExp', 'DAQmx_Val_Load',
           'DAQmxResetSampClkDigFltrMinPulseWidth',
           'DAQmxErrorPXIDevTempCausedShutDown',
           'DAQmxSetCOCtrTimebaseSrc', 'DAQmxGetPersistedScaleAuthor',
           'DAQmx_CI_SemiPeriod_DigFltr_Enable',
           'DAQmxGetCITwoEdgeSepFirstTerm',
           'DAQmxSetDigPatternStartTrigWhen',
           'DAQmxGetNthTaskReadChannel', 'DAQmxResetAIThrmcplType',
           'DAQmxWaitUntilTaskDone', 'DAQmxSetAIAtten',
           'DAQmx_AI_Freq_ThreshVoltage',
           'DAQmxErrorAOSampTimingTypeDifferentIn2Tasks',
           'DAQmx_DigLvl_PauseTrig_DigSync_Enable',
           'DAQmxErrorInvalidNumberSamplesToRead',
           'DAQmxErrorNoDMAChansAvailable',
           'DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_16x16_Matrix',
           'DAQmxErrorMarkerOutsideWaveformInScript',
           'DAQmxResetAILowpassSwitchCapClkSrc',
           'DAQmx_CI_CountEdges_InitialCnt',
           'DAQmxErrorExtCalNotComplete',
           'DAQmx_Val_Switch_Topology_1127_1_Wire_64x1_Mux',
           'DAQmxErrorSamplesNotYetAvailable',
           'DAQmxCreateAIFreqVoltageChan',
           'DAQmxResetAICurrentShuntLoc',
           'DAQmxGetCICountEdgesDigFltrTimebaseRate',
           'DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc',
           'DAQmxErrorMultipleChansNotSupportedDuringCalSetup',
           'DAQmxIsTaskDone', 'DAQmxErrorCantSaveTaskWithoutReplace',
           'DAQmx_Exported_AdvCmpltEvent_Delay',
           'DAQmx_Write_DigitalLines_BytesPerChan',
           'DAQmxSetCOPulseTimeUnits',
           'DAQmx_CI_SemiPeriod_StartingEdge', 'DAQmx_Val_Kelvins',
           'DAQmxErrorDuplicateTask', 'DAQmxGetAODACRefExtSrc',
           'DAQmxSetAIExcitVal', 'DAQmxGetCICountEdgesDirTerm',
           'DAQmx_CI_Freq_MeasTime',
           'DAQmx_CI_TwoEdgeSep_Second_DigFltr_MinPulseWidth',
           'DAQmx_AI_Lowpass_Enable', 'DAQmxSetDOUseOnlyOnBrdMem',
           'DAQmxErrorCounterStartPauseTriggerConflict',
           'DAQmx_Val_Switch_Topology_2532_1_Wire_4x128_Matrix',
           'DAQmxResetSampQuantSampMode',
           'DAQmxSetCIEncoderZInputDigFltrTimebaseRate',
           'DAQmxErrorMStudioNoReversePolyScaleCoeffsUseCalc',
           'DAQmxErrorPALFirmwareFault', 'DAQmxSetCISemiPeriodTerm',
           'DAQmxGetCISemiPeriodDigSyncEnable',
           'DAQmxResetAILowpassSwitchCapExtClkFreq', 'int32',
           'DAQmxGetStartTrigType',
           'DAQmxErrorSampClkTimebaseDCMBecameUnlocked',
           'DAQmxErrorSemicolonDoesNotFollowRangeInList',
           'DAQmxGetAnlgWinPauseTrigTop', 'DAQmxGetPauseTrigType',
           'DAQmxSetCOCtrTimebaseMasterTimebaseDiv',
           'DAQmxErrorCannotAddNewDevsAfterTaskConfiguration',
           'DAQmxWarningSampClkRateAboveDevSpecs',
           'DAQmxErrorReversePolyOrderLessThanNumPtsToCompute',
           'DAQmxResetAnlgLvlPauseTrigWhen',
           'DAQmx_DigEdge_ArmStartTrig_DigFltr_MinPulseWidth',
           'DAQmxSetExportedHshkEventOutputBehavior',
           'DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseSrc',
           'DAQmxGetCOCtrTimebaseDigSyncEnable',
           'DAQmxErrorMoreThanOneTerminal', 'DAQmx_Val_CountDown',
           'DAQmx_CI_PulseWidth_DigFltr_Enable',
           'DAQmxErrorDuplicateDeviceName_Routing',
           'DAQmxErrorInvalidPhysicalChanForCal',
           'DAQmx_AO_DAC_Ref_Src', 'DAQmxGetScalePreScaledUnits',
           'DAQmxResetAILVDTSensitivityUnits',
           'DAQmxErrorEndpointNotFound',
           'DAQmxResetCICtrTimebaseRate',
           'DAQmxErrorSubsetStartOffsetNotAlignedInScript',
           'DAQmxErrorUnexpectedEndOfActionsInList',
           'DAQmxGetWriteAttribute', 'DAQmxWarningPALBadWriteCount',
           'DAQmxResetCIEncoderBInputDigFltrTimebaseSrc',
           'DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth',
           'DAQmxResetCIAngEncoderUnits',
           'DAQmxResetAOEnhancedImageRejectionEnable',
           'DAQmxGetSyncPulseSyncTime',
           'DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseRate',
           'DAQmxWarningPALBadReadOffset',
           'DAQmxErrorSwitchDevShutDownDueToHighTemp',
           'DAQmx_Val_Task_Reserve', 'DAQmxDeleteSavedScale',
           'DAQmx_AnlgWin_StartTrig_When',
           'DAQmx_AI_Accel_SensitivityUnits',
           'DAQmxGetPersistedScaleAllowInteractiveEditing',
           'DAQmxGetCOPrescaler',
           'DAQmxErrorPALResourceNotInitialized',
           'DAQmxErrorChanCalScaleTypeNotSet',
           'DAQmx_Val_Switch_Topology_2576_2_Wire_Sixteen_4x1_Mux',
           'DAQmxGetAIRTDR0', 'DAQmxGetAIResistanceUnits',
           'DAQmxErrorExplicitConnectionExists',
           'DAQmx_Val_Pulse_Freq', 'DAQmxSetCOCtrTimebaseActiveEdge',
           'DAQmxErrorCanNotPerformOpWhenNoChansInTask',
           'DAQmxErrorPropertyNotSupportedNotOutputTask',
           'DAQmxResetCIGPSSyncSrc',
           'DAQmxResetExportedHshkEventInterlockedDeassertDelay',
           'DAQmx_CI_TwoEdgeSep_First_DigFltr_Enable',
           'DAQmxErrorInvalidRefClkSrcGivenSampClkSrc',
           'DAQmx_AI_Lowpass_SwitchCap_OutClkDiv',
           'DAQmx_CI_TCReached', 'DAQmxSetAIConvActiveEdge',
           'DAQmx_ChangeDetect_DI_FallingEdgePhysicalChans',
           'DAQmxGetCIFreqMeasTime', 'DAQmx_Val_mVoltsPerG',
           'DAQmxErrorDLLLock', 'DAQmx_Exported_SampClk_OutputTerm',
           'DAQmxErrorStreamDCMLock',
           'DAQmx_CO_Pulse_Freq_InitialDelay',
           'DAQmxErrorAOMinMaxNotSupportedGivenDACRefAndOffsetVal',
           'DAQmxErrorHWTimedSinglePointNotSupportedAI',
           'DAQmxGetAIDataXferReqCond',
           'DAQmxErrorSampClkRateNotSupportedWithEARDisabled',
           'DAQmx_SwitchChan_MaxACCarryPwr',
           'DAQmx_SwitchChan_MaxACSwitchCurrent',
           'DAQmxGetCISemiPeriodStartingEdge',
           'DAQmxErrorPALPhysicalBufferFull',
           'DAQmxGetAIBridgeShuntCalGainAdjust',
           'DAQmxErrorSwitchCannotDriveMultipleTrigLines',
           'DAQmxWriteBinaryI16',
           'DAQmxSetCICountEdgesCountDirDigSyncEnable',
           'DAQmxGetWriteNumChans',
           'DAQmxErrorCtrHWTimedSinglePointAndDataXferNotProgIO',
           'DAQmxErrorAOMinMaxNotSupportedGivenDACOffsetVal',
           'DAQmxSetSampClkDigFltrEnable',
           'DAQmxErrorEveryNSampsTransferredFromBufferEventAlreadyRegistered',
           'DAQmxSetCICountEdgesDigFltrMinPulseWidth',
           'DAQmxErrorAcqStoppedDriverCantXferDataFastEnough',
           'DAQmxErrorInvalidVoltageReadingDuringExtCal',
           'DAQmxErrorAttributeInconsistentAcrossChannelsOnDevice',
           'DAQmxGetAnlgWinStartTrigWhen',
           'DAQmxCreateAIStrainGageChan',
           'DAQmx_AI_Bridge_Balance_FinePot',
           'DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth',
           'DAQmxResetSampClkTimebaseSrc',
           'DAQmxResetCICtrTimebaseDigFltrEnable',
           'DAQmxGetSysNIDAQMinorVersion',
           'DAQmxErrorDifferentRawDataFormats',
           'DAQmx_CI_Period_DigSync_Enable', 'DAQmxAOSeriesCalAdjust',
           'DAQmxSetAOEnhancedImageRejectionEnable',
           'DAQmxErrorAOPropertiesCauseVoltageBelowMin',
           'DAQmx_CI_NumPossiblyInvalidSamps',
           'DAQmx_AI_ChanCal_ApplyCalIfExp',
           'DAQmxErrorPulseActiveAtStart',
           'DAQmxErrorTEDSMappingMethodInvalidOrUnsupported',
           'DAQmxSetCIAngEncoderUnits',
           'DAQmx_Val_Switch_Topology_2596_Dual_6x1_Mux',
           'DAQmxErrorPhysicalChanNotOnThisConnector',
           'DAQmxGetReadNumChans', 'DAQmx_Write_RawDataWidth',
           'DAQmxGetCITwoEdgeSepFirstDigFltrEnable',
           'DAQmxError20MhzTimebaseNotSupportedGivenTimingType',
           'DAQmx_AI_Resolution', 'DAQmx_Write_Offset',
           'DAQmxErrorInvalidIDInListAtBeginningOfSwitchOperation',
           'DAQmxErrorCOMultipleWritesBetweenSampClks',
           'DAQmxResetAODACRefExtSrc',
           'DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth',
           'DAQmxSetCIEncoderZIndexEnable',
           'DAQmxSetCOPulseTimeInitialDelay',
           'DAQmxErrorPALFunctionNotFound',
           'DAQmxErrorPortDoesNotSupportHandshakingDataIO',
           'DAQmx_AI_Atten', 'DAQmx_AI_Thrmcpl_CJCSrc',
           'DAQmxErrorAttributeInconsistentAcrossRepeatedPhysicalChannels',
           'DAQmxSetCIFreqDigFltrTimebaseRate',
           'DAQmxSetAIMicrophoneSensitivity',
           'DAQmx_AO_UseOnlyOnBrdMem',
           'DAQmxErrorPropertyUnavailWhenUsingOnboardMemory',
           'DAQmxWarningPALTransferOverwritten',
           'DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc',
           'DAQmxSetCOPulseDutyCyc',
           'DAQmx_OnDemand_SimultaneousAOEnable',
           'DAQmxErrorIdentifierInListTooLong',
           'DAQmxErrorCppCantRemoveInvalidEventHandler',
           'DAQmx_Val_Switch_Topology_2575_1_Wire_196x1_Mux',
           'DAQmx_AI_ResistanceCfg', 'DAQmxResetAILowpassCutoffFreq',
           'DAQmxResetRefTrigType', 'DAQmx_SwitchChan_MaxDCSwitchPwr',
           'DAQmxGetCIFreqTerm',
           'DAQmxErrorCabledModuleCannotRouteConvClk',
           'DAQmxResetCIFreqDigFltrTimebaseSrc',
           'DAQmxResetCOPrescaler', 'DAQmxResetCOPulseTerm',
           'DAQmxGetScaleDescr', 'DAQmxGetAnlgWinStartTrigCoupling',
           'DAQmxErrorNoMoreSpace', 'DAQmxErrorDDCClkOutDCMLock',
           'DAQmxGetAnlgLvlPauseTrigLvl',
           'DAQmxErrorInputCfgFailedBecauseWatchdogExpired',
           'DAQmx_Val_Voltage', 'DAQmx_ChanDescr',
           'DAQmxResetCISemiPeriodStartingEdge', 'DAQmxGetSysTasks',
           'DAQmxErrorPrptyGetSpecdActiveItemFailedDueToDifftValues',
           'DAQmx_CI_Freq_DigFltr_MinPulseWidth',
           'DAQmx_Val_EnteringWin',
           'DAQmxErrorSignalEventsNotSupportedByDevice',
           'DAQmxWarningAIConvRateTooLow',
           'DAQmxSetCISemiPeriodDigFltrEnable',
           'DAQmxSetAnlgEdgeStartTrigSrc',
           'DAQmx_Val_20MHzTimebaseClock',
           'DAQmxResetBufInputBufSize',
           'DAQmxSetCICountEdgesDigFltrTimebaseSrc',
           'DAQmxErrorDuplicateDevIDInList',
           'DAQmxResetReadOverWrite', 'DAQmxGetTaskComplete',
           'DAQmxGetSysGlobalChans',
           'DAQmx_CI_Encoder_BInput_DigFltr_TimebaseRate',
           'DAQmxResetCICustomScaleName',
           'DAQmx_Val_Switch_Topology_2532_2_Wire_16x16_Matrix',
           'NULL', 'DAQmxReadDigitalU32',
           'DAQmxGetPhysicalChanTEDSVersionLetter',
           'DAQmxErrorInvalidJumperedAttr',
           'DAQmxGetCIPeriodDigFltrMinPulseWidth',
           'DAQmx_Exported_AdvTrig_OutputTerm',
           'DAQmxErrorTimeStampOverwritten',
           'DAQmxGetDODataXferReqCond', 'DAQmx_Val_SampClk',
           'DAQmx_Exported_10MHzRefClk_OutputTerm',
           'DAQmxResetDIDataXferReqCond',
           'DAQmxErrorMultipleCounterInputTask',
           'DAQmxReadCounterScalarF64',
           'DAQmxGetAIDataXferCustomThreshold',
           'DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate',
           'DAQmx_Exported_ChangeDetectEvent_Pulse_Polarity',
           'DAQmxSetAIMemMapEnable', 'DAQmx_Val_DigEdge',
           'DAQmx_Val_Switch_Topology_2530_1_Wire_Octal_16x1_Mux',
           'DAQmxResetCOCtrTimebaseMasterTimebaseDiv',
           'DAQmxGetCOPulseIdleState',
           'DAQmxErrorDACRngLowNotEqualToMinusRefVal',
           'DAQmx_AI_Bridge_ShuntCal_GainAdjust',
           'DAQmxErrorCIOnboardClockNotSupportedAsInputTerm',
           'DAQmxResetCOPulseIdleState',
           'DAQmxResetDigPatternStartTrigPattern',
           'DAQmxErrorSampClockSourceNotSupportedGivenTimingType',
           'DAQmx_Val_RefTrig', 'DAQmxErrorInvalidChannel',
           'DAQmxErrorCanExportOnlyOnboardSampClk',
           'DAQmxGetAIFreqUnits', 'DAQmxGetPhysicalChanTEDSSerialNum',
           'DAQmxGetDigLvlPauseTrigSrc', 'DAQmx_CO_OutputState',
           'DAQmxErrorReadNoInputChansInTask',
           'DAQmxSetDigLvlPauseTrigDigFltrEnable',
           'DAQmxGetExtCalLastDateAndTime', 'DAQmx_Val_Ticks',
           'DAQmx_AI_Freq_Units', 'DAQmxGetAODevScalingCoeff',
           'DAQmxSetAIStrainGagePoissonRatio', 'DAQmxGetCIPeriodDiv',
           'DAQmx_Val_Switch_Topology_2530_1_Wire_8x16_Matrix',
           'DAQmxErrorExtMasterTimebaseRateNotSpecified',
           'DAQmxErrorPowerupStateNotSupported',
           'DAQmxErrorIntegerExpectedInScript',
           'DAQmxErrorCantSetPropertyTaskNotRunning',
           'DAQmx_CO_Pulse_IdleState', 'DAQmxGetAnlgWinStartTrigTop',
           'DAQmxGetAOOutputImpedance']
